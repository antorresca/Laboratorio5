

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed May 24 16:15:47 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    41                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    43   000000                     
    44                           ; Version 2.40
    45                           ; Generated 04/07/2022 GMT
    46                           ; 
    47                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution. Publication is not required when
    61                           ;        this file is used in an embedded application.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F4550 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79   000000                     
    80                           	psect	idataCOMRAM
    81   001208                     __pidataCOMRAM:
    82                           	callstack 0
    83                           
    84                           ;initializer for _interfaz
    85   001208  08                 	db	8
    86   000000                     _EECON2	set	4007
    87   000000                     _RCREG	set	4014
    88   000000                     _TXREG	set	4013
    89   000000                     _TRISC	set	3988
    90   000000                     _TRISD	set	3989
    91   000000                     _SPBRG	set	4015
    92   000000                     _BAUDCON	set	4024
    93   000000                     _RD	set	32048
    94   000000                     _WR	set	32049
    95   000000                     _WREN	set	32050
    96   000000                     _CFGS	set	32054
    97   000000                     _GO	set	32273
    98   000000                     _RB5	set	31757
    99   000000                     _RB6	set	31758
   100   000000                     _RB7	set	31759
   101   000000                     _TRMT	set	32097
   102   000000                     _RC2	set	31762
   103   000000                     _TRISC2	set	31906
   104   000000                     _RC1	set	31761
   105   000000                     _RC0	set	31760
   106   000000                     _TRISE2	set	31922
   107   000000                     _TMR0ON	set	32431
   108   000000                     _GIE	set	32663
   109   000000                     _TMR0IE	set	32661
   110   000000                     _LATE2	set	31850
   111   000000                     _LATD	set	3980
   112   000000                     _USBEN	set	31595
   113   000000                     _LATC2	set	31834
   114   000000                     _TRISA	set	3986
   115   000000                     _TRISB	set	3987
   116   000000                     _RCSTA	set	4011
   117   000000                     _TXSTA	set	4012
   118   000000                     _OSCCON	set	4051
   119   000000                     _LATE0	set	31848
   120   000000                     _T0CON	set	4053
   121   000000                     _ADCON2	set	4032
   122   000000                     _ADCON1	set	4033
   123   000000                     _ADCON0	set	4034
   124   000000                     _ADRES	set	4035
   125   000000                     _TMR0	set	4054
   126   000000                     _RBPU	set	32655
   127   000000                     _TMR0IF	set	32658
   128   000000                     _RCIF	set	31989
   129   000000                     _TRISE0	set	31920
   130   000000                     _UTRDIS	set	31611
   131   000000                     _RB0	set	31752
   132   000000                     _RC4	set	31764
   133   000000                     _EEDATA	set	4008
   134   000000                     _EEADR	set	4009
   135   000000                     _EEIF	set	32012
   136   000000                     _EEPGD	set	32055
   137                           
   138                           	psect	smallconst
   139   000800                     __psmallconst:
   140                           	callstack 0
   141   000800  00                 	db	0
   142   000801                     STR_1:
   143   000801  55                 	db	85	;'U'
   144   000802  6C                 	db	108	;'l'
   145   000803  74                 	db	116	;'t'
   146   000804  69                 	db	105	;'i'
   147   000805  6D                 	db	109	;'m'
   148   000806  61                 	db	97	;'a'
   149   000807  20                 	db	32
   150   000808  74                 	db	116	;'t'
   151   000809  65                 	db	101	;'e'
   152   00080A  6D                 	db	109	;'m'
   153   00080B  70                 	db	112	;'p'
   154   00080C  3A                 	db	58	;':'
   155   00080D  00                 	db	0
   156   00080E                     STR_2:
   157   00080E  49                 	db	73	;'I'
   158   00080F  6E                 	db	110	;'n'
   159   000810  69                 	db	105	;'i'
   160   000811  63                 	db	99	;'c'
   161   000812  69                 	db	105	;'i'
   162   000813  61                 	db	97	;'a'
   163   000814  6E                 	db	110	;'n'
   164   000815  64                 	db	100	;'d'
   165   000816  6F                 	db	111	;'o'
   166   000817  00                 	db	0
   167   000818                     STR_3:
   168   000818  54                 	db	84	;'T'
   169   000819  65                 	db	101	;'e'
   170   00081A  6D                 	db	109	;'m'
   171   00081B  70                 	db	112	;'p'
   172   00081C  3A                 	db	58	;':'
   173   00081D  00                 	db	0
   174   00081E                     STR_4:
   175   00081E  48                 	db	72	;'H'
   176   00081F  75                 	db	117	;'u'
   177   000820  6D                 	db	109	;'m'
   178   000821  3A                 	db	58	;':'
   179   000822  00                 	db	0
   180   000823  00                 	db	0	; dummy byte at the end
   181   000000                     
   182                           ; #config settings
   183                           
   184                           	psect	cinit
   185   0010B8                     __pcinit:
   186                           	callstack 0
   187   0010B8                     start_initialization:
   188                           	callstack 0
   189   0010B8                     __initialization:
   190                           	callstack 0
   191                           
   192                           ; Initialize objects allocated to COMRAM (1 bytes)
   193                           ; load TBLPTR registers with __pidataCOMRAM
   194   0010B8  0E08               	movlw	low __pidataCOMRAM
   195   0010BA  6EF6               	movwf	tblptrl,c
   196   0010BC  0E12               	movlw	high __pidataCOMRAM
   197   0010BE  6EF7               	movwf	tblptrh,c
   198   0010C0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   199   0010C2  6EF8               	movwf	tblptru,c
   200   0010C4  0009               	tblrd		*+	;fetch initializer
   201   0010C6  CFF5 F020          	movff	tablat,__pdataCOMRAM
   202                           
   203                           ; Clear objects allocated to COMRAM (7 bytes)
   204   0010CA  EE00  F019         	lfsr	0,__pbssCOMRAM
   205   0010CE  0E07               	movlw	7
   206   0010D0                     clear_0:
   207   0010D0  6AEE               	clrf	postinc0,c
   208   0010D2  06E8               	decf	wreg,f,c
   209   0010D4  E1FD               	bnz	clear_0
   210   0010D6                     end_of_initialization:
   211                           	callstack 0
   212   0010D6                     __end_of__initialization:
   213                           	callstack 0
   214   0010D6  9021               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   215   0010D8  9221               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   216   0010DA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   217   0010DC  6EF8               	movwf	tblptru,c
   218   0010DE  0100               	movlb	0
   219   0010E0  EF5A  F005         	goto	_main	;jump to C main() function
   220                           
   221                           	psect	bssCOMRAM
   222   000019                     __pbssCOMRAM:
   223                           	callstack 0
   224   000019                     _B:
   225                           	callstack 0
   226   000019                     	ds	2
   227   00001B                     _A:
   228                           	callstack 0
   229   00001B                     	ds	2
   230   00001D                     _TempEEPROM:
   231                           	callstack 0
   232   00001D                     	ds	1
   233   00001E                     _Hum:
   234                           	callstack 0
   235   00001E                     	ds	1
   236   00001F                     _Temp:
   237                           	callstack 0
   238   00001F                     	ds	1
   239                           
   240                           	psect	dataCOMRAM
   241   000020                     __pdataCOMRAM:
   242                           	callstack 0
   243   000020                     _interfaz:
   244                           	callstack 0
   245   000020                     	ds	1
   246                           
   247                           	psect	cstackCOMRAM
   248   000001                     __pcstackCOMRAM:
   249                           	callstack 0
   250   000001                     ??_ISR:
   251   000001                     
   252                           ; 2 bytes @ 0x0
   253   000001                     	ds	2
   254   000003                     ??_RetardoLCD:
   255   000003                     ?___wmul:
   256                           	callstack 0
   257   000003                     ?___awdiv:
   258                           	callstack 0
   259   000003                     ?___lwdiv:
   260                           	callstack 0
   261   000003                     ?___lwmod:
   262                           	callstack 0
   263   000003                     LeerBit@res:
   264                           	callstack 0
   265   000003                     Transmitir@BufferT:
   266                           	callstack 0
   267   000003                     Conversion@canal:
   268                           	callstack 0
   269   000003                     ___lbdiv@divisor:
   270                           	callstack 0
   271   000003                     ___lbmod@divisor:
   272                           	callstack 0
   273   000003                     ColorRGB@val:
   274                           	callstack 0
   275   000003                     GuardarDatoEnEEPROM@dir:
   276                           	callstack 0
   277   000003                     leerDatoEnEEPROM@dir:
   278                           	callstack 0
   279   000003                     ___wmul@multiplier:
   280                           	callstack 0
   281   000003                     ___awdiv@dividend:
   282                           	callstack 0
   283   000003                     ___lwdiv@dividend:
   284                           	callstack 0
   285   000003                     ___lwmod@dividend:
   286                           	callstack 0
   287                           
   288                           ; 2 bytes @ 0x2
   289   000003                     	ds	1
   290   000004                     ??_LeerByte:
   291   000004                     RetardoLCD@a:
   292                           	callstack 0
   293   000004                     ___lbdiv@dividend:
   294                           	callstack 0
   295   000004                     ___lbmod@dividend:
   296                           	callstack 0
   297                           
   298                           ; 1 bytes @ 0x3
   299   000004                     	ds	1
   300   000005                     EnviaDato@a:
   301                           	callstack 0
   302   000005                     LeerByte@res:
   303                           	callstack 0
   304   000005                     GuardarDatoEnEEPROM@dato:
   305                           	callstack 0
   306   000005                     ___lbdiv@counter:
   307                           	callstack 0
   308   000005                     ___lbmod@counter:
   309                           	callstack 0
   310   000005                     ___wmul@multiplicand:
   311                           	callstack 0
   312   000005                     ___awdiv@divisor:
   313                           	callstack 0
   314   000005                     ___lwdiv@divisor:
   315                           	callstack 0
   316   000005                     ___lwmod@divisor:
   317                           	callstack 0
   318                           
   319                           ; 2 bytes @ 0x4
   320   000005                     	ds	1
   321   000006                     EscribeLCD_c@a:
   322                           	callstack 0
   323   000006                     DireccionaLCD@a:
   324                           	callstack 0
   325   000006                     LeerByte@i:
   326                           	callstack 0
   327   000006                     ___lbdiv@quotient:
   328                           	callstack 0
   329   000006                     ___lbmod@rem:
   330                           	callstack 0
   331                           
   332                           ; 1 bytes @ 0x5
   333   000006                     	ds	1
   334   000007                     ??_LeerHT11:
   335   000007                     MensajeLCD_Word@a:
   336                           	callstack 0
   337   000007                     ___awdiv@counter:
   338                           	callstack 0
   339   000007                     ___lwmod@counter:
   340                           	callstack 0
   341   000007                     ___wmul@product:
   342                           	callstack 0
   343   000007                     ___lwdiv@quotient:
   344                           	callstack 0
   345                           
   346                           ; 2 bytes @ 0x6
   347   000007                     	ds	1
   348   000008                     ??_MensajeLCD_Word:
   349   000008                     ___awdiv@sign:
   350                           	callstack 0
   351                           
   352                           ; 1 bytes @ 0x7
   353   000008                     	ds	1
   354   000009                     ___lwdiv@counter:
   355                           	callstack 0
   356   000009                     MensajeLCD_Word@i:
   357                           	callstack 0
   358   000009                     ___awdiv@quotient:
   359                           	callstack 0
   360                           
   361                           ; 2 bytes @ 0x8
   362   000009                     	ds	2
   363   00000B                     TransmitirDatos@Ent1:
   364                           	callstack 0
   365                           
   366                           ; 2 bytes @ 0xA
   367   00000B                     	ds	2
   368   00000D                     TransmitirDatos@Ent2:
   369                           	callstack 0
   370                           
   371                           ; 2 bytes @ 0xC
   372   00000D                     	ds	2
   373   00000F                     ??_TransmitirDatos:
   374                           
   375                           ; 1 bytes @ 0xE
   376   00000F                     	ds	2
   377   000011                     TransmitirDatos@n:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0x10
   381   000011                     	ds	2
   382   000013                     TransmitirDatos@Simb:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0x12
   386   000013                     	ds	2
   387   000015                     TransmitirDatos@TempC:
   388                           	callstack 0
   389                           
   390                           ; 2 bytes @ 0x14
   391   000015                     	ds	2
   392   000017                     ??_main:
   393                           
   394                           ; 1 bytes @ 0x16
   395   000017                     	ds	2
   396                           
   397 ;;
   398 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   399 ;;
   400 ;; *************** function _main *****************
   401 ;; Defined at:
   402 ;;		line 35 in file "Laboratorio5.c"
   403 ;; Parameters:    Size  Location     Type
   404 ;;		None
   405 ;; Auto vars:     Size  Location     Type
   406 ;;		None
   407 ;; Return value:  Size  Location     Type
   408 ;;                  1    wreg      void 
   409 ;; Registers used:
   410 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   411 ;; Tracked objects:
   412 ;;		On entry : 0/0
   413 ;;		On exit  : 0/0
   414 ;;		Unchanged: 0/0
   415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   416 ;;      Params:         0       0       0       0       0       0       0       0       0
   417 ;;      Locals:         0       0       0       0       0       0       0       0       0
   418 ;;      Temps:          2       0       0       0       0       0       0       0       0
   419 ;;      Totals:         2       0       0       0       0       0       0       0       0
   420 ;;Total ram usage:        2 bytes
   421 ;; Hardware stack levels required when called: 7
   422 ;; This function calls:
   423 ;;		_BorraLCD
   424 ;;		_ColorRGB
   425 ;;		_Conversion
   426 ;;		_DireccionaLCD
   427 ;;		_EscribeLCD_c
   428 ;;		_GuardarDatoEnEEPROM
   429 ;;		_InicializaLCD
   430 ;;		_LeerHT11
   431 ;;		_MensajeLCD_Word
   432 ;;		_TransmitirDatos
   433 ;;		___lbdiv
   434 ;;		___lbmod
   435 ;;		_leerDatoEnEEPROM
   436 ;; This function is called by:
   437 ;;		Startup code after reset
   438 ;; This function uses a non-reentrant model
   439 ;;
   440                           
   441                           	psect	text0
   442   000AB4                     __ptext0:
   443                           	callstack 0
   444   000AB4                     _main:
   445                           	callstack 24
   446                           
   447                           ;Laboratorio5.c: 38: OSCCON = 0b01110000;
   448                           
   449                           ;incstack = 0
   450   000AB4  0E70               	movlw	112
   451   000AB6  6ED3               	movwf	211,c	;volatile
   452                           
   453                           ;Laboratorio5.c: 39: _delay((unsigned long)((1)*(8000000/4000.0)));
   454   000AB8  0E03               	movlw	3
   455   000ABA  6E17               	movwf	??_main^0,c
   456   000ABC  0E98               	movlw	152
   457   000ABE                     u997:
   458   000ABE  2EE8               	decfsz	wreg,f,c
   459   000AC0  D7FE               	bra	u997
   460   000AC2  2E17               	decfsz	??_main^0,f,c
   461   000AC4  D7FC               	bra	u997
   462                           
   463                           ;Laboratorio5.c: 40: LATC2 = 0;
   464   000AC6  948B               	bcf	3979,2,c	;volatile
   465                           
   466                           ;Laboratorio5.c: 41: TXSTA = 0b00100100;
   467   000AC8  0E24               	movlw	36
   468   000ACA  6EAC               	movwf	172,c	;volatile
   469                           
   470                           ;Laboratorio5.c: 42: RCSTA = 0b10010000;
   471   000ACC  0E90               	movlw	144
   472   000ACE  6EAB               	movwf	171,c	;volatile
   473                           
   474                           ;Laboratorio5.c: 43: BAUDCON = 0b00000000;
   475   000AD0  0E00               	movlw	0
   476   000AD2  6EB8               	movwf	184,c	;volatile
   477                           
   478                           ;Laboratorio5.c: 45: SPBRG = 12;
   479   000AD4  0E0C               	movlw	12
   480   000AD6  6EAF               	movwf	175,c	;volatile
   481                           
   482                           ;Laboratorio5.c: 47: ADCON0 = 0b00000001;
   483   000AD8  0E01               	movlw	1
   484   000ADA  6EC2               	movwf	194,c	;volatile
   485                           
   486                           ;Laboratorio5.c: 48: ADCON1 = 13;
   487   000ADC  0E0D               	movlw	13
   488   000ADE  6EC1               	movwf	193,c	;volatile
   489                           
   490                           ;Laboratorio5.c: 49: ADCON2 = 0b10001000;
   491   000AE0  0E88               	movlw	136
   492   000AE2  6EC0               	movwf	192,c	;volatile
   493                           
   494                           ;Laboratorio5.c: 57: T0CON=0b00000011;
   495   000AE4  0E03               	movlw	3
   496   000AE6  6ED5               	movwf	213,c	;volatile
   497                           
   498                           ;Laboratorio5.c: 58: TMR0IF=0;
   499   000AE8  94F2               	bcf	4082,2,c	;volatile
   500                           
   501                           ;Laboratorio5.c: 59: TMR0=3036;
   502   000AEA  0E0B               	movlw	11
   503   000AEC  6ED7               	movwf	215,c	;volatile
   504   000AEE  0EDC               	movlw	220
   505   000AF0  6ED6               	movwf	214,c	;volatile
   506                           
   507                           ;Laboratorio5.c: 60: TMR0IE=1;
   508   000AF2  8AF2               	bsf	4082,5,c	;volatile
   509                           
   510                           ;Laboratorio5.c: 61: GIE=1;
   511   000AF4  8EF2               	bsf	4082,7,c	;volatile
   512                           
   513                           ;Laboratorio5.c: 62: TMR0ON=1;
   514   000AF6  8ED5               	bsf	4053,7,c	;volatile
   515                           
   516                           ;Laboratorio5.c: 66: TRISB = 0;
   517   000AF8  0E00               	movlw	0
   518   000AFA  6E93               	movwf	147,c	;volatile
   519                           
   520                           ;Laboratorio5.c: 67: TRISD = 0;
   521   000AFC  0E00               	movlw	0
   522   000AFE  6E95               	movwf	149,c	;volatile
   523                           
   524                           ;Laboratorio5.c: 68: TRISE0 = 0;
   525   000B00  9096               	bcf	3990,0,c	;volatile
   526                           
   527                           ;Laboratorio5.c: 69: TRISE2 = 0;
   528   000B02  9496               	bcf	3990,2,c	;volatile
   529                           
   530                           ;Laboratorio5.c: 70: TRISA = 0b00000001;
   531   000B04  0E01               	movlw	1
   532   000B06  6E92               	movwf	146,c	;volatile
   533                           
   534                           ;Laboratorio5.c: 71: USBEN = 0;
   535   000B08  966D               	bcf	3949,3,c	;volatile
   536                           
   537                           ;Laboratorio5.c: 72: UTRDIS = 1;
   538   000B0A  866F               	bsf	3951,3,c	;volatile
   539                           
   540                           ;Laboratorio5.c: 73: TRISC = 0b11110110;
   541   000B0C  0EF6               	movlw	246
   542   000B0E  6E94               	movwf	148,c	;volatile
   543                           
   544                           ;Laboratorio5.c: 74: RBPU = 0;
   545   000B10  9EF1               	bcf	4081,7,c	;volatile
   546                           
   547                           ;Laboratorio5.c: 75: LATC2 = 0;
   548   000B12  948B               	bcf	3979,2,c	;volatile
   549                           
   550                           ;Laboratorio5.c: 76: TempEEPROM = leerDatoEnEEPROM(0);
   551   000B14  0E00               	movlw	0
   552   000B16  6E04               	movwf	(leerDatoEnEEPROM@dir+1)^0,c
   553   000B18  0E00               	movlw	0
   554   000B1A  6E03               	movwf	leerDatoEnEEPROM@dir^0,c
   555   000B1C  ECE8  F008         	call	_leerDatoEnEEPROM	;wreg free
   556   000B20  6E1D               	movwf	_TempEEPROM^0,c
   557                           
   558                           ;Laboratorio5.c: 79: InicializaLCD();
   559   000B22  ECE9  F007         	call	_InicializaLCD	;wreg free
   560                           
   561                           ;Laboratorio5.c: 82: BorraLCD();
   562   000B26  ECD4  F008         	call	_BorraLCD	;wreg free
   563                           
   564                           ;Laboratorio5.c: 84: if (TempEEPROM != 0xFF) {
   565   000B2A  281D               	incf	_TempEEPROM^0,w,c
   566   000B2C  B4D8               	btfsc	status,2,c
   567   000B2E  D028               	goto	l1990
   568                           
   569                           ;Laboratorio5.c: 85: MensajeLCD_Word("Ultima temp:");
   570   000B30  0E01               	movlw	low STR_1
   571   000B32  6E07               	movwf	MensajeLCD_Word@a^0,c
   572   000B34  ECA1  F007         	call	_MensajeLCD_Word	;wreg free
   573                           
   574                           ;Laboratorio5.c: 86: DireccionaLCD(192);
   575   000B38  0EC0               	movlw	192
   576   000B3A  ECC9  F008         	call	_DireccionaLCD
   577                           
   578                           ;Laboratorio5.c: 87: EscribeLCD_c(TempEEPROM / 10 + 48);
   579   000B3E  0E0A               	movlw	10
   580   000B40  6E03               	movwf	___lbdiv@divisor^0,c
   581   000B42  501D               	movf	_TempEEPROM^0,w,c
   582   000B44  EC0A  F008         	call	___lbdiv
   583   000B48  0F30               	addlw	48
   584   000B4A  ECBE  F008         	call	_EscribeLCD_c
   585                           
   586                           ;Laboratorio5.c: 88: EscribeLCD_c(TempEEPROM % 10 + 48);
   587   000B4E  0E0A               	movlw	10
   588   000B50  6E03               	movwf	___lbmod@divisor^0,c
   589   000B52  501D               	movf	_TempEEPROM^0,w,c
   590   000B54  EC72  F008         	call	___lbmod
   591   000B58  0F30               	addlw	48
   592   000B5A  ECBE  F008         	call	_EscribeLCD_c
   593                           
   594                           ;Laboratorio5.c: 89: EscribeLCD_c('C');
   595   000B5E  0E43               	movlw	67
   596   000B60  ECBE  F008         	call	_EscribeLCD_c
   597                           
   598                           ;Laboratorio5.c: 90: _delay((unsigned long)((2000)*(8000000/4000.0)));
   599   000B64  0E15               	movlw	21
   600   000B66  6E18               	movwf	(??_main+1)^0,c
   601   000B68  0E4B               	movlw	75
   602   000B6A  6E17               	movwf	??_main^0,c
   603   000B6C  0EBE               	movlw	190
   604   000B6E                     u1007:
   605   000B6E  2EE8               	decfsz	wreg,f,c
   606   000B70  D7FE               	bra	u1007
   607   000B72  2E17               	decfsz	??_main^0,f,c
   608   000B74  D7FC               	bra	u1007
   609   000B76  2E18               	decfsz	(??_main+1)^0,f,c
   610   000B78  D7FA               	bra	u1007
   611   000B7A  D000               	nop2	
   612                           
   613                           ;Laboratorio5.c: 91: BorraLCD();
   614   000B7C  ECD4  F008         	call	_BorraLCD	;wreg free
   615   000B80                     l1990:
   616                           
   617                           ;Laboratorio5.c: 92: };Laboratorio5.c: 94: MensajeLCD_Word("Iniciando");
   618   000B80  0E0E               	movlw	low STR_2
   619   000B82  6E07               	movwf	MensajeLCD_Word@a^0,c
   620   000B84  ECA1  F007         	call	_MensajeLCD_Word	;wreg free
   621                           
   622                           ;Laboratorio5.c: 95: _delay((unsigned long)((500)*(8000000/4000.0)));
   623   000B88  0E06               	movlw	6
   624   000B8A  6E18               	movwf	(??_main+1)^0,c
   625   000B8C  0E13               	movlw	19
   626   000B8E  6E17               	movwf	??_main^0,c
   627   000B90  0EAE               	movlw	174
   628   000B92                     u1017:
   629   000B92  2EE8               	decfsz	wreg,f,c
   630   000B94  D7FE               	bra	u1017
   631   000B96  2E17               	decfsz	??_main^0,f,c
   632   000B98  D7FC               	bra	u1017
   633   000B9A  2E18               	decfsz	(??_main+1)^0,f,c
   634   000B9C  D7FA               	bra	u1017
   635                           
   636                           ;Laboratorio5.c: 96: EscribeLCD_c(46);
   637   000B9E  0E2E               	movlw	46
   638   000BA0  ECBE  F008         	call	_EscribeLCD_c
   639                           
   640                           ;Laboratorio5.c: 97: _delay((unsigned long)((500)*(8000000/4000.0)));
   641   000BA4  0E06               	movlw	6
   642   000BA6  6E18               	movwf	(??_main+1)^0,c
   643   000BA8  0E13               	movlw	19
   644   000BAA  6E17               	movwf	??_main^0,c
   645   000BAC  0EAE               	movlw	174
   646   000BAE                     u1027:
   647   000BAE  2EE8               	decfsz	wreg,f,c
   648   000BB0  D7FE               	bra	u1027
   649   000BB2  2E17               	decfsz	??_main^0,f,c
   650   000BB4  D7FC               	bra	u1027
   651   000BB6  2E18               	decfsz	(??_main+1)^0,f,c
   652   000BB8  D7FA               	bra	u1027
   653                           
   654                           ;Laboratorio5.c: 98: EscribeLCD_c(46);
   655   000BBA  0E2E               	movlw	46
   656   000BBC  ECBE  F008         	call	_EscribeLCD_c
   657                           
   658                           ;Laboratorio5.c: 99: _delay((unsigned long)((500)*(8000000/4000.0)));
   659   000BC0  0E06               	movlw	6
   660   000BC2  6E18               	movwf	(??_main+1)^0,c
   661   000BC4  0E13               	movlw	19
   662   000BC6  6E17               	movwf	??_main^0,c
   663   000BC8  0EAE               	movlw	174
   664   000BCA                     u1037:
   665   000BCA  2EE8               	decfsz	wreg,f,c
   666   000BCC  D7FE               	bra	u1037
   667   000BCE  2E17               	decfsz	??_main^0,f,c
   668   000BD0  D7FC               	bra	u1037
   669   000BD2  2E18               	decfsz	(??_main+1)^0,f,c
   670   000BD4  D7FA               	bra	u1037
   671                           
   672                           ;Laboratorio5.c: 100: EscribeLCD_c(46);
   673   000BD6  0E2E               	movlw	46
   674   000BD8  ECBE  F008         	call	_EscribeLCD_c
   675                           
   676                           ;Laboratorio5.c: 101: _delay((unsigned long)((500)*(8000000/4000.0)));
   677   000BDC  0E06               	movlw	6
   678   000BDE  6E18               	movwf	(??_main+1)^0,c
   679   000BE0  0E13               	movlw	19
   680   000BE2  6E17               	movwf	??_main^0,c
   681   000BE4  0EAE               	movlw	174
   682   000BE6                     u1047:
   683   000BE6  2EE8               	decfsz	wreg,f,c
   684   000BE8  D7FE               	bra	u1047
   685   000BEA  2E17               	decfsz	??_main^0,f,c
   686   000BEC  D7FC               	bra	u1047
   687   000BEE  2E18               	decfsz	(??_main+1)^0,f,c
   688   000BF0  D7FA               	bra	u1047
   689                           
   690                           ;Laboratorio5.c: 102: BorraLCD();
   691   000BF2  ECD4  F008         	call	_BorraLCD	;wreg free
   692   000BF6                     l2002:
   693                           
   694                           ;Laboratorio5.c: 106: _delay((unsigned long)((500)*(8000000/4000.0)));
   695   000BF6  0E06               	movlw	6
   696   000BF8  6E18               	movwf	(??_main+1)^0,c
   697   000BFA  0E13               	movlw	19
   698   000BFC  6E17               	movwf	??_main^0,c
   699   000BFE  0EAE               	movlw	174
   700   000C00                     u1057:
   701   000C00  2EE8               	decfsz	wreg,f,c
   702   000C02  D7FE               	bra	u1057
   703   000C04  2E17               	decfsz	??_main^0,f,c
   704   000C06  D7FC               	bra	u1057
   705   000C08  2E18               	decfsz	(??_main+1)^0,f,c
   706   000C0A  D7FA               	bra	u1057
   707                           
   708                           ;Laboratorio5.c: 108: _delay((unsigned long)((500)*(8000000/4000.0)));
   709   000C0C  0E06               	movlw	6
   710   000C0E  6E18               	movwf	(??_main+1)^0,c
   711   000C10  0E13               	movlw	19
   712   000C12  6E17               	movwf	??_main^0,c
   713   000C14  0EAE               	movlw	174
   714   000C16                     u1067:
   715   000C16  2EE8               	decfsz	wreg,f,c
   716   000C18  D7FE               	bra	u1067
   717   000C1A  2E17               	decfsz	??_main^0,f,c
   718   000C1C  D7FC               	bra	u1067
   719   000C1E  2E18               	decfsz	(??_main+1)^0,f,c
   720   000C20  D7FA               	bra	u1067
   721                           
   722                           ;Laboratorio5.c: 110: LeerHT11();
   723   000C22  EC27  F008         	call	_LeerHT11	;wreg free
   724                           
   725                           ;Laboratorio5.c: 112: GuardarDatoEnEEPROM(0, Temp);
   726   000C26  0E00               	movlw	0
   727   000C28  6E04               	movwf	(GuardarDatoEnEEPROM@dir+1)^0,c
   728   000C2A  0E00               	movlw	0
   729   000C2C  6E03               	movwf	GuardarDatoEnEEPROM@dir^0,c
   730   000C2E  C01F  F005         	movff	_Temp,GuardarDatoEnEEPROM@dato
   731   000C32  EC9A  F008         	call	_GuardarDatoEnEEPROM	;wreg free
   732                           
   733                           ;Laboratorio5.c: 113: ColorRGB(Temp);
   734   000C36  C01F  F003         	movff	_Temp,ColorRGB@val
   735   000C3A  6A04               	clrf	(ColorRGB@val+1)^0,c
   736   000C3C  EC4A  F006         	call	_ColorRGB	;wreg free
   737                           
   738                           ;Laboratorio5.c: 116: if(!RC4) TransmitirDatos(RC0, RC1);
   739   000C40  B882               	btfsc	3970,4,c	;volatile
   740   000C42  D011               	goto	l2014
   741   000C44  A082               	btfss	3970,0,c	;volatile
   742   000C46  D002               	goto	u930
   743   000C48  0E01               	movlw	1
   744   000C4A  D001               	goto	u940
   745   000C4C                     u930:
   746   000C4C  0E00               	movlw	0
   747   000C4E                     u940:
   748   000C4E  6E0B               	movwf	TransmitirDatos@Ent1^0,c
   749   000C50  6A0C               	clrf	(TransmitirDatos@Ent1+1)^0,c
   750   000C52  A282               	btfss	3970,1,c	;volatile
   751   000C54  D002               	goto	u950
   752   000C56  0E01               	movlw	1
   753   000C58  D001               	goto	u960
   754   000C5A                     u950:
   755   000C5A  0E00               	movlw	0
   756   000C5C                     u960:
   757   000C5C  6E0D               	movwf	TransmitirDatos@Ent2^0,c
   758   000C5E  6A0E               	clrf	(TransmitirDatos@Ent2+1)^0,c
   759   000C60  EC12  F004         	call	_TransmitirDatos	;wreg free
   760   000C64  D00A               	goto	l2016
   761   000C66                     l2014:
   762                           
   763                           ;Laboratorio5.c: 117: else TransmitirDatos(A, B);
   764   000C66  C01B  F00B         	movff	_A,TransmitirDatos@Ent1
   765   000C6A  C01C  F00C         	movff	_A+1,TransmitirDatos@Ent1+1
   766   000C6E  C019  F00D         	movff	_B,TransmitirDatos@Ent2
   767   000C72  C01A  F00E         	movff	_B+1,TransmitirDatos@Ent2+1
   768   000C76  EC12  F004         	call	_TransmitirDatos	;wreg free
   769   000C7A                     l2016:
   770                           
   771                           ;Laboratorio5.c: 118: Conversion(0);
   772   000C7A  0E00               	movlw	0
   773   000C7C  ECDE  F008         	call	_Conversion
   774                           
   775                           ;Laboratorio5.c: 119: RB0 = (ADRES <= 511) ? 0 : 1;
   776   000C80  0E00               	movlw	0
   777   000C82  5CC3               	subwf	195,w,c	;volatile
   778   000C84  0E02               	movlw	2
   779   000C86  58C4               	subwfb	196,w,c	;volatile
   780   000C88  A0D8               	btfss	status,0,c
   781   000C8A  D002               	goto	u970
   782   000C8C  8081               	bsf	3969,0,c	;volatile
   783   000C8E  D7B3               	goto	l2002
   784   000C90                     u970:
   785   000C90  9081               	bcf	3969,0,c	;volatile
   786   000C92  D7B1               	goto	l2002
   787   000C94                     __end_of_main:
   788                           	callstack 0
   789                           
   790 ;; *************** function _leerDatoEnEEPROM *****************
   791 ;; Defined at:
   792 ;;		line 306 in file "Laboratorio5.c"
   793 ;; Parameters:    Size  Location     Type
   794 ;;  dir             2    2[COMRAM] unsigned int 
   795 ;; Auto vars:     Size  Location     Type
   796 ;;		None
   797 ;; Return value:  Size  Location     Type
   798 ;;                  1    wreg      unsigned char 
   799 ;; Registers used:
   800 ;;		wreg, status,2
   801 ;; Tracked objects:
   802 ;;		On entry : 0/0
   803 ;;		On exit  : 0/0
   804 ;;		Unchanged: 0/0
   805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   806 ;;      Params:         2       0       0       0       0       0       0       0       0
   807 ;;      Locals:         0       0       0       0       0       0       0       0       0
   808 ;;      Temps:          0       0       0       0       0       0       0       0       0
   809 ;;      Totals:         2       0       0       0       0       0       0       0       0
   810 ;;Total ram usage:        2 bytes
   811 ;; Hardware stack levels used: 1
   812 ;; Hardware stack levels required when called: 2
   813 ;; This function calls:
   814 ;;		Nothing
   815 ;; This function is called by:
   816 ;;		_main
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820                           	psect	text1
   821   0011D0                     __ptext1:
   822                           	callstack 0
   823   0011D0                     _leerDatoEnEEPROM:
   824                           	callstack 28
   825                           
   826                           ;Laboratorio5.c: 307: EEADR = dir;
   827                           
   828                           ;incstack = 0
   829   0011D0  C003  FFA9         	movff	leerDatoEnEEPROM@dir,4009	;volatile
   830                           
   831                           ;Laboratorio5.c: 308: EEPGD = 0;
   832   0011D4  9EA6               	bcf	4006,7,c	;volsfr
   833                           
   834                           ;Laboratorio5.c: 309: CFGS = 0;
   835   0011D6  9CA6               	bcf	4006,6,c	;volsfr
   836                           
   837                           ;Laboratorio5.c: 310: RD = 1;
   838   0011D8  80A6               	bsf	4006,0,c	;volsfr
   839                           
   840                           ;Laboratorio5.c: 312: return EEDATA;
   841   0011DA  50A8               	movf	168,w,c	;volatile
   842   0011DC  0012               	return		;funcret
   843   0011DE                     __end_of_leerDatoEnEEPROM:
   844                           	callstack 0
   845                           
   846 ;; *************** function _TransmitirDatos *****************
   847 ;; Defined at:
   848 ;;		line 173 in file "Laboratorio5.c"
   849 ;; Parameters:    Size  Location     Type
   850 ;;  Ent1            2   10[COMRAM] unsigned int 
   851 ;;  Ent2            2   12[COMRAM] unsigned int 
   852 ;; Auto vars:     Size  Location     Type
   853 ;;  TempC           2   20[COMRAM] unsigned int 
   854 ;;  Simb            2   18[COMRAM] unsigned int 
   855 ;;  n               2   16[COMRAM] unsigned int 
   856 ;;  HumC            2    0        unsigned int 
   857 ;; Return value:  Size  Location     Type
   858 ;;                  1    wreg      void 
   859 ;; Registers used:
   860 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   861 ;; Tracked objects:
   862 ;;		On entry : 0/0
   863 ;;		On exit  : 0/0
   864 ;;		Unchanged: 0/0
   865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   866 ;;      Params:         4       0       0       0       0       0       0       0       0
   867 ;;      Locals:         6       0       0       0       0       0       0       0       0
   868 ;;      Temps:          2       0       0       0       0       0       0       0       0
   869 ;;      Totals:        12       0       0       0       0       0       0       0       0
   870 ;;Total ram usage:       12 bytes
   871 ;; Hardware stack levels used: 1
   872 ;; Hardware stack levels required when called: 6
   873 ;; This function calls:
   874 ;;		_BorraLCD
   875 ;;		_DireccionaLCD
   876 ;;		_EscribeLCD_c
   877 ;;		_MensajeLCD_Word
   878 ;;		_Transmitir
   879 ;;		___awdiv
   880 ;;		___lbdiv
   881 ;;		___lbmod
   882 ;;		___lwdiv
   883 ;;		___lwmod
   884 ;;		___wmul
   885 ;; This function is called by:
   886 ;;		_main
   887 ;; This function uses a non-reentrant model
   888 ;;
   889                           
   890                           	psect	text2
   891   000824                     __ptext2:
   892                           	callstack 0
   893   000824                     _TransmitirDatos:
   894                           	callstack 24
   895                           
   896                           ;Laboratorio5.c: 174: unsigned int n = Ent1 * 10 + Ent2, TempC = Temp, HumC = Hum;
   897                           
   898                           ;incstack = 0
   899   000824  C00B  F003         	movff	TransmitirDatos@Ent1,___wmul@multiplier
   900   000828  C00C  F004         	movff	TransmitirDatos@Ent1+1,___wmul@multiplier+1
   901   00082C  0E00               	movlw	0
   902   00082E  6E06               	movwf	(___wmul@multiplicand+1)^0,c
   903   000830  0E0A               	movlw	10
   904   000832  6E05               	movwf	___wmul@multiplicand^0,c
   905   000834  EC87  F008         	call	___wmul	;wreg free
   906   000838  500D               	movf	TransmitirDatos@Ent2^0,w,c
   907   00083A  2403               	addwf	?___wmul^0,w,c
   908   00083C  6E11               	movwf	TransmitirDatos@n^0,c
   909   00083E  500E               	movf	(TransmitirDatos@Ent2+1)^0,w,c
   910   000840  2004               	addwfc	(?___wmul+1)^0,w,c
   911   000842  6E12               	movwf	(TransmitirDatos@n+1)^0,c
   912   000844  C01F  F015         	movff	_Temp,TransmitirDatos@TempC
   913   000848  6A16               	clrf	(TransmitirDatos@TempC+1)^0,c
   914                           
   915                           ;Laboratorio5.c: 175: unsigned int Simb = 67;
   916   00084A  0E00               	movlw	0
   917   00084C  6E14               	movwf	(TransmitirDatos@Simb+1)^0,c
   918   00084E  0E43               	movlw	67
   919   000850  6E13               	movwf	TransmitirDatos@Simb^0,c
   920                           
   921                           ;Laboratorio5.c: 176: BorraLCD();
   922   000852  ECD4  F008         	call	_BorraLCD	;wreg free
   923                           
   924                           ;Laboratorio5.c: 177: switch (n) {
   925   000856  D03E               	goto	l1856
   926   000858                     l249:
   927                           
   928                           ;Laboratorio5.c: 179: TempC = Temp;
   929   000858  C01F  F015         	movff	_Temp,TransmitirDatos@TempC
   930   00085C  6A16               	clrf	(TransmitirDatos@TempC+1)^0,c
   931                           
   932                           ;Laboratorio5.c: 180: Simb = 67;
   933   00085E  0E00               	movlw	0
   934   000860  6E14               	movwf	(TransmitirDatos@Simb+1)^0,c
   935   000862  0E43               	movlw	67
   936   000864  D035               	goto	L3
   937   000866                     l1842:
   938                           
   939                           ;Laboratorio5.c: 183: TempC = Temp + 273;
   940   000866  0E11               	movlw	17
   941   000868  241F               	addwf	_Temp^0,w,c
   942   00086A  6E15               	movwf	TransmitirDatos@TempC^0,c
   943   00086C  6A16               	clrf	(TransmitirDatos@TempC+1)^0,c
   944   00086E  0E01               	movlw	1
   945   000870  2216               	addwfc	(TransmitirDatos@TempC+1)^0,f,c
   946                           
   947                           ;Laboratorio5.c: 184: Simb = 75;
   948   000872  0E00               	movlw	0
   949   000874  6E14               	movwf	(TransmitirDatos@Simb+1)^0,c
   950   000876  0E4B               	movlw	75
   951   000878  D02B               	goto	L3
   952   00087A                     l1846:
   953                           
   954                           ;Laboratorio5.c: 187: TempC = Temp * 9 / 5 + 492;
   955   00087A  501F               	movf	_Temp^0,w,c
   956   00087C  0D09               	mullw	9
   957   00087E  CFF3 F003          	movff	prodl,___awdiv@dividend
   958   000882  CFF4 F004          	movff	prodh,___awdiv@dividend+1
   959   000886  0E00               	movlw	0
   960   000888  6E06               	movwf	(___awdiv@divisor+1)^0,c
   961   00088A  0E05               	movlw	5
   962   00088C  6E05               	movwf	___awdiv@divisor^0,c
   963   00088E  EC03  F007         	call	___awdiv	;wreg free
   964   000892  0EEC               	movlw	236
   965   000894  2403               	addwf	?___awdiv^0,w,c
   966   000896  6E15               	movwf	TransmitirDatos@TempC^0,c
   967   000898  0E01               	movlw	1
   968   00089A  2004               	addwfc	(?___awdiv+1)^0,w,c
   969   00089C  6E16               	movwf	(TransmitirDatos@TempC+1)^0,c
   970                           
   971                           ;Laboratorio5.c: 188: Simb = 82;
   972   00089E  0E00               	movlw	0
   973   0008A0  6E14               	movwf	(TransmitirDatos@Simb+1)^0,c
   974   0008A2  0E52               	movlw	82
   975   0008A4  D015               	goto	L3
   976   0008A6                     l1850:
   977                           
   978                           ;Laboratorio5.c: 191: TempC = Temp * 9 / 5 + 32;
   979   0008A6  501F               	movf	_Temp^0,w,c
   980   0008A8  0D09               	mullw	9
   981   0008AA  CFF3 F003          	movff	prodl,___awdiv@dividend
   982   0008AE  CFF4 F004          	movff	prodh,___awdiv@dividend+1
   983   0008B2  0E00               	movlw	0
   984   0008B4  6E06               	movwf	(___awdiv@divisor+1)^0,c
   985   0008B6  0E05               	movlw	5
   986   0008B8  6E05               	movwf	___awdiv@divisor^0,c
   987   0008BA  EC03  F007         	call	___awdiv	;wreg free
   988   0008BE  0E20               	movlw	32
   989   0008C0  2403               	addwf	?___awdiv^0,w,c
   990   0008C2  6E15               	movwf	TransmitirDatos@TempC^0,c
   991   0008C4  0E00               	movlw	0
   992   0008C6  2004               	addwfc	(?___awdiv+1)^0,w,c
   993   0008C8  6E16               	movwf	(TransmitirDatos@TempC+1)^0,c
   994                           
   995                           ;Laboratorio5.c: 192: Simb = 70;
   996   0008CA  0E00               	movlw	0
   997   0008CC  6E14               	movwf	(TransmitirDatos@Simb+1)^0,c
   998   0008CE  0E46               	movlw	70
   999   0008D0                     L3:
  1000   0008D0  6E13               	movwf	TransmitirDatos@Simb^0,c
  1001                           
  1002                           ;Laboratorio5.c: 193: break;
  1003   0008D2  D015               	goto	l1858
  1004   0008D4                     l1856:
  1005   0008D4  C011  F00F         	movff	TransmitirDatos@n,??_TransmitirDatos
  1006   0008D8  C012  F010         	movff	TransmitirDatos@n+1,??_TransmitirDatos+1
  1007                           
  1008                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1009                           ; Switch size 1, requested type "simple"
  1010                           ; Number of cases is 1, Range of values is 0 to 0
  1011                           ; switch strategies available:
  1012                           ; Name         Instructions Cycles
  1013                           ; simple_byte            4     3 (average)
  1014                           ;	Chosen strategy is simple_byte
  1015   0008DC  5010               	movf	(??_TransmitirDatos+1)^0,w,c
  1016   0008DE  0A00               	xorlw	0	; case 0
  1017   0008E0  A4D8               	btfss	status,2,c
  1018   0008E2  D00D               	goto	l1858
  1019                           
  1020                           ; Switch size 1, requested type "simple"
  1021                           ; Number of cases is 4, Range of values is 0 to 11
  1022                           ; switch strategies available:
  1023                           ; Name         Instructions Cycles
  1024                           ; simple_byte           13     7 (average)
  1025                           ;	Chosen strategy is simple_byte
  1026   0008E4  500F               	movf	??_TransmitirDatos^0,w,c
  1027   0008E6  0A00               	xorlw	0	; case 0
  1028   0008E8  B4D8               	btfsc	status,2,c
  1029   0008EA  D7B6               	goto	l249
  1030   0008EC  0A01               	xorlw	1	; case 1
  1031   0008EE  B4D8               	btfsc	status,2,c
  1032   0008F0  D7BA               	goto	l1842
  1033   0008F2  0A0B               	xorlw	11	; case 10
  1034   0008F4  B4D8               	btfsc	status,2,c
  1035   0008F6  D7C1               	goto	l1846
  1036   0008F8  0A01               	xorlw	1	; case 11
  1037   0008FA  B4D8               	btfsc	status,2,c
  1038   0008FC  D7D4               	goto	l1850
  1039   0008FE                     l1858:
  1040                           
  1041                           ;Laboratorio5.c: 195: Transmitir('T');
  1042   0008FE  0E54               	movlw	84
  1043   000900  ECF6  F008         	call	_Transmitir
  1044                           
  1045                           ;Laboratorio5.c: 196: Transmitir('e');
  1046   000904  0E65               	movlw	101
  1047   000906  ECF6  F008         	call	_Transmitir
  1048                           
  1049                           ;Laboratorio5.c: 197: Transmitir('m');
  1050   00090A  0E6D               	movlw	109
  1051   00090C  ECF6  F008         	call	_Transmitir
  1052                           
  1053                           ;Laboratorio5.c: 198: Transmitir('p');
  1054   000910  0E70               	movlw	112
  1055   000912  ECF6  F008         	call	_Transmitir
  1056                           
  1057                           ;Laboratorio5.c: 199: Transmitir(':');
  1058   000916  0E3A               	movlw	58
  1059   000918  ECF6  F008         	call	_Transmitir
  1060                           
  1061                           ;Laboratorio5.c: 200: Transmitir(' ');
  1062   00091C  0E20               	movlw	32
  1063   00091E  ECF6  F008         	call	_Transmitir
  1064                           
  1065                           ;Laboratorio5.c: 202: MensajeLCD_Word("Temp:");
  1066   000922  0E18               	movlw	low STR_3
  1067   000924  6E07               	movwf	MensajeLCD_Word@a^0,c
  1068   000926  ECA1  F007         	call	_MensajeLCD_Word	;wreg free
  1069                           
  1070                           ;Laboratorio5.c: 203: if (TempC / 100 > 0) {
  1071   00092A  C015  F003         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1072   00092E  C016  F004         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1073   000932  0E00               	movlw	0
  1074   000934  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1075   000936  0E64               	movlw	100
  1076   000938  6E05               	movwf	___lwdiv@divisor^0,c
  1077   00093A  EC78  F007         	call	___lwdiv	;wreg free
  1078   00093E  5003               	movf	?___lwdiv^0,w,c
  1079   000940  1004               	iorwf	(?___lwdiv+1)^0,w,c
  1080   000942  B4D8               	btfsc	status,2,c
  1081   000944  D02A               	goto	l254
  1082                           
  1083                           ;Laboratorio5.c: 204: Transmitir(TempC / 100 + 48);
  1084   000946  C015  F003         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1085   00094A  C016  F004         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1086   00094E  0E00               	movlw	0
  1087   000950  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1088   000952  0E64               	movlw	100
  1089   000954  6E05               	movwf	___lwdiv@divisor^0,c
  1090   000956  EC78  F007         	call	___lwdiv	;wreg free
  1091   00095A  5003               	movf	?___lwdiv^0,w,c
  1092   00095C  0F30               	addlw	48
  1093   00095E  ECF6  F008         	call	_Transmitir
  1094                           
  1095                           ;Laboratorio5.c: 205: EscribeLCD_c(TempC / 100 + 48);
  1096   000962  C015  F003         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1097   000966  C016  F004         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1098   00096A  0E00               	movlw	0
  1099   00096C  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1100   00096E  0E64               	movlw	100
  1101   000970  6E05               	movwf	___lwdiv@divisor^0,c
  1102   000972  EC78  F007         	call	___lwdiv	;wreg free
  1103   000976  5003               	movf	?___lwdiv^0,w,c
  1104   000978  0F30               	addlw	48
  1105   00097A  ECBE  F008         	call	_EscribeLCD_c
  1106                           
  1107                           ;Laboratorio5.c: 206: TempC = TempC % 100;
  1108   00097E  C015  F003         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1109   000982  C016  F004         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1110   000986  0E00               	movlw	0
  1111   000988  6E06               	movwf	(___lwmod@divisor+1)^0,c
  1112   00098A  0E64               	movlw	100
  1113   00098C  6E05               	movwf	___lwmod@divisor^0,c
  1114   00098E  ECC8  F007         	call	___lwmod	;wreg free
  1115   000992  C003  F015         	movff	?___lwmod,TransmitirDatos@TempC
  1116   000996  C004  F016         	movff	?___lwmod+1,TransmitirDatos@TempC+1
  1117   00099A                     l254:
  1118                           
  1119                           ;Laboratorio5.c: 207: };Laboratorio5.c: 208: Transmitir(TempC / 10 + 48);
  1120   00099A  C015  F003         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1121   00099E  C016  F004         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1122   0009A2  0E00               	movlw	0
  1123   0009A4  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1124   0009A6  0E0A               	movlw	10
  1125   0009A8  6E05               	movwf	___lwdiv@divisor^0,c
  1126   0009AA  EC78  F007         	call	___lwdiv	;wreg free
  1127   0009AE  5003               	movf	?___lwdiv^0,w,c
  1128   0009B0  0F30               	addlw	48
  1129   0009B2  ECF6  F008         	call	_Transmitir
  1130                           
  1131                           ;Laboratorio5.c: 209: Transmitir(TempC % 10 + 48);
  1132   0009B6  C015  F003         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1133   0009BA  C016  F004         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1134   0009BE  0E00               	movlw	0
  1135   0009C0  6E06               	movwf	(___lwmod@divisor+1)^0,c
  1136   0009C2  0E0A               	movlw	10
  1137   0009C4  6E05               	movwf	___lwmod@divisor^0,c
  1138   0009C6  ECC8  F007         	call	___lwmod	;wreg free
  1139   0009CA  5003               	movf	?___lwmod^0,w,c
  1140   0009CC  0F30               	addlw	48
  1141   0009CE  ECF6  F008         	call	_Transmitir
  1142                           
  1143                           ;Laboratorio5.c: 210: Transmitir(167);
  1144   0009D2  0EA7               	movlw	167
  1145   0009D4  ECF6  F008         	call	_Transmitir
  1146                           
  1147                           ;Laboratorio5.c: 211: Transmitir(Simb);
  1148   0009D8  5013               	movf	TransmitirDatos@Simb^0,w,c
  1149   0009DA  ECF6  F008         	call	_Transmitir
  1150                           
  1151                           ;Laboratorio5.c: 212: Transmitir(' ');
  1152   0009DE  0E20               	movlw	32
  1153   0009E0  ECF6  F008         	call	_Transmitir
  1154                           
  1155                           ;Laboratorio5.c: 213: Transmitir('\n');
  1156   0009E4  0E0A               	movlw	10
  1157   0009E6  ECF6  F008         	call	_Transmitir
  1158                           
  1159                           ;Laboratorio5.c: 214: Transmitir('H');
  1160   0009EA  0E48               	movlw	72
  1161   0009EC  ECF6  F008         	call	_Transmitir
  1162                           
  1163                           ;Laboratorio5.c: 215: Transmitir('u');
  1164   0009F0  0E75               	movlw	117
  1165   0009F2  ECF6  F008         	call	_Transmitir
  1166                           
  1167                           ;Laboratorio5.c: 216: Transmitir('m');
  1168   0009F6  0E6D               	movlw	109
  1169   0009F8  ECF6  F008         	call	_Transmitir
  1170                           
  1171                           ;Laboratorio5.c: 217: Transmitir(':');
  1172   0009FC  0E3A               	movlw	58
  1173   0009FE  ECF6  F008         	call	_Transmitir
  1174                           
  1175                           ;Laboratorio5.c: 218: Transmitir(' ');
  1176   000A02  0E20               	movlw	32
  1177   000A04  ECF6  F008         	call	_Transmitir
  1178                           
  1179                           ;Laboratorio5.c: 219: Transmitir(Hum / 10 + 48);
  1180   000A08  0E0A               	movlw	10
  1181   000A0A  6E03               	movwf	___lbdiv@divisor^0,c
  1182   000A0C  501E               	movf	_Hum^0,w,c
  1183   000A0E  EC0A  F008         	call	___lbdiv
  1184   000A12  0F30               	addlw	48
  1185   000A14  ECF6  F008         	call	_Transmitir
  1186                           
  1187                           ;Laboratorio5.c: 220: Transmitir(Hum % 10 + 48);
  1188   000A18  0E0A               	movlw	10
  1189   000A1A  6E03               	movwf	___lbmod@divisor^0,c
  1190   000A1C  501E               	movf	_Hum^0,w,c
  1191   000A1E  EC72  F008         	call	___lbmod
  1192   000A22  0F30               	addlw	48
  1193   000A24  ECF6  F008         	call	_Transmitir
  1194                           
  1195                           ;Laboratorio5.c: 221: Transmitir(' ');
  1196   000A28  0E20               	movlw	32
  1197   000A2A  ECF6  F008         	call	_Transmitir
  1198                           
  1199                           ;Laboratorio5.c: 222: Transmitir('%');
  1200   000A2E  0E25               	movlw	37
  1201   000A30  ECF6  F008         	call	_Transmitir
  1202                           
  1203                           ;Laboratorio5.c: 223: Transmitir('\n');
  1204   000A34  0E0A               	movlw	10
  1205   000A36  ECF6  F008         	call	_Transmitir
  1206                           
  1207                           ;Laboratorio5.c: 224: Transmitir(' ');
  1208   000A3A  0E20               	movlw	32
  1209   000A3C  ECF6  F008         	call	_Transmitir
  1210                           
  1211                           ;Laboratorio5.c: 232: EscribeLCD_c(TempC / 10 + 48);
  1212   000A40  C015  F003         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1213   000A44  C016  F004         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1214   000A48  0E00               	movlw	0
  1215   000A4A  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1216   000A4C  0E0A               	movlw	10
  1217   000A4E  6E05               	movwf	___lwdiv@divisor^0,c
  1218   000A50  EC78  F007         	call	___lwdiv	;wreg free
  1219   000A54  5003               	movf	?___lwdiv^0,w,c
  1220   000A56  0F30               	addlw	48
  1221   000A58  ECBE  F008         	call	_EscribeLCD_c
  1222                           
  1223                           ;Laboratorio5.c: 233: EscribeLCD_c(TempC % 10 + 48);
  1224   000A5C  C015  F003         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1225   000A60  C016  F004         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1226   000A64  0E00               	movlw	0
  1227   000A66  6E06               	movwf	(___lwmod@divisor+1)^0,c
  1228   000A68  0E0A               	movlw	10
  1229   000A6A  6E05               	movwf	___lwmod@divisor^0,c
  1230   000A6C  ECC8  F007         	call	___lwmod	;wreg free
  1231   000A70  5003               	movf	?___lwmod^0,w,c
  1232   000A72  0F30               	addlw	48
  1233   000A74  ECBE  F008         	call	_EscribeLCD_c
  1234                           
  1235                           ;Laboratorio5.c: 234: EscribeLCD_c(Simb);
  1236   000A78  5013               	movf	TransmitirDatos@Simb^0,w,c
  1237   000A7A  ECBE  F008         	call	_EscribeLCD_c
  1238                           
  1239                           ;Laboratorio5.c: 235: DireccionaLCD(192);
  1240   000A7E  0EC0               	movlw	192
  1241   000A80  ECC9  F008         	call	_DireccionaLCD
  1242                           
  1243                           ;Laboratorio5.c: 236: MensajeLCD_Word("Hum:");
  1244   000A84  0E1E               	movlw	low STR_4
  1245   000A86  6E07               	movwf	MensajeLCD_Word@a^0,c
  1246   000A88  ECA1  F007         	call	_MensajeLCD_Word	;wreg free
  1247                           
  1248                           ;Laboratorio5.c: 237: EscribeLCD_c(Hum / 10 + 48);
  1249   000A8C  0E0A               	movlw	10
  1250   000A8E  6E03               	movwf	___lbdiv@divisor^0,c
  1251   000A90  501E               	movf	_Hum^0,w,c
  1252   000A92  EC0A  F008         	call	___lbdiv
  1253   000A96  0F30               	addlw	48
  1254   000A98  ECBE  F008         	call	_EscribeLCD_c
  1255                           
  1256                           ;Laboratorio5.c: 238: EscribeLCD_c(Hum % 10 + 48);
  1257   000A9C  0E0A               	movlw	10
  1258   000A9E  6E03               	movwf	___lbmod@divisor^0,c
  1259   000AA0  501E               	movf	_Hum^0,w,c
  1260   000AA2  EC72  F008         	call	___lbmod
  1261   000AA6  0F30               	addlw	48
  1262   000AA8  ECBE  F008         	call	_EscribeLCD_c
  1263                           
  1264                           ;Laboratorio5.c: 239: EscribeLCD_c('%');
  1265   000AAC  0E25               	movlw	37
  1266   000AAE  ECBE  F008         	call	_EscribeLCD_c
  1267   000AB2  0012               	return		;funcret
  1268   000AB4                     __end_of_TransmitirDatos:
  1269                           	callstack 0
  1270                           
  1271 ;; *************** function ___wmul *****************
  1272 ;; Defined at:
  1273 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  1274 ;; Parameters:    Size  Location     Type
  1275 ;;  multiplier      2    2[COMRAM] unsigned int 
  1276 ;;  multiplicand    2    4[COMRAM] unsigned int 
  1277 ;; Auto vars:     Size  Location     Type
  1278 ;;  product         2    6[COMRAM] unsigned int 
  1279 ;; Return value:  Size  Location     Type
  1280 ;;                  2    2[COMRAM] unsigned int 
  1281 ;; Registers used:
  1282 ;;		wreg, status,2, status,0, prodl, prodh
  1283 ;; Tracked objects:
  1284 ;;		On entry : 0/0
  1285 ;;		On exit  : 0/0
  1286 ;;		Unchanged: 0/0
  1287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1288 ;;      Params:         4       0       0       0       0       0       0       0       0
  1289 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1290 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1291 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1292 ;;Total ram usage:        6 bytes
  1293 ;; Hardware stack levels used: 1
  1294 ;; Hardware stack levels required when called: 2
  1295 ;; This function calls:
  1296 ;;		Nothing
  1297 ;; This function is called by:
  1298 ;;		_TransmitirDatos
  1299 ;; This function uses a non-reentrant model
  1300 ;;
  1301                           
  1302                           	psect	text3
  1303   00110E                     __ptext3:
  1304                           	callstack 0
  1305   00110E                     ___wmul:
  1306                           	callstack 27
  1307                           
  1308                           ;incstack = 0
  1309   00110E  5003               	movf	___wmul@multiplier^0,w,c
  1310   001110  0205               	mulwf	___wmul@multiplicand^0,c
  1311   001112  CFF3 F007          	movff	prodl,___wmul@product
  1312   001116  CFF4 F008          	movff	prodh,___wmul@product+1
  1313   00111A  5003               	movf	___wmul@multiplier^0,w,c
  1314   00111C  0206               	mulwf	(___wmul@multiplicand+1)^0,c
  1315   00111E  50F3               	movf	243,w,c
  1316   001120  2608               	addwf	(___wmul@product+1)^0,f,c
  1317   001122  5004               	movf	(___wmul@multiplier+1)^0,w,c
  1318   001124  0205               	mulwf	___wmul@multiplicand^0,c
  1319   001126  50F3               	movf	243,w,c
  1320   001128  2608               	addwf	(___wmul@product+1)^0,f,c
  1321   00112A  C007  F003         	movff	___wmul@product,?___wmul
  1322   00112E  C008  F004         	movff	___wmul@product+1,?___wmul+1
  1323   001132  0012               	return		;funcret
  1324   001134                     __end_of___wmul:
  1325                           	callstack 0
  1326                           
  1327 ;; *************** function ___lwmod *****************
  1328 ;; Defined at:
  1329 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1330 ;; Parameters:    Size  Location     Type
  1331 ;;  dividend        2    2[COMRAM] unsigned int 
  1332 ;;  divisor         2    4[COMRAM] unsigned int 
  1333 ;; Auto vars:     Size  Location     Type
  1334 ;;  counter         1    6[COMRAM] unsigned char 
  1335 ;; Return value:  Size  Location     Type
  1336 ;;                  2    2[COMRAM] unsigned int 
  1337 ;; Registers used:
  1338 ;;		wreg, status,2, status,0
  1339 ;; Tracked objects:
  1340 ;;		On entry : 0/0
  1341 ;;		On exit  : 0/0
  1342 ;;		Unchanged: 0/0
  1343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1344 ;;      Params:         4       0       0       0       0       0       0       0       0
  1345 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1346 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1347 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1348 ;;Total ram usage:        5 bytes
  1349 ;; Hardware stack levels used: 1
  1350 ;; Hardware stack levels required when called: 2
  1351 ;; This function calls:
  1352 ;;		Nothing
  1353 ;; This function is called by:
  1354 ;;		_TransmitirDatos
  1355 ;; This function uses a non-reentrant model
  1356 ;;
  1357                           
  1358                           	psect	text4
  1359   000F90                     __ptext4:
  1360                           	callstack 0
  1361   000F90                     ___lwmod:
  1362                           	callstack 27
  1363                           
  1364                           ;incstack = 0
  1365   000F90  5005               	movf	___lwmod@divisor^0,w,c
  1366   000F92  1006               	iorwf	(___lwmod@divisor+1)^0,w,c
  1367   000F94  B4D8               	btfsc	status,2,c
  1368   000F96  D018               	goto	l794
  1369   000F98  0E01               	movlw	1
  1370   000F9A  6E07               	movwf	___lwmod@counter^0,c
  1371   000F9C  D004               	goto	l1762
  1372   000F9E                     l1760:
  1373   000F9E  90D8               	bcf	status,0,c
  1374   000FA0  3605               	rlcf	___lwmod@divisor^0,f,c
  1375   000FA2  3606               	rlcf	(___lwmod@divisor+1)^0,f,c
  1376   000FA4  2A07               	incf	___lwmod@counter^0,f,c
  1377   000FA6                     l1762:
  1378   000FA6  AE06               	btfss	(___lwmod@divisor+1)^0,7,c
  1379   000FA8  D7FA               	goto	l1760
  1380   000FAA                     u730:
  1381   000FAA  5005               	movf	___lwmod@divisor^0,w,c
  1382   000FAC  5C03               	subwf	___lwmod@dividend^0,w,c
  1383   000FAE  5006               	movf	(___lwmod@divisor+1)^0,w,c
  1384   000FB0  5804               	subwfb	(___lwmod@dividend+1)^0,w,c
  1385   000FB2  A0D8               	btfss	status,0,c
  1386   000FB4  D004               	goto	l1768
  1387   000FB6  5005               	movf	___lwmod@divisor^0,w,c
  1388   000FB8  5E03               	subwf	___lwmod@dividend^0,f,c
  1389   000FBA  5006               	movf	(___lwmod@divisor+1)^0,w,c
  1390   000FBC  5A04               	subwfb	(___lwmod@dividend+1)^0,f,c
  1391   000FBE                     l1768:
  1392   000FBE  90D8               	bcf	status,0,c
  1393   000FC0  3206               	rrcf	(___lwmod@divisor+1)^0,f,c
  1394   000FC2  3205               	rrcf	___lwmod@divisor^0,f,c
  1395   000FC4  2E07               	decfsz	___lwmod@counter^0,f,c
  1396   000FC6  D7F1               	goto	u730
  1397   000FC8                     l794:
  1398   000FC8  C003  F003         	movff	___lwmod@dividend,?___lwmod
  1399   000FCC  C004  F004         	movff	___lwmod@dividend+1,?___lwmod+1
  1400   000FD0  0012               	return		;funcret
  1401   000FD2                     __end_of___lwmod:
  1402                           	callstack 0
  1403                           
  1404 ;; *************** function ___lwdiv *****************
  1405 ;; Defined at:
  1406 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1407 ;; Parameters:    Size  Location     Type
  1408 ;;  dividend        2    2[COMRAM] unsigned int 
  1409 ;;  divisor         2    4[COMRAM] unsigned int 
  1410 ;; Auto vars:     Size  Location     Type
  1411 ;;  quotient        2    6[COMRAM] unsigned int 
  1412 ;;  counter         1    8[COMRAM] unsigned char 
  1413 ;; Return value:  Size  Location     Type
  1414 ;;                  2    2[COMRAM] unsigned int 
  1415 ;; Registers used:
  1416 ;;		wreg, status,2, status,0
  1417 ;; Tracked objects:
  1418 ;;		On entry : 0/0
  1419 ;;		On exit  : 0/0
  1420 ;;		Unchanged: 0/0
  1421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1422 ;;      Params:         4       0       0       0       0       0       0       0       0
  1423 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1424 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1425 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1426 ;;Total ram usage:        7 bytes
  1427 ;; Hardware stack levels used: 1
  1428 ;; Hardware stack levels required when called: 2
  1429 ;; This function calls:
  1430 ;;		Nothing
  1431 ;; This function is called by:
  1432 ;;		_TransmitirDatos
  1433 ;; This function uses a non-reentrant model
  1434 ;;
  1435                           
  1436                           	psect	text5
  1437   000EF0                     __ptext5:
  1438                           	callstack 0
  1439   000EF0                     ___lwdiv:
  1440                           	callstack 27
  1441                           
  1442                           ;incstack = 0
  1443   000EF0  0E00               	movlw	0
  1444   000EF2  6E08               	movwf	(___lwdiv@quotient+1)^0,c
  1445   000EF4  0E00               	movlw	0
  1446   000EF6  6E07               	movwf	___lwdiv@quotient^0,c
  1447   000EF8  5005               	movf	___lwdiv@divisor^0,w,c
  1448   000EFA  1006               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1449   000EFC  B4D8               	btfsc	status,2,c
  1450   000EFE  D01C               	goto	l784
  1451   000F00  0E01               	movlw	1
  1452   000F02  6E09               	movwf	___lwdiv@counter^0,c
  1453   000F04  D004               	goto	l1742
  1454   000F06                     l1740:
  1455   000F06  90D8               	bcf	status,0,c
  1456   000F08  3605               	rlcf	___lwdiv@divisor^0,f,c
  1457   000F0A  3606               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1458   000F0C  2A09               	incf	___lwdiv@counter^0,f,c
  1459   000F0E                     l1742:
  1460   000F0E  AE06               	btfss	(___lwdiv@divisor+1)^0,7,c
  1461   000F10  D7FA               	goto	l1740
  1462   000F12                     u700:
  1463   000F12  90D8               	bcf	status,0,c
  1464   000F14  3607               	rlcf	___lwdiv@quotient^0,f,c
  1465   000F16  3608               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1466   000F18  5005               	movf	___lwdiv@divisor^0,w,c
  1467   000F1A  5C03               	subwf	___lwdiv@dividend^0,w,c
  1468   000F1C  5006               	movf	(___lwdiv@divisor+1)^0,w,c
  1469   000F1E  5804               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1470   000F20  A0D8               	btfss	status,0,c
  1471   000F22  D005               	goto	l1752
  1472   000F24  5005               	movf	___lwdiv@divisor^0,w,c
  1473   000F26  5E03               	subwf	___lwdiv@dividend^0,f,c
  1474   000F28  5006               	movf	(___lwdiv@divisor+1)^0,w,c
  1475   000F2A  5A04               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1476   000F2C  8007               	bsf	___lwdiv@quotient^0,0,c
  1477   000F2E                     l1752:
  1478   000F2E  90D8               	bcf	status,0,c
  1479   000F30  3206               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1480   000F32  3205               	rrcf	___lwdiv@divisor^0,f,c
  1481   000F34  2E09               	decfsz	___lwdiv@counter^0,f,c
  1482   000F36  D7ED               	goto	u700
  1483   000F38                     l784:
  1484   000F38  C007  F003         	movff	___lwdiv@quotient,?___lwdiv
  1485   000F3C  C008  F004         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1486   000F40  0012               	return		;funcret
  1487   000F42                     __end_of___lwdiv:
  1488                           	callstack 0
  1489                           
  1490 ;; *************** function ___lbmod *****************
  1491 ;; Defined at:
  1492 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lbmod.c"
  1493 ;; Parameters:    Size  Location     Type
  1494 ;;  dividend        1    wreg     unsigned char 
  1495 ;;  divisor         1    2[COMRAM] unsigned char 
  1496 ;; Auto vars:     Size  Location     Type
  1497 ;;  dividend        1    3[COMRAM] unsigned char 
  1498 ;;  rem             1    5[COMRAM] unsigned char 
  1499 ;;  counter         1    4[COMRAM] unsigned char 
  1500 ;; Return value:  Size  Location     Type
  1501 ;;                  1    wreg      unsigned char 
  1502 ;; Registers used:
  1503 ;;		wreg, status,2, status,0
  1504 ;; Tracked objects:
  1505 ;;		On entry : 0/0
  1506 ;;		On exit  : 0/0
  1507 ;;		Unchanged: 0/0
  1508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1509 ;;      Params:         1       0       0       0       0       0       0       0       0
  1510 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1511 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1512 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1513 ;;Total ram usage:        4 bytes
  1514 ;; Hardware stack levels used: 1
  1515 ;; Hardware stack levels required when called: 2
  1516 ;; This function calls:
  1517 ;;		Nothing
  1518 ;; This function is called by:
  1519 ;;		_main
  1520 ;;		_TransmitirDatos
  1521 ;; This function uses a non-reentrant model
  1522 ;;
  1523                           
  1524                           	psect	text6
  1525   0010E4                     __ptext6:
  1526                           	callstack 0
  1527   0010E4                     ___lbmod:
  1528                           	callstack 28
  1529                           
  1530                           ;incstack = 0
  1531                           ;___lbmod@dividend stored from wreg
  1532   0010E4  6E04               	movwf	___lbmod@dividend^0,c
  1533   0010E6  0E08               	movlw	8
  1534   0010E8  6E05               	movwf	___lbmod@counter^0,c
  1535   0010EA  0E00               	movlw	0
  1536   0010EC  6E06               	movwf	___lbmod@rem^0,c
  1537   0010EE                     l1720:
  1538   0010EE  90D8               	bcf	status,0,c
  1539   0010F0  3404               	rlcf	___lbmod@dividend^0,w,c
  1540   0010F2  3406               	rlcf	___lbmod@rem^0,w,c
  1541   0010F4  6E06               	movwf	___lbmod@rem^0,c
  1542   0010F6  90D8               	bcf	status,0,c
  1543   0010F8  3604               	rlcf	___lbmod@dividend^0,f,c
  1544   0010FA  5003               	movf	___lbmod@divisor^0,w,c
  1545   0010FC  5C06               	subwf	___lbmod@rem^0,w,c
  1546   0010FE  A0D8               	btfss	status,0,c
  1547   001100  D002               	goto	l1728
  1548   001102  5003               	movf	___lbmod@divisor^0,w,c
  1549   001104  5E06               	subwf	___lbmod@rem^0,f,c
  1550   001106                     l1728:
  1551   001106  2E05               	decfsz	___lbmod@counter^0,f,c
  1552   001108  D7F2               	goto	l1720
  1553   00110A  5006               	movf	___lbmod@rem^0,w,c
  1554   00110C  0012               	return		;funcret
  1555   00110E                     __end_of___lbmod:
  1556                           	callstack 0
  1557                           
  1558 ;; *************** function ___lbdiv *****************
  1559 ;; Defined at:
  1560 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lbdiv.c"
  1561 ;; Parameters:    Size  Location     Type
  1562 ;;  dividend        1    wreg     unsigned char 
  1563 ;;  divisor         1    2[COMRAM] unsigned char 
  1564 ;; Auto vars:     Size  Location     Type
  1565 ;;  dividend        1    3[COMRAM] unsigned char 
  1566 ;;  quotient        1    5[COMRAM] unsigned char 
  1567 ;;  counter         1    4[COMRAM] unsigned char 
  1568 ;; Return value:  Size  Location     Type
  1569 ;;                  1    wreg      unsigned char 
  1570 ;; Registers used:
  1571 ;;		wreg, status,2, status,0
  1572 ;; Tracked objects:
  1573 ;;		On entry : 0/0
  1574 ;;		On exit  : 0/0
  1575 ;;		Unchanged: 0/0
  1576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1577 ;;      Params:         1       0       0       0       0       0       0       0       0
  1578 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1579 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1580 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1581 ;;Total ram usage:        4 bytes
  1582 ;; Hardware stack levels used: 1
  1583 ;; Hardware stack levels required when called: 2
  1584 ;; This function calls:
  1585 ;;		Nothing
  1586 ;; This function is called by:
  1587 ;;		_main
  1588 ;;		_TransmitirDatos
  1589 ;; This function uses a non-reentrant model
  1590 ;;
  1591                           
  1592                           	psect	text7
  1593   001014                     __ptext7:
  1594                           	callstack 0
  1595   001014                     ___lbdiv:
  1596                           	callstack 28
  1597                           
  1598                           ;incstack = 0
  1599                           ;___lbdiv@dividend stored from wreg
  1600   001014  6E04               	movwf	___lbdiv@dividend^0,c
  1601   001016  0E00               	movlw	0
  1602   001018  6E06               	movwf	___lbdiv@quotient^0,c
  1603   00101A  5003               	movf	___lbdiv@divisor^0,w,c
  1604   00101C  B4D8               	btfsc	status,2,c
  1605   00101E  D015               	goto	l1714
  1606   001020  0E01               	movlw	1
  1607   001022  6E05               	movwf	___lbdiv@counter^0,c
  1608   001024  D003               	goto	l1702
  1609   001026                     l1698:
  1610   001026  90D8               	bcf	status,0,c
  1611   001028  3603               	rlcf	___lbdiv@divisor^0,f,c
  1612   00102A  2A05               	incf	___lbdiv@counter^0,f,c
  1613   00102C                     l1702:
  1614   00102C  AE03               	btfss	___lbdiv@divisor^0,7,c
  1615   00102E  D7FB               	goto	l1698
  1616   001030                     u660:
  1617   001030  90D8               	bcf	status,0,c
  1618   001032  3606               	rlcf	___lbdiv@quotient^0,f,c
  1619   001034  5003               	movf	___lbdiv@divisor^0,w,c
  1620   001036  5C04               	subwf	___lbdiv@dividend^0,w,c
  1621   001038  A0D8               	btfss	status,0,c
  1622   00103A  D003               	goto	l1710
  1623   00103C  5003               	movf	___lbdiv@divisor^0,w,c
  1624   00103E  5E04               	subwf	___lbdiv@dividend^0,f,c
  1625   001040  8006               	bsf	___lbdiv@quotient^0,0,c
  1626   001042                     l1710:
  1627   001042  90D8               	bcf	status,0,c
  1628   001044  3203               	rrcf	___lbdiv@divisor^0,f,c
  1629   001046  2E05               	decfsz	___lbdiv@counter^0,f,c
  1630   001048  D7F3               	goto	u660
  1631   00104A                     l1714:
  1632   00104A  5006               	movf	___lbdiv@quotient^0,w,c
  1633   00104C  0012               	return		;funcret
  1634   00104E                     __end_of___lbdiv:
  1635                           	callstack 0
  1636                           
  1637 ;; *************** function ___awdiv *****************
  1638 ;; Defined at:
  1639 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  1640 ;; Parameters:    Size  Location     Type
  1641 ;;  dividend        2    2[COMRAM] int 
  1642 ;;  divisor         2    4[COMRAM] int 
  1643 ;; Auto vars:     Size  Location     Type
  1644 ;;  quotient        2    8[COMRAM] int 
  1645 ;;  sign            1    7[COMRAM] unsigned char 
  1646 ;;  counter         1    6[COMRAM] unsigned char 
  1647 ;; Return value:  Size  Location     Type
  1648 ;;                  2    2[COMRAM] int 
  1649 ;; Registers used:
  1650 ;;		wreg, status,2, status,0
  1651 ;; Tracked objects:
  1652 ;;		On entry : 0/0
  1653 ;;		On exit  : 0/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1656 ;;      Params:         4       0       0       0       0       0       0       0       0
  1657 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1658 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1659 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1660 ;;Total ram usage:        8 bytes
  1661 ;; Hardware stack levels used: 1
  1662 ;; Hardware stack levels required when called: 2
  1663 ;; This function calls:
  1664 ;;		Nothing
  1665 ;; This function is called by:
  1666 ;;		_TransmitirDatos
  1667 ;; This function uses a non-reentrant model
  1668 ;;
  1669                           
  1670                           	psect	text8
  1671   000E06                     __ptext8:
  1672                           	callstack 0
  1673   000E06                     ___awdiv:
  1674                           	callstack 27
  1675                           
  1676                           ;incstack = 0
  1677   000E06  0E00               	movlw	0
  1678   000E08  6E08               	movwf	___awdiv@sign^0,c
  1679   000E0A  AE06               	btfss	(___awdiv@divisor+1)^0,7,c
  1680   000E0C  D006               	goto	l1656
  1681   000E0E  6C05               	negf	___awdiv@divisor^0,c
  1682   000E10  1E06               	comf	(___awdiv@divisor+1)^0,f,c
  1683   000E12  B0D8               	btfsc	status,0,c
  1684   000E14  2A06               	incf	(___awdiv@divisor+1)^0,f,c
  1685   000E16  0E01               	movlw	1
  1686   000E18  6E08               	movwf	___awdiv@sign^0,c
  1687   000E1A                     l1656:
  1688   000E1A  AE04               	btfss	(___awdiv@dividend+1)^0,7,c
  1689   000E1C  D006               	goto	l1662
  1690   000E1E  6C03               	negf	___awdiv@dividend^0,c
  1691   000E20  1E04               	comf	(___awdiv@dividend+1)^0,f,c
  1692   000E22  B0D8               	btfsc	status,0,c
  1693   000E24  2A04               	incf	(___awdiv@dividend+1)^0,f,c
  1694   000E26  0E01               	movlw	1
  1695   000E28  1A08               	xorwf	___awdiv@sign^0,f,c
  1696   000E2A                     l1662:
  1697   000E2A  0E00               	movlw	0
  1698   000E2C  6E0A               	movwf	(___awdiv@quotient+1)^0,c
  1699   000E2E  0E00               	movlw	0
  1700   000E30  6E09               	movwf	___awdiv@quotient^0,c
  1701   000E32  5005               	movf	___awdiv@divisor^0,w,c
  1702   000E34  1006               	iorwf	(___awdiv@divisor+1)^0,w,c
  1703   000E36  B4D8               	btfsc	status,2,c
  1704   000E38  D01C               	goto	l1684
  1705   000E3A  0E01               	movlw	1
  1706   000E3C  6E07               	movwf	___awdiv@counter^0,c
  1707   000E3E  D004               	goto	l1670
  1708   000E40                     l1668:
  1709   000E40  90D8               	bcf	status,0,c
  1710   000E42  3605               	rlcf	___awdiv@divisor^0,f,c
  1711   000E44  3606               	rlcf	(___awdiv@divisor+1)^0,f,c
  1712   000E46  2A07               	incf	___awdiv@counter^0,f,c
  1713   000E48                     l1670:
  1714   000E48  AE06               	btfss	(___awdiv@divisor+1)^0,7,c
  1715   000E4A  D7FA               	goto	l1668
  1716   000E4C                     u620:
  1717   000E4C  90D8               	bcf	status,0,c
  1718   000E4E  3609               	rlcf	___awdiv@quotient^0,f,c
  1719   000E50  360A               	rlcf	(___awdiv@quotient+1)^0,f,c
  1720   000E52  5005               	movf	___awdiv@divisor^0,w,c
  1721   000E54  5C03               	subwf	___awdiv@dividend^0,w,c
  1722   000E56  5006               	movf	(___awdiv@divisor+1)^0,w,c
  1723   000E58  5804               	subwfb	(___awdiv@dividend+1)^0,w,c
  1724   000E5A  A0D8               	btfss	status,0,c
  1725   000E5C  D005               	goto	l1680
  1726   000E5E  5005               	movf	___awdiv@divisor^0,w,c
  1727   000E60  5E03               	subwf	___awdiv@dividend^0,f,c
  1728   000E62  5006               	movf	(___awdiv@divisor+1)^0,w,c
  1729   000E64  5A04               	subwfb	(___awdiv@dividend+1)^0,f,c
  1730   000E66  8009               	bsf	___awdiv@quotient^0,0,c
  1731   000E68                     l1680:
  1732   000E68  90D8               	bcf	status,0,c
  1733   000E6A  3206               	rrcf	(___awdiv@divisor+1)^0,f,c
  1734   000E6C  3205               	rrcf	___awdiv@divisor^0,f,c
  1735   000E6E  2E07               	decfsz	___awdiv@counter^0,f,c
  1736   000E70  D7ED               	goto	u620
  1737   000E72                     l1684:
  1738   000E72  5008               	movf	___awdiv@sign^0,w,c
  1739   000E74  B4D8               	btfsc	status,2,c
  1740   000E76  D004               	goto	l1688
  1741   000E78  6C09               	negf	___awdiv@quotient^0,c
  1742   000E7A  1E0A               	comf	(___awdiv@quotient+1)^0,f,c
  1743   000E7C  B0D8               	btfsc	status,0,c
  1744   000E7E  2A0A               	incf	(___awdiv@quotient+1)^0,f,c
  1745   000E80                     l1688:
  1746   000E80  C009  F003         	movff	___awdiv@quotient,?___awdiv
  1747   000E84  C00A  F004         	movff	___awdiv@quotient+1,?___awdiv+1
  1748   000E88  0012               	return		;funcret
  1749   000E8A                     __end_of___awdiv:
  1750                           	callstack 0
  1751                           
  1752 ;; *************** function _Transmitir *****************
  1753 ;; Defined at:
  1754 ;;		line 163 in file "Laboratorio5.c"
  1755 ;; Parameters:    Size  Location     Type
  1756 ;;  BufferT         1    wreg     unsigned char 
  1757 ;; Auto vars:     Size  Location     Type
  1758 ;;  BufferT         1    2[COMRAM] unsigned char 
  1759 ;; Return value:  Size  Location     Type
  1760 ;;                  1    wreg      void 
  1761 ;; Registers used:
  1762 ;;		wreg
  1763 ;; Tracked objects:
  1764 ;;		On entry : 0/0
  1765 ;;		On exit  : 0/0
  1766 ;;		Unchanged: 0/0
  1767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1768 ;;      Params:         0       0       0       0       0       0       0       0       0
  1769 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1770 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1771 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1772 ;;Total ram usage:        1 bytes
  1773 ;; Hardware stack levels used: 1
  1774 ;; Hardware stack levels required when called: 2
  1775 ;; This function calls:
  1776 ;;		Nothing
  1777 ;; This function is called by:
  1778 ;;		_TransmitirDatos
  1779 ;; This function uses a non-reentrant model
  1780 ;;
  1781                           
  1782                           	psect	text9
  1783   0011EC                     __ptext9:
  1784                           	callstack 0
  1785   0011EC                     _Transmitir:
  1786                           	callstack 27
  1787                           
  1788                           ;incstack = 0
  1789                           ;Transmitir@BufferT stored from wreg
  1790   0011EC  6E03               	movwf	Transmitir@BufferT^0,c
  1791   0011EE                     
  1792                           ;Laboratorio5.c: 164: while (TRMT == 0);
  1793   0011EE  A2AC               	btfss	4012,1,c	;volatile
  1794   0011F0  D7FE               	goto	l1150
  1795                           
  1796                           ;Laboratorio5.c: 165: TXREG = BufferT;
  1797   0011F2  C003  FFAD         	movff	Transmitir@BufferT,4013	;volatile
  1798   0011F6  0012               	return		;funcret
  1799   0011F8                     __end_of_Transmitir:
  1800                           	callstack 0
  1801                           
  1802 ;; *************** function _MensajeLCD_Word *****************
  1803 ;; Defined at:
  1804 ;;		line 247 in file "LibLCDXC8.h"
  1805 ;; Parameters:    Size  Location     Type
  1806 ;;  a               1    6[COMRAM] PTR unsigned char 
  1807 ;;		 -> STR_4(5), STR_3(6), STR_2(10), STR_1(13), 
  1808 ;; Auto vars:     Size  Location     Type
  1809 ;;  i               2    8[COMRAM] int 
  1810 ;; Return value:  Size  Location     Type
  1811 ;;                  1    wreg      void 
  1812 ;; Registers used:
  1813 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1814 ;; Tracked objects:
  1815 ;;		On entry : 0/0
  1816 ;;		On exit  : 0/0
  1817 ;;		Unchanged: 0/0
  1818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1819 ;;      Params:         1       0       0       0       0       0       0       0       0
  1820 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1821 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1822 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1823 ;;Total ram usage:        4 bytes
  1824 ;; Hardware stack levels used: 1
  1825 ;; Hardware stack levels required when called: 5
  1826 ;; This function calls:
  1827 ;;		_EscribeLCD_c
  1828 ;; This function is called by:
  1829 ;;		_main
  1830 ;;		_TransmitirDatos
  1831 ;; This function uses a non-reentrant model
  1832 ;;
  1833                           
  1834                           	psect	text10
  1835   000F42                     __ptext10:
  1836                           	callstack 0
  1837   000F42                     _MensajeLCD_Word:
  1838                           	callstack 24
  1839                           
  1840                           ;LibLCDXC8.h: 251: for(int i = 0; i<16; i++){
  1841                           
  1842                           ;incstack = 0
  1843   000F42  0E00               	movlw	0
  1844   000F44  6E0A               	movwf	(MensajeLCD_Word@i+1)^0,c
  1845   000F46  0E00               	movlw	0
  1846   000F48  6E09               	movwf	MensajeLCD_Word@i^0,c
  1847   000F4A                     l1632:
  1848                           
  1849                           ;LibLCDXC8.h: 252: if(a[i] == (0)){
  1850   000F4A  5007               	movf	MensajeLCD_Word@a^0,w,c
  1851   000F4C  2409               	addwf	MensajeLCD_Word@i^0,w,c
  1852   000F4E  6E08               	movwf	??_MensajeLCD_Word^0,c
  1853   000F50  C008  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  1854   000F54                     	if	1	;There is more than 1 active tblptr byte
  1855   000F54  0E08               	movlw	high __smallconst
  1856   000F56  6EF7               	movwf	tblptrh,c
  1857   000F58                     	endif
  1858   000F58                     	if	0	;tblptru may be non-zero
  1859   000F58                     	endif
  1860   000F58                     	if	0	;tblptru may be non-zero
  1861   000F58                     	endif
  1862   000F58  0008               	tblrd		*
  1863   000F5A  50F5               	movf	tablat,w,c
  1864   000F5C  0900               	iorlw	0
  1865   000F5E  B4D8               	btfsc	status,2,c
  1866   000F60  0012               	return	
  1867                           
  1868                           ;LibLCDXC8.h: 254: };LibLCDXC8.h: 255: EscribeLCD_c(a[i]);
  1869   000F62  5007               	movf	MensajeLCD_Word@a^0,w,c
  1870   000F64  2409               	addwf	MensajeLCD_Word@i^0,w,c
  1871   000F66  6E08               	movwf	??_MensajeLCD_Word^0,c
  1872   000F68  C008  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  1873   000F6C                     	if	1	;There is more than 1 active tblptr byte
  1874   000F6C  0E08               	movlw	high __smallconst
  1875   000F6E  6EF7               	movwf	tblptrh,c
  1876   000F70                     	endif
  1877   000F70                     	if	0	;tblptru may be non-zero
  1878   000F70                     	endif
  1879   000F70                     	if	0	;tblptru may be non-zero
  1880   000F70                     	endif
  1881   000F70  0008               	tblrd		*
  1882   000F72  50F5               	movf	tablat,w,c
  1883   000F74  ECBE  F008         	call	_EscribeLCD_c
  1884   000F78  4A09               	infsnz	MensajeLCD_Word@i^0,f,c
  1885   000F7A  2A0A               	incf	(MensajeLCD_Word@i+1)^0,f,c
  1886   000F7C  BE0A               	btfsc	(MensajeLCD_Word@i+1)^0,7,c
  1887   000F7E  D7E5               	goto	l1632
  1888   000F80  500A               	movf	(MensajeLCD_Word@i+1)^0,w,c
  1889   000F82  E105               	bnz	u580
  1890   000F84  0E10               	movlw	16
  1891   000F86  5C09               	subwf	MensajeLCD_Word@i^0,w,c
  1892   000F88  B0D8               	btfsc	status,0,c
  1893   000F8A  0012               	return	
  1894   000F8C  D7DE               	goto	l1632
  1895   000F8E                     u580:
  1896   000F8E  0012               	return		;funcret
  1897   000F90                     __end_of_MensajeLCD_Word:
  1898                           	callstack 0
  1899                           
  1900 ;; *************** function _EscribeLCD_c *****************
  1901 ;; Defined at:
  1902 ;;		line 148 in file "LibLCDXC8.h"
  1903 ;; Parameters:    Size  Location     Type
  1904 ;;  a               1    wreg     unsigned char 
  1905 ;; Auto vars:     Size  Location     Type
  1906 ;;  a               1    5[COMRAM] unsigned char 
  1907 ;; Return value:  Size  Location     Type
  1908 ;;                  1    wreg      void 
  1909 ;; Registers used:
  1910 ;;		wreg, status,2, status,0, cstack
  1911 ;; Tracked objects:
  1912 ;;		On entry : 0/0
  1913 ;;		On exit  : 0/0
  1914 ;;		Unchanged: 0/0
  1915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1916 ;;      Params:         0       0       0       0       0       0       0       0       0
  1917 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1918 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1919 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1920 ;;Total ram usage:        1 bytes
  1921 ;; Hardware stack levels used: 1
  1922 ;; Hardware stack levels required when called: 4
  1923 ;; This function calls:
  1924 ;;		_EnviaDato
  1925 ;;		_HabilitaLCD
  1926 ;;		_RetardoLCD
  1927 ;; This function is called by:
  1928 ;;		_MensajeLCD_Word
  1929 ;;		_main
  1930 ;;		_TransmitirDatos
  1931 ;; This function uses a non-reentrant model
  1932 ;;
  1933                           
  1934                           	psect	text11
  1935   00117C                     __ptext11:
  1936                           	callstack 0
  1937   00117C                     _EscribeLCD_c:
  1938                           	callstack 24
  1939                           
  1940                           ;incstack = 0
  1941                           ;EscribeLCD_c@a stored from wreg
  1942   00117C  6E06               	movwf	EscribeLCD_c@a^0,c
  1943                           
  1944                           ;LibLCDXC8.h: 152: LATE0=1;
  1945   00117E  808D               	bsf	3981,0,c	;volatile
  1946                           
  1947                           ;LibLCDXC8.h: 153: EnviaDato(a);
  1948   001180  5006               	movf	EscribeLCD_c@a^0,w,c
  1949   001182  ECFC  F008         	call	_EnviaDato
  1950                           
  1951                           ;LibLCDXC8.h: 154: HabilitaLCD();
  1952   001186  ECEF  F008         	call	_HabilitaLCD	;wreg free
  1953                           
  1954                           ;LibLCDXC8.h: 155: RetardoLCD(4);
  1955   00118A  0E04               	movlw	4
  1956   00118C  EC45  F007         	call	_RetardoLCD
  1957   001190  0012               	return		;funcret
  1958   001192                     __end_of_EscribeLCD_c:
  1959                           	callstack 0
  1960                           
  1961 ;; *************** function _DireccionaLCD *****************
  1962 ;; Defined at:
  1963 ;;		line 259 in file "LibLCDXC8.h"
  1964 ;; Parameters:    Size  Location     Type
  1965 ;;  a               1    wreg     unsigned char 
  1966 ;; Auto vars:     Size  Location     Type
  1967 ;;  a               1    5[COMRAM] unsigned char 
  1968 ;; Return value:  Size  Location     Type
  1969 ;;                  1    wreg      void 
  1970 ;; Registers used:
  1971 ;;		wreg, status,2, status,0, cstack
  1972 ;; Tracked objects:
  1973 ;;		On entry : 0/0
  1974 ;;		On exit  : 0/0
  1975 ;;		Unchanged: 0/0
  1976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1977 ;;      Params:         0       0       0       0       0       0       0       0       0
  1978 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1979 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1980 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1981 ;;Total ram usage:        1 bytes
  1982 ;; Hardware stack levels used: 1
  1983 ;; Hardware stack levels required when called: 4
  1984 ;; This function calls:
  1985 ;;		_EnviaDato
  1986 ;;		_HabilitaLCD
  1987 ;;		_RetardoLCD
  1988 ;; This function is called by:
  1989 ;;		_main
  1990 ;;		_TransmitirDatos
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994                           	psect	text12
  1995   001192                     __ptext12:
  1996                           	callstack 0
  1997   001192                     _DireccionaLCD:
  1998                           	callstack 25
  1999                           
  2000                           ;incstack = 0
  2001                           ;DireccionaLCD@a stored from wreg
  2002   001192  6E06               	movwf	DireccionaLCD@a^0,c
  2003                           
  2004                           ;LibLCDXC8.h: 262: LATE0=0;
  2005   001194  908D               	bcf	3981,0,c	;volatile
  2006                           
  2007                           ;LibLCDXC8.h: 263: EnviaDato(a);
  2008   001196  5006               	movf	DireccionaLCD@a^0,w,c
  2009   001198  ECFC  F008         	call	_EnviaDato
  2010                           
  2011                           ;LibLCDXC8.h: 264: HabilitaLCD();
  2012   00119C  ECEF  F008         	call	_HabilitaLCD	;wreg free
  2013                           
  2014                           ;LibLCDXC8.h: 265: RetardoLCD(4);
  2015   0011A0  0E04               	movlw	4
  2016   0011A2  EC45  F007         	call	_RetardoLCD
  2017   0011A6  0012               	return		;funcret
  2018   0011A8                     __end_of_DireccionaLCD:
  2019                           	callstack 0
  2020                           
  2021 ;; *************** function _LeerHT11 *****************
  2022 ;; Defined at:
  2023 ;;		line 123 in file "Laboratorio5.c"
  2024 ;; Parameters:    Size  Location     Type
  2025 ;;		None
  2026 ;; Auto vars:     Size  Location     Type
  2027 ;;		None
  2028 ;; Return value:  Size  Location     Type
  2029 ;;                  1    wreg      void 
  2030 ;; Registers used:
  2031 ;;		wreg, status,2, status,0, cstack
  2032 ;; Tracked objects:
  2033 ;;		On entry : 0/0
  2034 ;;		On exit  : 0/0
  2035 ;;		Unchanged: 0/0
  2036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2037 ;;      Params:         0       0       0       0       0       0       0       0       0
  2038 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2039 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2040 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2041 ;;Total ram usage:        1 bytes
  2042 ;; Hardware stack levels used: 1
  2043 ;; Hardware stack levels required when called: 4
  2044 ;; This function calls:
  2045 ;;		_LeerByte
  2046 ;; This function is called by:
  2047 ;;		_main
  2048 ;; This function uses a non-reentrant model
  2049 ;;
  2050                           
  2051                           	psect	text13
  2052   00104E                     __ptext13:
  2053                           	callstack 0
  2054   00104E                     _LeerHT11:
  2055                           	callstack 26
  2056                           
  2057                           ;Laboratorio5.c: 125: TRISC2 = 0;
  2058                           
  2059                           ;incstack = 0
  2060   00104E  9494               	bcf	3988,2,c	;volatile
  2061                           
  2062                           ;Laboratorio5.c: 126: _delay((unsigned long)((18)*(8000000/4000.0)));
  2063   001050  0E2F               	movlw	47
  2064   001052  6E07               	movwf	??_LeerHT11^0,c
  2065   001054  0EC0               	movlw	192
  2066   001056                     u1077:
  2067   001056  2EE8               	decfsz	wreg,f,c
  2068   001058  D7FE               	bra	u1077
  2069   00105A  2E07               	decfsz	??_LeerHT11^0,f,c
  2070   00105C  D7FC               	bra	u1077
  2071                           
  2072                           ;Laboratorio5.c: 127: TRISC2 = 1;
  2073   00105E  8494               	bsf	3988,2,c	;volatile
  2074   001060                     l211:
  2075   001060  B482               	btfsc	3970,2,c	;volatile
  2076   001062  D7FE               	goto	l211
  2077                           
  2078                           ;Laboratorio5.c: 130: _delay((unsigned long)((120)*(8000000/4000000.0)));
  2079   001064  0E50               	movlw	80
  2080   001066                     u1087:
  2081   001066  2EE8               	decfsz	wreg,f,c
  2082   001068  D7FE               	bra	u1087
  2083   00106A                     l214:
  2084   00106A  B482               	btfsc	3970,2,c	;volatile
  2085   00106C  D7FE               	goto	l214
  2086                           
  2087                           ;Laboratorio5.c: 133: Hum = LeerByte();
  2088   00106E  ECAD  F008         	call	_LeerByte	;wreg free
  2089   001072  6E1E               	movwf	_Hum^0,c
  2090                           
  2091                           ;Laboratorio5.c: 134: LeerByte();
  2092   001074  ECAD  F008         	call	_LeerByte	;wreg free
  2093                           
  2094                           ;Laboratorio5.c: 135: Temp = LeerByte();
  2095   001078  ECAD  F008         	call	_LeerByte	;wreg free
  2096   00107C  6E1F               	movwf	_Temp^0,c
  2097                           
  2098                           ;Laboratorio5.c: 136: LeerByte();
  2099   00107E  ECAD  F008         	call	_LeerByte	;wreg free
  2100                           
  2101                           ;Laboratorio5.c: 137: LeerByte();
  2102   001082  ECAD  F008         	call	_LeerByte	;wreg free
  2103   001086  0012               	return		;funcret
  2104   001088                     __end_of_LeerHT11:
  2105                           	callstack 0
  2106                           
  2107 ;; *************** function _LeerByte *****************
  2108 ;; Defined at:
  2109 ;;		line 141 in file "Laboratorio5.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;		None
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;  i               1    5[COMRAM] unsigned char 
  2114 ;;  res             1    4[COMRAM] unsigned char 
  2115 ;; Return value:  Size  Location     Type
  2116 ;;                  1    wreg      unsigned char 
  2117 ;; Registers used:
  2118 ;;		wreg, status,2, status,0, cstack
  2119 ;; Tracked objects:
  2120 ;;		On entry : 0/0
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2124 ;;      Params:         0       0       0       0       0       0       0       0       0
  2125 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2126 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2127 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2128 ;;Total ram usage:        3 bytes
  2129 ;; Hardware stack levels used: 1
  2130 ;; Hardware stack levels required when called: 3
  2131 ;; This function calls:
  2132 ;;		_LeerBit
  2133 ;; This function is called by:
  2134 ;;		_LeerHT11
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           	psect	text14
  2139   00115A                     __ptext14:
  2140                           	callstack 0
  2141   00115A                     _LeerByte:
  2142                           	callstack 26
  2143                           
  2144                           ;Laboratorio5.c: 142: unsigned char res = 0, i;
  2145                           
  2146                           ;incstack = 0
  2147   00115A  0E00               	movlw	0
  2148   00115C  6E05               	movwf	LeerByte@res^0,c
  2149                           
  2150                           ;Laboratorio5.c: 143: for (i = 8; i > 0; i--) {
  2151   00115E  0E08               	movlw	8
  2152   001160  6E06               	movwf	LeerByte@i^0,c
  2153   001162                     l1140:
  2154                           
  2155                           ;Laboratorio5.c: 144: res = (res << 1) | LeerBit();
  2156   001162  EC44  F008         	call	_LeerBit	;wreg free
  2157   001166  6E04               	movwf	??_LeerByte^0,c
  2158   001168  5005               	movf	LeerByte@res^0,w,c
  2159   00116A  2405               	addwf	LeerByte@res^0,w,c
  2160   00116C  1004               	iorwf	??_LeerByte^0,w,c
  2161   00116E  6E05               	movwf	LeerByte@res^0,c
  2162   001170  0606               	decf	LeerByte@i^0,f,c
  2163   001172  5006               	movf	LeerByte@i^0,w,c
  2164   001174  A4D8               	btfss	status,2,c
  2165   001176  D7F5               	goto	l1140
  2166                           
  2167                           ;Laboratorio5.c: 145: };Laboratorio5.c: 146: return res;
  2168   001178  5005               	movf	LeerByte@res^0,w,c
  2169   00117A  0012               	return		;funcret
  2170   00117C                     __end_of_LeerByte:
  2171                           	callstack 0
  2172                           
  2173 ;; *************** function _LeerBit *****************
  2174 ;; Defined at:
  2175 ;;		line 149 in file "Laboratorio5.c"
  2176 ;; Parameters:    Size  Location     Type
  2177 ;;		None
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;  res             1    2[COMRAM] unsigned char 
  2180 ;; Return value:  Size  Location     Type
  2181 ;;                  1    wreg      unsigned char 
  2182 ;; Registers used:
  2183 ;;		wreg, status,2
  2184 ;; Tracked objects:
  2185 ;;		On entry : 0/0
  2186 ;;		On exit  : 0/0
  2187 ;;		Unchanged: 0/0
  2188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2189 ;;      Params:         0       0       0       0       0       0       0       0       0
  2190 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2191 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2192 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2193 ;;Total ram usage:        1 bytes
  2194 ;; Hardware stack levels used: 1
  2195 ;; Hardware stack levels required when called: 2
  2196 ;; This function calls:
  2197 ;;		Nothing
  2198 ;; This function is called by:
  2199 ;;		_LeerByte
  2200 ;; This function uses a non-reentrant model
  2201 ;;
  2202                           
  2203                           	psect	text15
  2204   001088                     __ptext15:
  2205                           	callstack 0
  2206   001088                     _LeerBit:
  2207                           	callstack 26
  2208                           
  2209                           ;Laboratorio5.c: 150: unsigned char res = 0;
  2210                           
  2211                           ;incstack = 0
  2212   001088  0E00               	movlw	0
  2213   00108A  6E03               	movwf	LeerBit@res^0,c
  2214   00108C                     l225:
  2215   00108C  A482               	btfss	3970,2,c	;volatile
  2216   00108E  D7FE               	goto	l225
  2217                           
  2218                           ;Laboratorio5.c: 152: _delay((unsigned long)((13)*(8000000/4000000.0)));
  2219   001090  0E08               	movlw	8
  2220   001092                     u1097:
  2221   001092  2EE8               	decfsz	wreg,f,c
  2222   001094  D7FE               	bra	u1097
  2223   001096  D000               	nop2	
  2224                           
  2225                           ;Laboratorio5.c: 153: if (RC2 == 1) res = 0;
  2226   001098  A482               	btfss	3970,2,c	;volatile
  2227   00109A  D002               	goto	l1096
  2228   00109C  0E00               	movlw	0
  2229   00109E  6E03               	movwf	LeerBit@res^0,c
  2230   0010A0                     l1096:
  2231                           
  2232                           ;Laboratorio5.c: 154: _delay((unsigned long)((22)*(8000000/4000000.0)));
  2233   0010A0  0E0E               	movlw	14
  2234   0010A2                     u1107:
  2235   0010A2  2EE8               	decfsz	wreg,f,c
  2236   0010A4  D7FE               	bra	u1107
  2237   0010A6  D000               	nop2	
  2238                           
  2239                           ;Laboratorio5.c: 155: if (RC2 == 1) {
  2240   0010A8  A482               	btfss	3970,2,c	;volatile
  2241   0010AA  D004               	goto	u40
  2242                           
  2243                           ;Laboratorio5.c: 156: res = 1;
  2244   0010AC  0E01               	movlw	1
  2245   0010AE  6E03               	movwf	LeerBit@res^0,c
  2246   0010B0                     l230:
  2247   0010B0  B482               	btfsc	3970,2,c	;volatile
  2248   0010B2  D7FE               	goto	l230
  2249   0010B4                     u40:
  2250                           
  2251                           ;Laboratorio5.c: 158: };Laboratorio5.c: 159: return res;
  2252   0010B4  5003               	movf	LeerBit@res^0,w,c
  2253   0010B6  0012               	return		;funcret
  2254   0010B8                     __end_of_LeerBit:
  2255                           	callstack 0
  2256                           
  2257 ;; *************** function _InicializaLCD *****************
  2258 ;; Defined at:
  2259 ;;		line 70 in file "LibLCDXC8.h"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;		None
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;		None
  2264 ;; Return value:  Size  Location     Type
  2265 ;;                  1    wreg      void 
  2266 ;; Registers used:
  2267 ;;		wreg, status,2, status,0, cstack
  2268 ;; Tracked objects:
  2269 ;;		On entry : 0/0
  2270 ;;		On exit  : 0/0
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2273 ;;      Params:         0       0       0       0       0       0       0       0       0
  2274 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2275 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2276 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2277 ;;Total ram usage:        0 bytes
  2278 ;; Hardware stack levels used: 1
  2279 ;; Hardware stack levels required when called: 5
  2280 ;; This function calls:
  2281 ;;		_BorraLCD
  2282 ;;		_EnviaDato
  2283 ;;		_HabilitaLCD
  2284 ;;		_RetardoLCD
  2285 ;; This function is called by:
  2286 ;;		_main
  2287 ;; This function uses a non-reentrant model
  2288 ;;
  2289                           
  2290                           	psect	text16
  2291   000FD2                     __ptext16:
  2292                           	callstack 0
  2293   000FD2                     _InicializaLCD:
  2294                           	callstack 25
  2295                           
  2296                           ;LibLCDXC8.h: 72: LATE0=0;
  2297                           
  2298                           ;incstack = 0
  2299   000FD2  908D               	bcf	3981,0,c	;volatile
  2300                           
  2301                           ;LibLCDXC8.h: 75: else;LibLCDXC8.h: 76: LATD=0x3F;
  2302                           
  2303                           ;LibLCDXC8.h: 73: if(interfaz==4)
  2304   000FD4  0E3F               	movlw	63
  2305   000FD6  6E8C               	movwf	140,c	;volatile
  2306                           
  2307                           ;LibLCDXC8.h: 77: HabilitaLCD();
  2308   000FD8  ECEF  F008         	call	_HabilitaLCD	;wreg free
  2309                           
  2310                           ;LibLCDXC8.h: 78: RetardoLCD(1);
  2311   000FDC  0E01               	movlw	1
  2312   000FDE  EC45  F007         	call	_RetardoLCD
  2313                           
  2314                           ;LibLCDXC8.h: 81: else;LibLCDXC8.h: 82: LATD=0x3F;
  2315                           
  2316                           ;LibLCDXC8.h: 79: if(interfaz==4)
  2317   000FE2  0E3F               	movlw	63
  2318   000FE4  6E8C               	movwf	140,c	;volatile
  2319                           
  2320                           ;LibLCDXC8.h: 83: HabilitaLCD();
  2321   000FE6  ECEF  F008         	call	_HabilitaLCD	;wreg free
  2322                           
  2323                           ;LibLCDXC8.h: 84: RetardoLCD(3);
  2324   000FEA  0E03               	movlw	3
  2325   000FEC  EC45  F007         	call	_RetardoLCD
  2326                           
  2327                           ;LibLCDXC8.h: 87: else;LibLCDXC8.h: 88: LATD=0x3F;
  2328                           
  2329                           ;LibLCDXC8.h: 85: if(interfaz==4)
  2330   000FF0  0E3F               	movlw	63
  2331   000FF2  6E8C               	movwf	140,c	;volatile
  2332                           
  2333                           ;LibLCDXC8.h: 89: HabilitaLCD();
  2334   000FF4  ECEF  F008         	call	_HabilitaLCD	;wreg free
  2335                           
  2336                           ;LibLCDXC8.h: 90: RetardoLCD(4);
  2337   000FF8  0E04               	movlw	4
  2338   000FFA  EC45  F007         	call	_RetardoLCD
  2339                           
  2340                           ;LibLCDXC8.h: 98: };LibLCDXC8.h: 99: BorraLCD();
  2341                           
  2342                           ;LibLCDXC8.h: 91: if(interfaz==4){
  2343   000FFE  ECD4  F008         	call	_BorraLCD	;wreg free
  2344                           
  2345                           ;LibLCDXC8.h: 100: EnviaDato(0xF);
  2346   001002  0E0F               	movlw	15
  2347   001004  ECFC  F008         	call	_EnviaDato
  2348                           
  2349                           ;LibLCDXC8.h: 101: HabilitaLCD();
  2350   001008  ECEF  F008         	call	_HabilitaLCD	;wreg free
  2351                           
  2352                           ;LibLCDXC8.h: 102: RetardoLCD(4);
  2353   00100C  0E04               	movlw	4
  2354   00100E  EC45  F007         	call	_RetardoLCD
  2355   001012  0012               	return		;funcret
  2356   001014                     __end_of_InicializaLCD:
  2357                           	callstack 0
  2358                           
  2359 ;; *************** function _BorraLCD *****************
  2360 ;; Defined at:
  2361 ;;		line 111 in file "LibLCDXC8.h"
  2362 ;; Parameters:    Size  Location     Type
  2363 ;;		None
  2364 ;; Auto vars:     Size  Location     Type
  2365 ;;		None
  2366 ;; Return value:  Size  Location     Type
  2367 ;;                  1    wreg      void 
  2368 ;; Registers used:
  2369 ;;		wreg, status,2, status,0, cstack
  2370 ;; Tracked objects:
  2371 ;;		On entry : 0/0
  2372 ;;		On exit  : 0/0
  2373 ;;		Unchanged: 0/0
  2374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2375 ;;      Params:         0       0       0       0       0       0       0       0       0
  2376 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2377 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2378 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2379 ;;Total ram usage:        0 bytes
  2380 ;; Hardware stack levels used: 1
  2381 ;; Hardware stack levels required when called: 4
  2382 ;; This function calls:
  2383 ;;		_EnviaDato
  2384 ;;		_HabilitaLCD
  2385 ;;		_RetardoLCD
  2386 ;; This function is called by:
  2387 ;;		_InicializaLCD
  2388 ;;		_main
  2389 ;;		_TransmitirDatos
  2390 ;; This function uses a non-reentrant model
  2391 ;;
  2392                           
  2393                           	psect	text17
  2394   0011A8                     __ptext17:
  2395                           	callstack 0
  2396   0011A8                     _BorraLCD:
  2397                           	callstack 25
  2398                           
  2399                           ;LibLCDXC8.h: 113: LATE0=0;
  2400                           
  2401                           ;incstack = 0
  2402   0011A8  908D               	bcf	3981,0,c	;volatile
  2403                           
  2404                           ;LibLCDXC8.h: 114: EnviaDato(0x01);
  2405   0011AA  0E01               	movlw	1
  2406   0011AC  ECFC  F008         	call	_EnviaDato
  2407                           
  2408                           ;LibLCDXC8.h: 115: HabilitaLCD();
  2409   0011B0  ECEF  F008         	call	_HabilitaLCD	;wreg free
  2410                           
  2411                           ;LibLCDXC8.h: 116: RetardoLCD(2);
  2412   0011B4  0E02               	movlw	2
  2413   0011B6  EC45  F007         	call	_RetardoLCD
  2414   0011BA  0012               	return		;funcret
  2415   0011BC                     __end_of_BorraLCD:
  2416                           	callstack 0
  2417                           
  2418 ;; *************** function _EnviaDato *****************
  2419 ;; Defined at:
  2420 ;;		line 58 in file "LibLCDXC8.h"
  2421 ;; Parameters:    Size  Location     Type
  2422 ;;  a               1    wreg     unsigned char 
  2423 ;; Auto vars:     Size  Location     Type
  2424 ;;  a               1    4[COMRAM] unsigned char 
  2425 ;; Return value:  Size  Location     Type
  2426 ;;                  1    wreg      void 
  2427 ;; Registers used:
  2428 ;;		wreg
  2429 ;; Tracked objects:
  2430 ;;		On entry : 0/0
  2431 ;;		On exit  : 0/0
  2432 ;;		Unchanged: 0/0
  2433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2434 ;;      Params:         0       0       0       0       0       0       0       0       0
  2435 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2436 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2437 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2438 ;;Total ram usage:        1 bytes
  2439 ;; Hardware stack levels used: 1
  2440 ;; Hardware stack levels required when called: 3
  2441 ;; This function calls:
  2442 ;;		_HabilitaLCD
  2443 ;;		_RetardoLCD
  2444 ;; This function is called by:
  2445 ;;		_InicializaLCD
  2446 ;;		_BorraLCD
  2447 ;;		_EscribeLCD_c
  2448 ;;		_DireccionaLCD
  2449 ;; This function uses a non-reentrant model
  2450 ;;
  2451                           
  2452                           	psect	text18
  2453   0011F8                     __ptext18:
  2454                           	callstack 0
  2455   0011F8                     _EnviaDato:
  2456                           	callstack 24
  2457                           
  2458                           ;incstack = 0
  2459                           ;EnviaDato@a stored from wreg
  2460   0011F8  6E05               	movwf	EnviaDato@a^0,c
  2461                           
  2462                           ;LibLCDXC8.h: 67: LATD=a;
  2463                           
  2464                           ;LibLCDXC8.h: 59: if(interfaz==4){
  2465   0011FA  C005  FF8C         	movff	EnviaDato@a,3980	;volatile
  2466   0011FE  0012               	return		;funcret
  2467   001200                     __end_of_EnviaDato:
  2468                           	callstack 0
  2469                           
  2470 ;; *************** function _RetardoLCD *****************
  2471 ;; Defined at:
  2472 ;;		line 295 in file "LibLCDXC8.h"
  2473 ;; Parameters:    Size  Location     Type
  2474 ;;  a               1    wreg     unsigned char 
  2475 ;; Auto vars:     Size  Location     Type
  2476 ;;  a               1    3[COMRAM] unsigned char 
  2477 ;; Return value:  Size  Location     Type
  2478 ;;                  1    wreg      void 
  2479 ;; Registers used:
  2480 ;;		wreg, status,2, status,0
  2481 ;; Tracked objects:
  2482 ;;		On entry : 0/0
  2483 ;;		On exit  : 0/0
  2484 ;;		Unchanged: 0/0
  2485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2486 ;;      Params:         0       0       0       0       0       0       0       0       0
  2487 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2488 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2489 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2490 ;;Total ram usage:        2 bytes
  2491 ;; Hardware stack levels used: 1
  2492 ;; Hardware stack levels required when called: 2
  2493 ;; This function calls:
  2494 ;;		Nothing
  2495 ;; This function is called by:
  2496 ;;		_EnviaDato
  2497 ;;		_InicializaLCD
  2498 ;;		_BorraLCD
  2499 ;;		_EscribeLCD_c
  2500 ;;		_DireccionaLCD
  2501 ;; This function uses a non-reentrant model
  2502 ;;
  2503                           
  2504                           	psect	text19
  2505   000E8A                     __ptext19:
  2506                           	callstack 0
  2507   000E8A                     _RetardoLCD:
  2508                           	callstack 25
  2509                           
  2510                           ;incstack = 0
  2511                           ;RetardoLCD@a stored from wreg
  2512   000E8A  6E04               	movwf	RetardoLCD@a^0,c
  2513                           
  2514                           ;LibLCDXC8.h: 296: switch(a){
  2515   000E8C  D023               	goto	l1068
  2516   000E8E                     l1058:
  2517   000E8E  0E62               	movlw	98
  2518   000E90  6E03               	movwf	??_RetardoLCD^0,c
  2519   000E92  0E66               	movlw	102
  2520   000E94                     u1117:
  2521   000E94  2EE8               	decfsz	wreg,f,c
  2522   000E96  D7FE               	bra	u1117
  2523   000E98  2E03               	decfsz	??_RetardoLCD^0,f,c
  2524   000E9A  D7FC               	bra	u1117
  2525                           
  2526                           ;LibLCDXC8.h: 299: break;
  2527   000E9C  0012               	return	
  2528   000E9E                     l1060:
  2529   000E9E  0E07               	movlw	7
  2530   000EA0  6E03               	movwf	??_RetardoLCD^0,c
  2531   000EA2  0E7D               	movlw	125
  2532   000EA4                     u1127:
  2533   000EA4  2EE8               	decfsz	wreg,f,c
  2534   000EA6  D7FE               	bra	u1127
  2535   000EA8  2E03               	decfsz	??_RetardoLCD^0,f,c
  2536   000EAA  D7FC               	bra	u1127
  2537   000EAC  F000               	nop	
  2538                           
  2539                           ;LibLCDXC8.h: 301: _delay((unsigned long)((640)*(20000000/4000000.0)));
  2540   000EAE  0E05               	movlw	5
  2541   000EB0  6E03               	movwf	??_RetardoLCD^0,c
  2542   000EB2  0E26               	movlw	38
  2543   000EB4                     u1137:
  2544   000EB4  2EE8               	decfsz	wreg,f,c
  2545   000EB6  D7FE               	bra	u1137
  2546   000EB8  2E03               	decfsz	??_RetardoLCD^0,f,c
  2547   000EBA  D7FC               	bra	u1137
  2548   000EBC  D000               	nop2	
  2549                           
  2550                           ;LibLCDXC8.h: 303: break;
  2551   000EBE  0012               	return	
  2552   000EC0                     l1062:
  2553   000EC0  0EA6               	movlw	166
  2554   000EC2                     u1147:
  2555   000EC2  2EE8               	decfsz	wreg,f,c
  2556   000EC4  D7FE               	bra	u1147
  2557   000EC6  D000               	nop2	
  2558                           
  2559                           ;LibLCDXC8.h: 306: break;
  2560   000EC8  0012               	return	
  2561   000ECA                     l1064:
  2562   000ECA  0E42               	movlw	66
  2563   000ECC                     u1157:
  2564   000ECC  2EE8               	decfsz	wreg,f,c
  2565   000ECE  D7FE               	bra	u1157
  2566   000ED0  D000               	nop2	
  2567                           
  2568                           ;LibLCDXC8.h: 309: break;
  2569   000ED2  0012               	return	
  2570   000ED4                     l1068:
  2571   000ED4  5004               	movf	RetardoLCD@a^0,w,c
  2572                           
  2573                           ; Switch size 1, requested type "simple"
  2574                           ; Number of cases is 4, Range of values is 1 to 4
  2575                           ; switch strategies available:
  2576                           ; Name         Instructions Cycles
  2577                           ; simple_byte           13     7 (average)
  2578                           ;	Chosen strategy is simple_byte
  2579   000ED6  0A01               	xorlw	1	; case 1
  2580   000ED8  B4D8               	btfsc	status,2,c
  2581   000EDA  D7D9               	goto	l1058
  2582   000EDC  0A03               	xorlw	3	; case 2
  2583   000EDE  B4D8               	btfsc	status,2,c
  2584   000EE0  D7DE               	goto	l1060
  2585   000EE2  0A01               	xorlw	1	; case 3
  2586   000EE4  B4D8               	btfsc	status,2,c
  2587   000EE6  D7EC               	goto	l1062
  2588   000EE8  0A07               	xorlw	7	; case 4
  2589   000EEA  A4D8               	btfss	status,2,c
  2590   000EEC  0012               	return	
  2591   000EEE  D7ED               	goto	l1064
  2592   000EF0                     __end_of_RetardoLCD:
  2593                           	callstack 0
  2594                           
  2595 ;; *************** function _HabilitaLCD *****************
  2596 ;; Defined at:
  2597 ;;		line 104 in file "LibLCDXC8.h"
  2598 ;; Parameters:    Size  Location     Type
  2599 ;;		None
  2600 ;; Auto vars:     Size  Location     Type
  2601 ;;		None
  2602 ;; Return value:  Size  Location     Type
  2603 ;;                  1    wreg      void 
  2604 ;; Registers used:
  2605 ;;		wreg
  2606 ;; Tracked objects:
  2607 ;;		On entry : 0/0
  2608 ;;		On exit  : 0/0
  2609 ;;		Unchanged: 0/0
  2610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2611 ;;      Params:         0       0       0       0       0       0       0       0       0
  2612 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2613 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2614 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2615 ;;Total ram usage:        0 bytes
  2616 ;; Hardware stack levels used: 1
  2617 ;; Hardware stack levels required when called: 2
  2618 ;; This function calls:
  2619 ;;		Nothing
  2620 ;; This function is called by:
  2621 ;;		_EnviaDato
  2622 ;;		_InicializaLCD
  2623 ;;		_BorraLCD
  2624 ;;		_EscribeLCD_c
  2625 ;;		_DireccionaLCD
  2626 ;; This function uses a non-reentrant model
  2627 ;;
  2628                           
  2629                           	psect	text20
  2630   0011DE                     __ptext20:
  2631                           	callstack 0
  2632   0011DE                     _HabilitaLCD:
  2633                           	callstack 25
  2634                           
  2635                           ;LibLCDXC8.h: 106: LATE2=1;
  2636                           
  2637                           ;incstack = 0
  2638   0011DE  848D               	bsf	3981,2,c	;volatile
  2639                           
  2640                           ;LibLCDXC8.h: 107: _delay((unsigned long)((40)*(20000000/4000000.0)));
  2641   0011E0  0E42               	movlw	66
  2642   0011E2                     u1167:
  2643   0011E2  2EE8               	decfsz	wreg,f,c
  2644   0011E4  D7FE               	bra	u1167
  2645   0011E6  D000               	nop2	
  2646                           
  2647                           ;LibLCDXC8.h: 109: LATE2=0;
  2648   0011E8  948D               	bcf	3981,2,c	;volatile
  2649   0011EA  0012               	return		;funcret
  2650   0011EC                     __end_of_HabilitaLCD:
  2651                           	callstack 0
  2652                           
  2653 ;; *************** function _GuardarDatoEnEEPROM *****************
  2654 ;; Defined at:
  2655 ;;		line 286 in file "Laboratorio5.c"
  2656 ;; Parameters:    Size  Location     Type
  2657 ;;  dir             2    2[COMRAM] unsigned int 
  2658 ;;  dato            1    4[COMRAM] unsigned char 
  2659 ;; Auto vars:     Size  Location     Type
  2660 ;;		None
  2661 ;; Return value:  Size  Location     Type
  2662 ;;                  1    wreg      void 
  2663 ;; Registers used:
  2664 ;;		wreg, status,2
  2665 ;; Tracked objects:
  2666 ;;		On entry : 0/0
  2667 ;;		On exit  : 0/0
  2668 ;;		Unchanged: 0/0
  2669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2670 ;;      Params:         3       0       0       0       0       0       0       0       0
  2671 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2672 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2673 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2674 ;;Total ram usage:        3 bytes
  2675 ;; Hardware stack levels used: 1
  2676 ;; Hardware stack levels required when called: 2
  2677 ;; This function calls:
  2678 ;;		Nothing
  2679 ;; This function is called by:
  2680 ;;		_main
  2681 ;; This function uses a non-reentrant model
  2682 ;;
  2683                           
  2684                           	psect	text21
  2685   001134                     __ptext21:
  2686                           	callstack 0
  2687   001134                     _GuardarDatoEnEEPROM:
  2688                           	callstack 28
  2689                           
  2690                           ;Laboratorio5.c: 287: EEADR = dir;
  2691                           
  2692                           ;incstack = 0
  2693   001134  C003  FFA9         	movff	GuardarDatoEnEEPROM@dir,4009	;volatile
  2694                           
  2695                           ;Laboratorio5.c: 288: EEDATA = dato;
  2696   001138  C005  FFA8         	movff	GuardarDatoEnEEPROM@dato,4008	;volatile
  2697                           
  2698                           ;Laboratorio5.c: 290: EEPGD = 0;
  2699   00113C  9EA6               	bcf	4006,7,c	;volsfr
  2700                           
  2701                           ;Laboratorio5.c: 291: CFGS = 0;
  2702   00113E  9CA6               	bcf	4006,6,c	;volsfr
  2703                           
  2704                           ;Laboratorio5.c: 292: WREN = 1;
  2705   001140  84A6               	bsf	4006,2,c	;volsfr
  2706                           
  2707                           ;Laboratorio5.c: 294: GIE = 0;
  2708   001142  9EF2               	bcf	4082,7,c	;volatile
  2709                           
  2710                           ;Laboratorio5.c: 296: EECON2 = 0x55;
  2711   001144  0E55               	movlw	85
  2712   001146  6EA7               	movwf	167,c	;volsfr
  2713                           
  2714                           ;Laboratorio5.c: 297: EECON2 = 0xAA;
  2715   001148  0EAA               	movlw	170
  2716   00114A  6EA7               	movwf	167,c	;volsfr
  2717                           
  2718                           ;Laboratorio5.c: 298: WR = 1;
  2719   00114C  82A6               	bsf	4006,1,c	;volsfr
  2720                           
  2721                           ;Laboratorio5.c: 299: GIE = 1;
  2722   00114E  8EF2               	bsf	4082,7,c	;volatile
  2723   001150                     l282:
  2724   001150  A8A1               	btfss	4001,4,c	;volatile
  2725   001152  D7FE               	goto	l282
  2726                           
  2727                           ;Laboratorio5.c: 301: EEIF = 0;
  2728   001154  98A1               	bcf	4001,4,c	;volatile
  2729                           
  2730                           ;Laboratorio5.c: 302: WREN = 0;
  2731   001156  94A6               	bcf	4006,2,c	;volsfr
  2732   001158  0012               	return		;funcret
  2733   00115A                     __end_of_GuardarDatoEnEEPROM:
  2734                           	callstack 0
  2735                           
  2736 ;; *************** function _Conversion *****************
  2737 ;; Defined at:
  2738 ;;		line 279 in file "Laboratorio5.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;  canal           1    wreg     unsigned char 
  2741 ;; Auto vars:     Size  Location     Type
  2742 ;;  canal           1    2[COMRAM] unsigned char 
  2743 ;; Return value:  Size  Location     Type
  2744 ;;                  2   84[None  ] unsigned int 
  2745 ;; Registers used:
  2746 ;;		wreg, status,2, status,0
  2747 ;; Tracked objects:
  2748 ;;		On entry : 0/0
  2749 ;;		On exit  : 0/0
  2750 ;;		Unchanged: 0/0
  2751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2752 ;;      Params:         0       0       0       0       0       0       0       0       0
  2753 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2754 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2755 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2756 ;;Total ram usage:        1 bytes
  2757 ;; Hardware stack levels used: 1
  2758 ;; Hardware stack levels required when called: 2
  2759 ;; This function calls:
  2760 ;;		Nothing
  2761 ;; This function is called by:
  2762 ;;		_main
  2763 ;; This function uses a non-reentrant model
  2764 ;;
  2765                           
  2766                           	psect	text22
  2767   0011BC                     __ptext22:
  2768                           	callstack 0
  2769   0011BC                     _Conversion:
  2770                           	callstack 28
  2771                           
  2772                           ;incstack = 0
  2773                           ;Conversion@canal stored from wreg
  2774   0011BC  6E03               	movwf	Conversion@canal^0,c
  2775                           
  2776                           ;Laboratorio5.c: 280: ADCON0 = 0b00000001 | (canal << 2);
  2777   0011BE  4403               	rlncf	Conversion@canal^0,w,c
  2778   0011C0  46E8               	rlncf	wreg,f,c
  2779   0011C2  0BFC               	andlw	252
  2780   0011C4  0901               	iorlw	1
  2781   0011C6  6EC2               	movwf	194,c	;volatile
  2782                           
  2783                           ;Laboratorio5.c: 281: GO = 1;
  2784   0011C8  82C2               	bsf	4034,1,c	;volatile
  2785   0011CA                     l276:
  2786   0011CA  A2C2               	btfss	4034,1,c	;volatile
  2787   0011CC  0012               	return	
  2788   0011CE  D7FD               	goto	l276
  2789   0011D0                     __end_of_Conversion:
  2790                           	callstack 0
  2791                           
  2792 ;; *************** function _ColorRGB *****************
  2793 ;; Defined at:
  2794 ;;		line 243 in file "Laboratorio5.c"
  2795 ;; Parameters:    Size  Location     Type
  2796 ;;  val             2    2[COMRAM] unsigned int 
  2797 ;; Auto vars:     Size  Location     Type
  2798 ;;		None
  2799 ;; Return value:  Size  Location     Type
  2800 ;;                  1    wreg      void 
  2801 ;; Registers used:
  2802 ;;		wreg, status,2, status,0
  2803 ;; Tracked objects:
  2804 ;;		On entry : 0/0
  2805 ;;		On exit  : 0/0
  2806 ;;		Unchanged: 0/0
  2807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2808 ;;      Params:         2       0       0       0       0       0       0       0       0
  2809 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2810 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2811 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2812 ;;Total ram usage:        2 bytes
  2813 ;; Hardware stack levels used: 1
  2814 ;; Hardware stack levels required when called: 2
  2815 ;; This function calls:
  2816 ;;		Nothing
  2817 ;; This function is called by:
  2818 ;;		_main
  2819 ;; This function uses a non-reentrant model
  2820 ;;
  2821                           
  2822                           	psect	text23
  2823   000C94                     __ptext23:
  2824                           	callstack 0
  2825   000C94                     _ColorRGB:
  2826                           	callstack 28
  2827                           
  2828                           ;Laboratorio5.c: 244: if (val < 22) {
  2829                           
  2830                           ;incstack = 0
  2831   000C94  5004               	movf	(ColorRGB@val+1)^0,w,c
  2832   000C96  E108               	bnz	l1790
  2833   000C98  0E16               	movlw	22
  2834   000C9A  5C03               	subwf	ColorRGB@val^0,w,c
  2835   000C9C  B0D8               	btfsc	status,0,c
  2836   000C9E  D004               	goto	l1790
  2837                           
  2838                           ;Laboratorio5.c: 245: RB7 = 0;
  2839   000CA0  9E81               	bcf	3969,7,c	;volatile
  2840                           
  2841                           ;Laboratorio5.c: 246: RB6 = 0;
  2842   000CA2  9C81               	bcf	3969,6,c	;volatile
  2843                           
  2844                           ;Laboratorio5.c: 247: RB5 = 0;
  2845   000CA4  9A81               	bcf	3969,5,c	;volatile
  2846                           
  2847                           ;Laboratorio5.c: 248: } else if (val >= 22 && val < 25) {
  2848   000CA6  0012               	return	
  2849   000CA8                     l1790:
  2850   000CA8  5004               	movf	(ColorRGB@val+1)^0,w,c
  2851   000CAA  E104               	bnz	u770
  2852   000CAC  0E16               	movlw	22
  2853   000CAE  5C03               	subwf	ColorRGB@val^0,w,c
  2854   000CB0  A0D8               	btfss	status,0,c
  2855   000CB2  D00A               	goto	l1796
  2856   000CB4                     u770:
  2857   000CB4  5004               	movf	(ColorRGB@val+1)^0,w,c
  2858   000CB6  E108               	bnz	l1796
  2859   000CB8  0E19               	movlw	25
  2860   000CBA  5C03               	subwf	ColorRGB@val^0,w,c
  2861   000CBC  B0D8               	btfsc	status,0,c
  2862   000CBE  D004               	goto	l1796
  2863                           
  2864                           ;Laboratorio5.c: 249: RB7 = 1;
  2865   000CC0  8E81               	bsf	3969,7,c	;volatile
  2866                           
  2867                           ;Laboratorio5.c: 250: RB6 = 0;
  2868   000CC2  9C81               	bcf	3969,6,c	;volatile
  2869                           
  2870                           ;Laboratorio5.c: 251: RB5 = 1;
  2871   000CC4  8A81               	bsf	3969,5,c	;volatile
  2872                           
  2873                           ;Laboratorio5.c: 252: } else if (val >= 25 && val < 28) {
  2874   000CC6  0012               	return	
  2875   000CC8                     l1796:
  2876   000CC8  5004               	movf	(ColorRGB@val+1)^0,w,c
  2877   000CCA  E104               	bnz	u790
  2878   000CCC  0E19               	movlw	25
  2879   000CCE  5C03               	subwf	ColorRGB@val^0,w,c
  2880   000CD0  A0D8               	btfss	status,0,c
  2881   000CD2  D00A               	goto	l1802
  2882   000CD4                     u790:
  2883   000CD4  5004               	movf	(ColorRGB@val+1)^0,w,c
  2884   000CD6  E108               	bnz	l1802
  2885   000CD8  0E1C               	movlw	28
  2886   000CDA  5C03               	subwf	ColorRGB@val^0,w,c
  2887   000CDC  B0D8               	btfsc	status,0,c
  2888   000CDE  D004               	goto	l1802
  2889                           
  2890                           ;Laboratorio5.c: 253: RB7 = 0;
  2891   000CE0  9E81               	bcf	3969,7,c	;volatile
  2892                           
  2893                           ;Laboratorio5.c: 254: RB6 = 0;
  2894   000CE2  9C81               	bcf	3969,6,c	;volatile
  2895                           
  2896                           ;Laboratorio5.c: 255: RB5 = 1;
  2897   000CE4  8A81               	bsf	3969,5,c	;volatile
  2898                           
  2899                           ;Laboratorio5.c: 256: } else if (val >= 28 && val < 31) {
  2900   000CE6  0012               	return	
  2901   000CE8                     l1802:
  2902   000CE8  5004               	movf	(ColorRGB@val+1)^0,w,c
  2903   000CEA  E104               	bnz	u810
  2904   000CEC  0E1C               	movlw	28
  2905   000CEE  5C03               	subwf	ColorRGB@val^0,w,c
  2906   000CF0  A0D8               	btfss	status,0,c
  2907   000CF2  D00A               	goto	l1808
  2908   000CF4                     u810:
  2909   000CF4  5004               	movf	(ColorRGB@val+1)^0,w,c
  2910   000CF6  E108               	bnz	l1808
  2911   000CF8  0E1F               	movlw	31
  2912   000CFA  5C03               	subwf	ColorRGB@val^0,w,c
  2913   000CFC  B0D8               	btfsc	status,0,c
  2914   000CFE  D004               	goto	l1808
  2915                           
  2916                           ;Laboratorio5.c: 257: RB7 = 0;
  2917   000D00  9E81               	bcf	3969,7,c	;volatile
  2918                           
  2919                           ;Laboratorio5.c: 258: RB6 = 1;
  2920   000D02  8C81               	bsf	3969,6,c	;volatile
  2921                           
  2922                           ;Laboratorio5.c: 259: RB5 = 1;
  2923   000D04  8A81               	bsf	3969,5,c	;volatile
  2924                           
  2925                           ;Laboratorio5.c: 260: } else if (val >= 31 && val < 34) {
  2926   000D06  0012               	return	
  2927   000D08                     l1808:
  2928   000D08  5004               	movf	(ColorRGB@val+1)^0,w,c
  2929   000D0A  E104               	bnz	u830
  2930   000D0C  0E1F               	movlw	31
  2931   000D0E  5C03               	subwf	ColorRGB@val^0,w,c
  2932   000D10  A0D8               	btfss	status,0,c
  2933   000D12  D00A               	goto	l1814
  2934   000D14                     u830:
  2935   000D14  5004               	movf	(ColorRGB@val+1)^0,w,c
  2936   000D16  E108               	bnz	l1814
  2937   000D18  0E22               	movlw	34
  2938   000D1A  5C03               	subwf	ColorRGB@val^0,w,c
  2939   000D1C  B0D8               	btfsc	status,0,c
  2940   000D1E  D004               	goto	l1814
  2941                           
  2942                           ;Laboratorio5.c: 261: RB7 = 0;
  2943   000D20  9E81               	bcf	3969,7,c	;volatile
  2944                           
  2945                           ;Laboratorio5.c: 262: RB6 = 1;
  2946   000D22  8C81               	bsf	3969,6,c	;volatile
  2947                           
  2948                           ;Laboratorio5.c: 263: RB5 = 0;
  2949   000D24  9A81               	bcf	3969,5,c	;volatile
  2950                           
  2951                           ;Laboratorio5.c: 264: } else if (val >= 34 && val < 37) {
  2952   000D26  0012               	return	
  2953   000D28                     l1814:
  2954   000D28  5004               	movf	(ColorRGB@val+1)^0,w,c
  2955   000D2A  E104               	bnz	u850
  2956   000D2C  0E22               	movlw	34
  2957   000D2E  5C03               	subwf	ColorRGB@val^0,w,c
  2958   000D30  A0D8               	btfss	status,0,c
  2959   000D32  D00A               	goto	l1820
  2960   000D34                     u850:
  2961   000D34  5004               	movf	(ColorRGB@val+1)^0,w,c
  2962   000D36  E108               	bnz	l1820
  2963   000D38  0E25               	movlw	37
  2964   000D3A  5C03               	subwf	ColorRGB@val^0,w,c
  2965   000D3C  B0D8               	btfsc	status,0,c
  2966   000D3E  D004               	goto	l1820
  2967                           
  2968                           ;Laboratorio5.c: 265: RB7 = 1;
  2969   000D40  8E81               	bsf	3969,7,c	;volatile
  2970                           
  2971                           ;Laboratorio5.c: 266: RB6 = 1;
  2972   000D42  8C81               	bsf	3969,6,c	;volatile
  2973                           
  2974                           ;Laboratorio5.c: 267: RB5 = 0;
  2975   000D44  9A81               	bcf	3969,5,c	;volatile
  2976                           
  2977                           ;Laboratorio5.c: 268: } else if (val >= 37 && val < 40) {
  2978   000D46  0012               	return	
  2979   000D48                     l1820:
  2980   000D48  5004               	movf	(ColorRGB@val+1)^0,w,c
  2981   000D4A  E104               	bnz	u870
  2982   000D4C  0E25               	movlw	37
  2983   000D4E  5C03               	subwf	ColorRGB@val^0,w,c
  2984   000D50  A0D8               	btfss	status,0,c
  2985   000D52  D00A               	goto	l1826
  2986   000D54                     u870:
  2987   000D54  5004               	movf	(ColorRGB@val+1)^0,w,c
  2988   000D56  E108               	bnz	l1826
  2989   000D58  0E28               	movlw	40
  2990   000D5A  5C03               	subwf	ColorRGB@val^0,w,c
  2991   000D5C  B0D8               	btfsc	status,0,c
  2992   000D5E  D004               	goto	l1826
  2993                           
  2994                           ;Laboratorio5.c: 269: RB7 = 1;
  2995   000D60  8E81               	bsf	3969,7,c	;volatile
  2996                           
  2997                           ;Laboratorio5.c: 270: RB6 = 0;
  2998   000D62  9C81               	bcf	3969,6,c	;volatile
  2999                           
  3000                           ;Laboratorio5.c: 271: RB5 = 0;
  3001   000D64  9A81               	bcf	3969,5,c	;volatile
  3002                           
  3003                           ;Laboratorio5.c: 272: } else if (val >= 40) {
  3004   000D66  0012               	return	
  3005   000D68                     l1826:
  3006   000D68  5004               	movf	(ColorRGB@val+1)^0,w,c
  3007   000D6A  E104               	bnz	u890
  3008   000D6C  0E28               	movlw	40
  3009   000D6E  5C03               	subwf	ColorRGB@val^0,w,c
  3010   000D70  A0D8               	btfss	status,0,c
  3011   000D72  0012               	return	
  3012   000D74                     u890:
  3013                           
  3014                           ;Laboratorio5.c: 273: RB7 = 1;
  3015   000D74  8E81               	bsf	3969,7,c	;volatile
  3016                           
  3017                           ;Laboratorio5.c: 274: RB6 = 1;
  3018   000D76  8C81               	bsf	3969,6,c	;volatile
  3019                           
  3020                           ;Laboratorio5.c: 275: RB5 = 1;
  3021   000D78  8A81               	bsf	3969,5,c	;volatile
  3022   000D7A  0012               	return	
  3023   000D7C                     __end_of_ColorRGB:
  3024                           	callstack 0
  3025                           
  3026 ;; *************** function _ISR *****************
  3027 ;; Defined at:
  3028 ;;		line 316 in file "Laboratorio5.c"
  3029 ;; Parameters:    Size  Location     Type
  3030 ;;		None
  3031 ;; Auto vars:     Size  Location     Type
  3032 ;;		None
  3033 ;; Return value:  Size  Location     Type
  3034 ;;                  1    wreg      void 
  3035 ;; Registers used:
  3036 ;;		wreg, status,2, status,0, cstack
  3037 ;; Tracked objects:
  3038 ;;		On entry : 0/0
  3039 ;;		On exit  : 0/0
  3040 ;;		Unchanged: 0/0
  3041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3042 ;;      Params:         0       0       0       0       0       0       0       0       0
  3043 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3044 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3045 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3046 ;;Total ram usage:        2 bytes
  3047 ;; Hardware stack levels used: 1
  3048 ;; Hardware stack levels required when called: 1
  3049 ;; This function calls:
  3050 ;;		_Recibir
  3051 ;; This function is called by:
  3052 ;;		Interrupt level 2
  3053 ;; This function uses a non-reentrant model
  3054 ;;
  3055                           
  3056                           	psect	intcode
  3057   000008                     __pintcode:
  3058                           	callstack 0
  3059   000008                     _ISR:
  3060                           	callstack 24
  3061                           
  3062                           ;incstack = 0
  3063   000008  8221               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3064   00000A  EDBE  F006         	call	int_func,f	;refresh shadow registers
  3065                           
  3066                           	psect	intcode_body
  3067   000D7C                     __pintcode_body:
  3068                           	callstack 24
  3069   000D7C                     int_func:
  3070                           	callstack 24
  3071   000D7C  0006               	pop		; remove dummy address from shadow register refresh
  3072                           
  3073                           ;Laboratorio5.c: 317: if(TMR0IF){
  3074   000D7E  A4F2               	btfss	4082,2,c	;volatile
  3075   000D80  D00A               	goto	i2l1604
  3076                           
  3077                           ;Laboratorio5.c: 318: TMR0IF=0;
  3078   000D82  94F2               	bcf	4082,2,c	;volatile
  3079                           
  3080                           ;Laboratorio5.c: 319: RC0 = !RC0;
  3081   000D84  B082               	btfsc	3970,0,c	;volatile
  3082   000D86  D002               	goto	i2u54_40
  3083   000D88  8082               	bsf	3970,0,c	;volatile
  3084   000D8A  D001               	goto	i2u55_45
  3085   000D8C                     i2u54_40:
  3086   000D8C  9082               	bcf	3970,0,c	;volatile
  3087   000D8E                     i2u55_45:
  3088                           
  3089                           ;Laboratorio5.c: 320: TMR0 = 3036;
  3090   000D8E  0E0B               	movlw	11
  3091   000D90  6ED7               	movwf	215,c	;volatile
  3092   000D92  0EDC               	movlw	220
  3093   000D94  6ED6               	movwf	214,c	;volatile
  3094   000D96                     i2l1604:
  3095                           
  3096                           ;Laboratorio5.c: 322: };Laboratorio5.c: 323: if(RCIF){
  3097   000D96  BA9E               	btfsc	3998,5,c	;volatile
  3098   000D98  D01A               	goto	i2l1618
  3099   000D9A  D033               	goto	i2l302
  3100   000D9C                     i2l1608:
  3101                           
  3102                           ;Laboratorio5.c: 326: A=0;
  3103   000D9C  0E00               	movlw	0
  3104   000D9E  6E1C               	movwf	(_A+1)^0,c
  3105   000DA0  0E00               	movlw	0
  3106   000DA2  6E1B               	movwf	_A^0,c
  3107                           
  3108                           ;Laboratorio5.c: 327: B=0;
  3109   000DA4  0E00               	movlw	0
  3110   000DA6  6E1A               	movwf	(_B+1)^0,c
  3111   000DA8  0E00               	movlw	0
  3112   000DAA  D00F               	goto	L6
  3113   000DAC                     i2l1610:
  3114                           
  3115                           ;Laboratorio5.c: 330: A=0;
  3116   000DAC  0E00               	movlw	0
  3117   000DAE  6E1C               	movwf	(_A+1)^0,c
  3118   000DB0  0E00               	movlw	0
  3119   000DB2  D007               	goto	L8
  3120   000DB4                     i2l1612:
  3121                           
  3122                           ;Laboratorio5.c: 334: A=1;
  3123   000DB4  0E00               	movlw	0
  3124   000DB6  6E1C               	movwf	(_A+1)^0,c
  3125   000DB8  0E01               	movlw	1
  3126   000DBA  D7F3               	goto	L7
  3127   000DBC                     i2l1614:
  3128                           
  3129                           ;Laboratorio5.c: 338: A=1;
  3130   000DBC  0E00               	movlw	0
  3131   000DBE  6E1C               	movwf	(_A+1)^0,c
  3132   000DC0  0E01               	movlw	1
  3133   000DC2                     L8:
  3134   000DC2  6E1B               	movwf	_A^0,c
  3135                           
  3136                           ;Laboratorio5.c: 339: B=1;
  3137   000DC4  0E00               	movlw	0
  3138   000DC6  6E1A               	movwf	(_B+1)^0,c
  3139   000DC8  0E01               	movlw	1
  3140   000DCA                     L6:
  3141   000DCA  6E19               	movwf	_B^0,c
  3142                           
  3143                           ;Laboratorio5.c: 340: break;
  3144   000DCC  D00E               	goto	i2l1620
  3145   000DCE                     i2l1618:
  3146   000DCE  EC00  F009         	call	_Recibir	;wreg free
  3147                           
  3148                           ; Switch size 1, requested type "simple"
  3149                           ; Number of cases is 4, Range of values is 67 to 82
  3150                           ; switch strategies available:
  3151                           ; Name         Instructions Cycles
  3152                           ; simple_byte           13     7 (average)
  3153                           ;	Chosen strategy is simple_byte
  3154   000DD2  0A43               	xorlw	67	; case 67
  3155   000DD4  B4D8               	btfsc	status,2,c
  3156   000DD6  D7E2               	goto	i2l1608
  3157   000DD8  0A05               	xorlw	5	; case 70
  3158   000DDA  B4D8               	btfsc	status,2,c
  3159   000DDC  D7EF               	goto	i2l1614
  3160   000DDE  0A0D               	xorlw	13	; case 75
  3161   000DE0  B4D8               	btfsc	status,2,c
  3162   000DE2  D7E4               	goto	i2l1610
  3163   000DE4  0A19               	xorlw	25	; case 82
  3164   000DE6  B4D8               	btfsc	status,2,c
  3165   000DE8  D7E5               	goto	i2l1612
  3166   000DEA                     i2l1620:
  3167                           
  3168                           ;Laboratorio5.c: 344: _delay((unsigned long)((100)*(8000000/4000.0)));
  3169   000DEA  0E02               	movlw	2
  3170   000DEC  6E02               	movwf	(??_ISR+1)^0,c
  3171   000DEE  0E04               	movlw	4
  3172   000DF0  6E01               	movwf	??_ISR^0,c
  3173   000DF2  0EBA               	movlw	186
  3174   000DF4                     i2u117_47:
  3175   000DF4  2EE8               	decfsz	wreg,f,c
  3176   000DF6  D7FE               	bra	i2u117_47
  3177   000DF8  2E01               	decfsz	??_ISR^0,f,c
  3178   000DFA  D7FC               	bra	i2u117_47
  3179   000DFC  2E02               	decfsz	(??_ISR+1)^0,f,c
  3180   000DFE  D7FA               	bra	i2u117_47
  3181   000E00  D000               	nop2	
  3182   000E02                     i2l302:
  3183   000E02  9221               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3184   000E04  0011               	retfie		f
  3185   000E06                     __end_of_ISR:
  3186                           	callstack 0
  3187                           
  3188 ;; *************** function _Recibir *****************
  3189 ;; Defined at:
  3190 ;;		line 168 in file "Laboratorio5.c"
  3191 ;; Parameters:    Size  Location     Type
  3192 ;;		None
  3193 ;; Auto vars:     Size  Location     Type
  3194 ;;		None
  3195 ;; Return value:  Size  Location     Type
  3196 ;;                  1    wreg      unsigned char 
  3197 ;; Registers used:
  3198 ;;		wreg, status,2
  3199 ;; Tracked objects:
  3200 ;;		On entry : 0/0
  3201 ;;		On exit  : 0/0
  3202 ;;		Unchanged: 0/0
  3203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3204 ;;      Params:         0       0       0       0       0       0       0       0       0
  3205 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3206 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3207 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3208 ;;Total ram usage:        0 bytes
  3209 ;; Hardware stack levels used: 1
  3210 ;; This function calls:
  3211 ;;		Nothing
  3212 ;; This function is called by:
  3213 ;;		_ISR
  3214 ;; This function uses a non-reentrant model
  3215 ;;
  3216                           
  3217                           	psect	text25
  3218   001200                     __ptext25:
  3219                           	callstack 0
  3220   001200                     _Recibir:
  3221                           	callstack 24
  3222                           
  3223                           ;Laboratorio5.c: 169: while(RCIF==0);
  3224                           
  3225                           ;incstack = 0
  3226   001200  AA9E               	btfss	3998,5,c	;volatile
  3227   001202  D7FE               	goto	__ptext25
  3228                           
  3229                           ;Laboratorio5.c: 170: return RCREG;
  3230   001204  50AE               	movf	174,w,c	;volatile
  3231   001206  0012               	return		;funcret
  3232   001208                     __end_of_Recibir:
  3233                           	callstack 0
  3234                           
  3235                           	psect	rparam
  3236   000000                     
  3237                           	psect	temp
  3238   000021                     btemp:
  3239                           	callstack 0
  3240   000021                     	ds	1
  3241   000000                     int$flags	set	btemp
  3242   000000                     wtemp8	set	btemp+1
  3243   000000                     ttemp5	set	btemp+1
  3244   000000                     ttemp6	set	btemp+4
  3245   000000                     ttemp7	set	btemp+8
  3246                           
  3247                           	psect	idloc
  3248                           
  3249                           ;Config register IDLOC0 @ 0x200000
  3250                           ;	unspecified, using default values
  3251   200000                     	org	2097152
  3252   200000  FF                 	db	255
  3253                           
  3254                           ;Config register IDLOC1 @ 0x200001
  3255                           ;	unspecified, using default values
  3256   200001                     	org	2097153
  3257   200001  FF                 	db	255
  3258                           
  3259                           ;Config register IDLOC2 @ 0x200002
  3260                           ;	unspecified, using default values
  3261   200002                     	org	2097154
  3262   200002  FF                 	db	255
  3263                           
  3264                           ;Config register IDLOC3 @ 0x200003
  3265                           ;	unspecified, using default values
  3266   200003                     	org	2097155
  3267   200003  FF                 	db	255
  3268                           
  3269                           ;Config register IDLOC4 @ 0x200004
  3270                           ;	unspecified, using default values
  3271   200004                     	org	2097156
  3272   200004  FF                 	db	255
  3273                           
  3274                           ;Config register IDLOC5 @ 0x200005
  3275                           ;	unspecified, using default values
  3276   200005                     	org	2097157
  3277   200005  FF                 	db	255
  3278                           
  3279                           ;Config register IDLOC6 @ 0x200006
  3280                           ;	unspecified, using default values
  3281   200006                     	org	2097158
  3282   200006  FF                 	db	255
  3283                           
  3284                           ;Config register IDLOC7 @ 0x200007
  3285                           ;	unspecified, using default values
  3286   200007                     	org	2097159
  3287   200007  FF                 	db	255
  3288                           
  3289                           	psect	config
  3290                           
  3291                           ;Config register CONFIG1L @ 0x300000
  3292                           ;	unspecified, using default values
  3293                           ;	PLL Prescaler Selection bits
  3294                           ;	PLLDIV = 0x0, unprogrammed default
  3295                           ;	System Clock Postscaler Selection bits
  3296                           ;	CPUDIV = 0x0, unprogrammed default
  3297                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3298                           ;	USBDIV = 0x0, unprogrammed default
  3299   300000                     	org	3145728
  3300   300000  00                 	db	0
  3301                           
  3302                           ;Config register CONFIG1H @ 0x300001
  3303                           ;	Oscillator Selection bits
  3304                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  3305                           ;	Fail-Safe Clock Monitor Enable bit
  3306                           ;	FCMEN = 0x0, unprogrammed default
  3307                           ;	Internal/External Oscillator Switchover bit
  3308                           ;	IESO = 0x0, unprogrammed default
  3309   300001                     	org	3145729
  3310   300001  09                 	db	9
  3311                           
  3312                           ;Config register CONFIG2L @ 0x300002
  3313                           ;	unspecified, using default values
  3314                           ;	Power-up Timer Enable bit
  3315                           ;	PWRT = 0x1, unprogrammed default
  3316                           ;	Brown-out Reset Enable bits
  3317                           ;	BOR = 0x3, unprogrammed default
  3318                           ;	Brown-out Reset Voltage bits
  3319                           ;	BORV = 0x3, unprogrammed default
  3320                           ;	USB Voltage Regulator Enable bit
  3321                           ;	VREGEN = 0x0, unprogrammed default
  3322   300002                     	org	3145730
  3323   300002  1F                 	db	31
  3324                           
  3325                           ;Config register CONFIG2H @ 0x300003
  3326                           ;	Watchdog Timer Enable bit
  3327                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3328                           ;	Watchdog Timer Postscale Select bits
  3329                           ;	WDTPS = 0xF, unprogrammed default
  3330   300003                     	org	3145731
  3331   300003  1E                 	db	30
  3332                           
  3333                           ; Padding undefined space
  3334   300004                     	org	3145732
  3335   300004  FF                 	db	255
  3336                           
  3337                           ;Config register CONFIG3H @ 0x300005
  3338                           ;	CCP2 MUX bit
  3339                           ;	CCP2MX = 0x1, unprogrammed default
  3340                           ;	PORTB A/D Enable bit
  3341                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3342                           ;	Low-Power Timer 1 Oscillator Enable bit
  3343                           ;	LPT1OSC = 0x0, unprogrammed default
  3344                           ;	MCLR Pin Enable bit
  3345                           ;	MCLRE = 0x1, unprogrammed default
  3346   300005                     	org	3145733
  3347   300005  81                 	db	129
  3348                           
  3349                           ;Config register CONFIG4L @ 0x300006
  3350                           ;	unspecified, using default values
  3351                           ;	Stack Full/Underflow Reset Enable bit
  3352                           ;	STVREN = 0x1, unprogrammed default
  3353                           ;	Single-Supply ICSP Enable bit
  3354                           ;	LVP = 0x1, unprogrammed default
  3355                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  3356                           ;	ICPRT = 0x0, unprogrammed default
  3357                           ;	Extended Instruction Set Enable bit
  3358                           ;	XINST = 0x0, unprogrammed default
  3359                           ;	Background Debugger Enable bit
  3360                           ;	DEBUG = 0x1, unprogrammed default
  3361   300006                     	org	3145734
  3362   300006  85                 	db	133
  3363                           
  3364                           ; Padding undefined space
  3365   300007                     	org	3145735
  3366   300007  FF                 	db	255
  3367                           
  3368                           ;Config register CONFIG5L @ 0x300008
  3369                           ;	unspecified, using default values
  3370                           ;	Code Protection bit
  3371                           ;	CP0 = 0x1, unprogrammed default
  3372                           ;	Code Protection bit
  3373                           ;	CP1 = 0x1, unprogrammed default
  3374                           ;	Code Protection bit
  3375                           ;	CP2 = 0x1, unprogrammed default
  3376                           ;	Code Protection bit
  3377                           ;	CP3 = 0x1, unprogrammed default
  3378   300008                     	org	3145736
  3379   300008  0F                 	db	15
  3380                           
  3381                           ;Config register CONFIG5H @ 0x300009
  3382                           ;	unspecified, using default values
  3383                           ;	Boot Block Code Protection bit
  3384                           ;	CPB = 0x1, unprogrammed default
  3385                           ;	Data EEPROM Code Protection bit
  3386                           ;	CPD = 0x1, unprogrammed default
  3387   300009                     	org	3145737
  3388   300009  C0                 	db	192
  3389                           
  3390                           ;Config register CONFIG6L @ 0x30000A
  3391                           ;	unspecified, using default values
  3392                           ;	Write Protection bit
  3393                           ;	WRT0 = 0x1, unprogrammed default
  3394                           ;	Write Protection bit
  3395                           ;	WRT1 = 0x1, unprogrammed default
  3396                           ;	Write Protection bit
  3397                           ;	WRT2 = 0x1, unprogrammed default
  3398                           ;	Write Protection bit
  3399                           ;	WRT3 = 0x1, unprogrammed default
  3400   30000A                     	org	3145738
  3401   30000A  0F                 	db	15
  3402                           
  3403                           ;Config register CONFIG6H @ 0x30000B
  3404                           ;	unspecified, using default values
  3405                           ;	Configuration Register Write Protection bit
  3406                           ;	WRTC = 0x1, unprogrammed default
  3407                           ;	Boot Block Write Protection bit
  3408                           ;	WRTB = 0x1, unprogrammed default
  3409                           ;	Data EEPROM Write Protection bit
  3410                           ;	WRTD = 0x1, unprogrammed default
  3411   30000B                     	org	3145739
  3412   30000B  E0                 	db	224
  3413                           
  3414                           ;Config register CONFIG7L @ 0x30000C
  3415                           ;	unspecified, using default values
  3416                           ;	Table Read Protection bit
  3417                           ;	EBTR0 = 0x1, unprogrammed default
  3418                           ;	Table Read Protection bit
  3419                           ;	EBTR1 = 0x1, unprogrammed default
  3420                           ;	Table Read Protection bit
  3421                           ;	EBTR2 = 0x1, unprogrammed default
  3422                           ;	Table Read Protection bit
  3423                           ;	EBTR3 = 0x1, unprogrammed default
  3424   30000C                     	org	3145740
  3425   30000C  0F                 	db	15
  3426                           
  3427                           ;Config register CONFIG7H @ 0x30000D
  3428                           ;	unspecified, using default values
  3429                           ;	Boot Block Table Read Protection bit
  3430                           ;	EBTRB = 0x1, unprogrammed default
  3431   30000D                     	org	3145741
  3432   30000D  40                 	db	64
  3433                           tosu	equ	0xFFF
  3434                           tosh	equ	0xFFE
  3435                           tosl	equ	0xFFD
  3436                           stkptr	equ	0xFFC
  3437                           pclatu	equ	0xFFB
  3438                           pclath	equ	0xFFA
  3439                           pcl	equ	0xFF9
  3440                           tblptru	equ	0xFF8
  3441                           tblptrh	equ	0xFF7
  3442                           tblptrl	equ	0xFF6
  3443                           tablat	equ	0xFF5
  3444                           prodh	equ	0xFF4
  3445                           prodl	equ	0xFF3
  3446                           indf0	equ	0xFEF
  3447                           postinc0	equ	0xFEE
  3448                           postdec0	equ	0xFED
  3449                           preinc0	equ	0xFEC
  3450                           plusw0	equ	0xFEB
  3451                           fsr0h	equ	0xFEA
  3452                           fsr0l	equ	0xFE9
  3453                           wreg	equ	0xFE8
  3454                           indf1	equ	0xFE7
  3455                           postinc1	equ	0xFE6
  3456                           postdec1	equ	0xFE5
  3457                           preinc1	equ	0xFE4
  3458                           plusw1	equ	0xFE3
  3459                           fsr1h	equ	0xFE2
  3460                           fsr1l	equ	0xFE1
  3461                           bsr	equ	0xFE0
  3462                           indf2	equ	0xFDF
  3463                           postinc2	equ	0xFDE
  3464                           postdec2	equ	0xFDD
  3465                           preinc2	equ	0xFDC
  3466                           plusw2	equ	0xFDB
  3467                           fsr2h	equ	0xFDA
  3468                           fsr2l	equ	0xFD9
  3469                           status	equ	0xFD8

Data Sizes:
    Strings     34
    Constant    0
    Data        1
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     24      32
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    MensajeLCD_Word@a	PTR unsigned char  size(1) Largest target is 13
		 -> STR_4(CODE[5]), STR_3(CODE[6]), STR_2(CODE[10]), STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _main->_TransmitirDatos
    _TransmitirDatos->_MensajeLCD_Word
    _TransmitirDatos->___awdiv
    _MensajeLCD_Word->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _LeerHT11->_LeerByte
    _LeerByte->_LeerBit
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    7108
                                             22 COMRAM     2     2      0
                           _BorraLCD
                           _ColorRGB
                         _Conversion
                      _DireccionaLCD
                       _EscribeLCD_c
                _GuardarDatoEnEEPROM
                      _InicializaLCD
                           _LeerHT11
                    _MensajeLCD_Word
                    _TransmitirDatos
                            ___lbdiv
                            ___lbmod
                   _leerDatoEnEEPROM
 ---------------------------------------------------------------------------------
 (1) _leerDatoEnEEPROM                                     2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TransmitirDatos                                     14    10      4    4630
                                             10 COMRAM    12     8      4
                           _BorraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
                    _MensajeLCD_Word
                         _Transmitir
                            ___awdiv
                            ___lbdiv
                            ___lbmod
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     615
                                              2 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     922
                                              2 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___lbmod                                              4     3      1     387
                                              2 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) ___lbdiv                                              4     3      1     390
                                              2 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Transmitir                                           1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MensajeLCD_Word                                      4     3      1     528
                                              6 COMRAM     4     3      1
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (3) _EscribeLCD_c                                         1     1      0      90
                                              5 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _DireccionaLCD                                        1     1      0      90
                                              5 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _LeerHT11                                             1     1      0      75
                                              6 COMRAM     1     1      0
                           _LeerByte
 ---------------------------------------------------------------------------------
 (2) _LeerByte                                             3     3      0      75
                                              3 COMRAM     3     3      0
                            _LeerBit
 ---------------------------------------------------------------------------------
 (3) _LeerBit                                              1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     150
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0      75
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _EnviaDato                                            1     1      0      60
                                              4 COMRAM     1     1      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _RetardoLCD                                           2     2      0      15
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GuardarDatoEnEEPROM                                  3     0      3     196
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _Conversion                                           1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ColorRGB                                             2     0      2     384
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  2     2      0       0
                                              0 COMRAM     2     2      0
                            _Recibir
 ---------------------------------------------------------------------------------
 (7) _Recibir                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _ColorRGB
   _Conversion
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _GuardarDatoEnEEPROM
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerHT11
     _LeerByte
       _LeerBit
   _MensajeLCD_Word
     _EscribeLCD_c
   _TransmitirDatos
     _BorraLCD
     _DireccionaLCD
     _EscribeLCD_c
     _MensajeLCD_Word
     _Transmitir
     ___awdiv
     ___lbdiv
     ___lbmod
     ___lwdiv
     ___lwmod
     ___wmul
   ___lbdiv
   ___lbmod
   _leerDatoEnEEPROM

 _ISR (ROOT)
   _Recibir

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      36        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     18      20       1       34.0%
BITBIGSFRhhhl       19      0       0      21        0.0%
BITBIGSFRlhhl       11      0       0      32        0.0%
BITBIGSFRhlhhh       E      0       0      23        0.0%
BITBIGSFRhhhh        D      0       0      20        0.0%
BITBIGSFRll          D      0       0      34        0.0%
BITBIGSFRlhhh        8      0       0      31        0.0%
BITBIGSFRhlhlh       8      0       0      25        0.0%
BITBIGSFRhllhhl      7      0       0      29        0.0%
BITBIGSFRhlhhl       7      0       0      24        0.0%
BITBIGSFRhllhhh      4      0       0      27        0.0%
BITBIGSFRhlll        4      0       0      30        0.0%
BITBIGSFRhllhhh      2      0       0      28        0.0%
BITBIGSFRhllhhh      1      0       0      26        0.0%
BITBIGSFRlhl         1      0       0      33        0.0%
BITBIGSFRhhl         1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      20      35        0.0%
DATA                 0      0      20       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed May 24 16:15:47 2023

                          _A 001B                            _B 0019            Transmitir@BufferT 0003  
                         _GO 007E11                           _RD 007D30                           u40 10B4  
                         _WR 007D31                 ___awdiv@sign 0008                   EnviaDato@a 0005  
        ___wmul@multiplicand 0005                          l211 1060                _InicializaLCD 0FD2  
                        l230 10B0                          l214 106A                          l225 108C  
                        l254 099A                          l249 0858                          l282 1150  
                        l276 11CA                          l784 0F38                          l794 0FC8  
                        _GIE 007F97                          _RB0 007C08                          _RC0 007C10  
                        _RC1 007C11                          _RC2 007C12                          _RB5 007C0D  
                        _RC4 007C14                          _RB6 007C0E                          _RB7 007C0F  
                        u620 0E4C                          u700 0F12                          _ISR 0008  
                        u810 0CF4                          u730 0FAA                          u580 0F8E  
                        u660 1030                          u830 0D14                          u850 0D34  
                        u770 0CB4                          u930 0C4C                          u940 0C4E  
                        u870 0D54                          u790 0CD4                          u950 0C5A  
                        u960 0C5C                          u890 0D74                          u970 0C90  
                        u997 0ABE                          _Hum 001E             TransmitirDatos@n 0011  
                        wreg 000FE8                         ?_ISR 0001                         l2002 0BF6  
                       l1060 0E9E                         l1140 1162                         l1062 0EC0  
                       l1150 11EE                         l2014 0C66                         l1064 0ECA  
                       l2016 0C7A                         l1058 0E8E                         l1068 0ED4  
                       l1096 10A0                         l1710 1042                         l1702 102C  
                       l1632 0F4A                         l1720 10EE                         l1802 0CE8  
                       l1714 104A                         l1820 0D48                         l1740 0F06  
                       l1814 0D28                         l1670 0E48                         l1662 0E2A  
                       l1742 0F0E                         l1808 0D08                         l1680 0E68  
                       l1656 0E1A                         l1728 1106                         l1752 0F2E  
                       l1760 0F9E                         l1826 0D68                         l1762 0FA6  
                       l1850 08A6                         l1842 0866                         l1668 0E40  
                       l1684 0E72                         l1790 0CA8                         l1846 087A  
                       l1688 0E80                         l1768 0FBE                         l1856 08D4  
                       l1698 1026                         l1858 08FE                         l1796 0CC8  
                       l1990 0B80                         _CFGS 007D36                         _EEIF 007D0C  
                       STR_1 0801                         STR_2 080E                         STR_3 0818  
                       STR_4 081E                         u1007 0B6E                         u1017 0B92  
                       u1107 10A2                         u1027 0BAE                         u1117 0E94  
                       u1037 0BCA                         u1127 0EA4                         u1047 0BE6  
                       u1137 0EB4                         u1057 0C00                         u1147 0EC2  
                       u1067 0C16                         u1157 0ECC                         u1077 1056  
                       u1167 11E2                         u1087 1066                         _LATD 000F8C  
                       u1097 1092                         _RCIF 007CF5                         _RBPU 007F8F  
                       _TMR0 000FD6                         _TRMT 007D61                         _WREN 007D32  
             ??_EscribeLCD_c 0006                         _Temp 001F          _GuardarDatoEnEEPROM 1134  
                       _main 0AB4                         btemp 0021                         prodh 000FF4  
                       prodl 000FF3                         start 000E              __end_of_LeerBit 10B8  
               ___param_bank 000000                        ??_ISR 0001              __end_of_Recibir 1208  
       ?_GuardarDatoEnEEPROM 0003               ?_InicializaLCD 0001                        ?_main 0001  
            __end_of___awdiv 0E8A              __end_of___lbdiv 104E                        _ADRES 000FC3  
                      _EEADR 000FA9                EscribeLCD_c@a 0006              __end_of___lbmod 110E  
                      _EEPGD 007D37                        _T0CON 000FD5              ___awdiv@divisor 0005  
                      _LATC2 007C5A                        _LATE0 007C68                        _LATE2 007C6A  
            __end_of___lwdiv 0F42              __end_of___lwmod 0FD2                        i2l302 0E02  
            ___awdiv@counter 0007                        _RCREG 000FAE                        _RCSTA 000FAB  
                      _SPBRG 000FAF                        _USBEN 007B6B                        _TRISA 000F92  
                      _TRISB 000F93                        _TRISC 000F94                        _TRISD 000F95  
                      _TXREG 000FAD                        _TXSTA 000FAC       GuardarDatoEnEEPROM@dir 0003  
                      tablat 000FF5                   _Conversion 11BC                  _HabilitaLCD 11DE  
                      ttemp5 0022                        ttemp6 0025                        ttemp7 0029  
                      status 000FD8                        wtemp8 0022              ___lbdiv@divisor 0003  
            ___lbdiv@counter 0005             __end_of_BorraLCD 11BC             __end_of_LeerHT11 1088  
           __end_of_ColorRGB 0D7C              __initialization 10B8             __end_of_LeerByte 117C  
               __end_of_main 0C94     __end_of_leerDatoEnEEPROM 11DE        ??_GuardarDatoEnEEPROM 0006  
                     ??_main 0017                __activetblptr 000002                   _TempEEPROM 001D  
                     _ADCON0 000FC2                       _ADCON1 000FC1                       _ADCON2 000FC0  
                     _EEDATA 000FA8               DireccionaLCD@a 0006                       _EECON2 000FA7  
           ___awdiv@dividend 0003                       i2l1610 0DAC                       i2l1612 0DB4  
                     i2l1620 0DEA                       i2l1604 0D96                       i2l1614 0DBC  
                     i2l1608 0D9C                       i2l1618 0DCE                       _OSCCON 000FD3  
                     _TMR0IE 007F95                       _TMR0IF 007F92                       _TMR0ON 007EAF  
                     _TRISC2 007CA2                       _TRISE0 007CB0                       _TRISE2 007CB2  
                  ??_LeerBit 0003        __end_of_DireccionaLCD 11A8                       _UTRDIS 007B7B  
                 _RetardoLCD 0E8A                    ??_Recibir 0001          TransmitirDatos@Ent1 000B  
        TransmitirDatos@Ent2 000D          TransmitirDatos@Simb 0013                       ___wmul 110E  
                  ??___awdiv 0007                    ??___lbdiv 0004                    ??___lbmod 0004  
                  ??___lwdiv 0007                    ??___lwmod 0007              ??_InicializaLCD 0006  
                     clear_0 10D0             ___awdiv@quotient 0009      GuardarDatoEnEEPROM@dato 0005  
                     isa$std 000001         __end_of_EscribeLCD_c 1192                 __pdataCOMRAM 0020  
               __mediumconst 0000                       tblptrh 000FF7                       tblptrl 000FF6  
                     tblptru 000FF8                   _Transmitir 11EC             ___lbdiv@dividend 0004  
                ?_Conversion 0001              ___lbmod@divisor 0003                   __accesstop 0060  
    __end_of__initialization 10D6              ___lbmod@counter 0005                ___rparam_used 000001  
             __pcstackCOMRAM 0001            __end_of_EnviaDato 1200             ___lbdiv@quotient 0006  
                  ?_BorraLCD 0001                    ?_LeerHT11 0001                    ?_ColorRGB 0003  
                  ?_LeerByte 0001                  ?_RetardoLCD 0001                  RetardoLCD@a 0004  
                    ?___wmul 0003                      _BAUDCON 000FB8                      i2u54_40 0D8C  
                    i2u55_45 0D8E                   ??_BorraLCD 0006                   ??_LeerHT11 0007  
                 ??_ColorRGB 0005                  ?_Transmitir 0001            ??_MensajeLCD_Word 0008  
                 ??_LeerByte 0004                 ?_HabilitaLCD 0001                      _LeerBit 1088  
                    _Recibir 1200                      __Hparam 0000                      __Lparam 0000  
       TransmitirDatos@TempC 0015                      ___awdiv 0E06                      ___lbdiv 1014  
                    ___lbmod 10E4                      ___lwdiv 0EF0                      ___lwmod 0F90  
          ?_leerDatoEnEEPROM 0003                 __psmallconst 0800                      __pcinit 10B8  
                    __ramtop 0800                      __ptext0 0AB4                      __ptext1 11D0  
                    __ptext2 0824                      __ptext3 110E                      __ptext4 0F90  
                    __ptext5 0EF0                      __ptext6 10E4           ??_leerDatoEnEEPROM 0005  
                    __ptext7 1014                      __ptext8 0E06                      __ptext9 11EC  
             __pintcode_body 0D7C         end_of_initialization 10D6              Conversion@canal 0003  
              __Lmediumconst 0000                      int_func 0D7C                 _EscribeLCD_c 117C  
__end_of_GuardarDatoEnEEPROM 115A            ??_TransmitirDatos 000F                      postinc0 000FEE  
           ___lbmod@dividend 0004                    LeerByte@i 0006                 ??_Conversion 0003  
                ___lbmod@rem 0006               __end_of___wmul 1134                __pidataCOMRAM 1208  
      __end_of_InicializaLCD 1014           __end_of_Conversion 11D0                    _EnviaDato 11F8  
        start_initialization 10B8                  __end_of_ISR 0E06                 ??_RetardoLCD 0003  
                   ??___wmul 0007              _MensajeLCD_Word 0F42                   ?_EnviaDato 0001  
                __pbssCOMRAM 0019           __end_of_RetardoLCD 0EF0             MensajeLCD_Word@a 0007  
           MensajeLCD_Word@i 0009                 ??_Transmitir 0003                     ?_LeerBit 0001  
              _DireccionaLCD 1192                     ?_Recibir 0001             ___lwdiv@dividend 0003  
                  __pintcode 0008                     ?___awdiv 0003                     ?___lbdiv 0003  
                   ?___lbmod 0003                     ?___lwdiv 0003                     ?___lwmod 0003  
         __end_of_Transmitir 11F8                  __smallconst 0800             ___lwdiv@quotient 0007  
            _TransmitirDatos 0824               ___wmul@product 0007               ?_DireccionaLCD 0001  
                   i2u117_47 0DF4      __end_of_MensajeLCD_Word 0F90            ___wmul@multiplier 0003  
                ??_EnviaDato 0005                     _BorraLCD 11A8                     _LeerHT11 104E  
                   _ColorRGB 0C94                     _LeerByte 115A          leerDatoEnEEPROM@dir 0003  
                   __Hrparam 0000                     __Lrparam 0000      __end_of_TransmitirDatos 0AB4  
            ___lwdiv@divisor 0005              ___lwdiv@counter 0009                     __ptext10 0F42  
                   __ptext11 117C                     __ptext20 11DE                     __ptext12 1192  
                   __ptext21 1134                     __ptext13 104E                     __ptext22 11BC  
                   __ptext14 115A                     __ptext23 0C94                     __ptext15 1088  
                   __ptext16 0FD2                     __ptext25 1200                     __ptext17 11A8  
                   __ptext18 11F8                     __ptext19 0E8A              ??_DireccionaLCD 0006  
                   _interfaz 0020                     isa$xinst 000000             ?_MensajeLCD_Word 0007  
                   int$flags 0021             _leerDatoEnEEPROM 11D0                     intlevel2 0000  
              ??_HabilitaLCD 0003             ___lwmod@dividend 0003                  ColorRGB@val 0003  
            ___lwmod@divisor 0005              ___lwmod@counter 0007             ?_TransmitirDatos 000B  
              ?_EscribeLCD_c 0001                   LeerBit@res 0003          __end_of_HabilitaLCD 11EC  
                LeerByte@res 0005  
