

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed May 24 18:44:05 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    41                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    42                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    44   000000                     
    45                           ; Version 2.40
    46                           ; Generated 04/07/2022 GMT
    47                           ; 
    48                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution. Publication is not required when
    62                           ;        this file is used in an embedded application.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC18F4550 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80   000000                     
    81                           	psect	idataCOMRAM
    82   00122E                     __pidataCOMRAM:
    83                           	callstack 0
    84                           
    85                           ;initializer for _interfaz
    86   00122E  08                 	db	8
    87   000000                     _EECON2	set	4007
    88   000000                     _RCREG	set	4014
    89   000000                     _TXREG	set	4013
    90   000000                     _TRISC	set	3988
    91   000000                     _TRISD	set	3989
    92   000000                     _SPBRG	set	4015
    93   000000                     _BAUDCON	set	4024
    94   000000                     _RD	set	32048
    95   000000                     _WR	set	32049
    96   000000                     _WREN	set	32050
    97   000000                     _CFGS	set	32054
    98   000000                     _GO	set	32273
    99   000000                     _RB2	set	31754
   100   000000                     _RB1	set	31753
   101   000000                     _TRMT	set	32097
   102   000000                     _RC2	set	31762
   103   000000                     _TRISC2	set	31906
   104   000000                     _RC1	set	31761
   105   000000                     _RC0	set	31760
   106   000000                     _TMR0ON	set	32431
   107   000000                     _GIE	set	32663
   108   000000                     _TMR0IE	set	32661
   109   000000                     _LATE2	set	31850
   110   000000                     _LATD	set	3980
   111   000000                     _USBEN	set	31595
   112   000000                     _LATC2	set	31834
   113   000000                     _TRISA	set	3986
   114   000000                     _TRISB	set	3987
   115   000000                     _TRISE	set	3990
   116   000000                     _RCSTA	set	4011
   117   000000                     _TXSTA	set	4012
   118   000000                     _OSCCON	set	4051
   119   000000                     _LATE1	set	31849
   120   000000                     _T0CON	set	4053
   121   000000                     _ADCON2	set	4032
   122   000000                     _ADCON1	set	4033
   123   000000                     _ADCON0	set	4034
   124   000000                     _RCIF	set	31989
   125   000000                     _ADRES	set	4035
   126   000000                     _UTRDIS	set	31611
   127   000000                     _RB0	set	31752
   128   000000                     _RC4	set	31764
   129   000000                     _TMR0	set	4054
   130   000000                     _TMR0IF	set	32658
   131   000000                     _RE0	set	31776
   132   000000                     _RD3	set	31771
   133   000000                     _EEDATA	set	4008
   134   000000                     _EEADR	set	4009
   135   000000                     _EEIF	set	32012
   136   000000                     _EEPGD	set	32055
   137                           
   138                           	psect	smallconst
   139   000800                     __psmallconst:
   140                           	callstack 0
   141   000800  00                 	db	0
   142   000801                     STR_1:
   143   000801  55                 	db	85	;'U'
   144   000802  6C                 	db	108	;'l'
   145   000803  74                 	db	116	;'t'
   146   000804  69                 	db	105	;'i'
   147   000805  6D                 	db	109	;'m'
   148   000806  61                 	db	97	;'a'
   149   000807  20                 	db	32
   150   000808  74                 	db	116	;'t'
   151   000809  65                 	db	101	;'e'
   152   00080A  6D                 	db	109	;'m'
   153   00080B  70                 	db	112	;'p'
   154   00080C  3A                 	db	58	;':'
   155   00080D  00                 	db	0
   156   00080E                     STR_2:
   157   00080E  49                 	db	73	;'I'
   158   00080F  6E                 	db	110	;'n'
   159   000810  69                 	db	105	;'i'
   160   000811  63                 	db	99	;'c'
   161   000812  69                 	db	105	;'i'
   162   000813  61                 	db	97	;'a'
   163   000814  6E                 	db	110	;'n'
   164   000815  64                 	db	100	;'d'
   165   000816  6F                 	db	111	;'o'
   166   000817  00                 	db	0
   167   000818                     STR_3:
   168   000818  54                 	db	84	;'T'
   169   000819  65                 	db	101	;'e'
   170   00081A  6D                 	db	109	;'m'
   171   00081B  70                 	db	112	;'p'
   172   00081C  3A                 	db	58	;':'
   173   00081D  00                 	db	0
   174   00081E                     STR_4:
   175   00081E  48                 	db	72	;'H'
   176   00081F  75                 	db	117	;'u'
   177   000820  6D                 	db	109	;'m'
   178   000821  3A                 	db	58	;':'
   179   000822  00                 	db	0
   180   000823  00                 	db	0	; dummy byte at the end
   181   000000                     
   182                           ; #config settings
   183                           
   184                           	psect	cinit
   185   0010B6                     __pcinit:
   186                           	callstack 0
   187   0010B6                     start_initialization:
   188                           	callstack 0
   189   0010B6                     __initialization:
   190                           	callstack 0
   191                           
   192                           ; Initialize objects allocated to COMRAM (1 bytes)
   193                           ; load TBLPTR registers with __pidataCOMRAM
   194   0010B6  0E2E               	movlw	low __pidataCOMRAM
   195   0010B8  6EF6               	movwf	tblptrl,c
   196   0010BA  0E12               	movlw	high __pidataCOMRAM
   197   0010BC  6EF7               	movwf	tblptrh,c
   198   0010BE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   199   0010C0  6EF8               	movwf	tblptru,c
   200   0010C2  0009               	tblrd		*+	;fetch initializer
   201   0010C4  CFF5 F020          	movff	tablat,__pdataCOMRAM
   202                           
   203                           ; Clear objects allocated to COMRAM (7 bytes)
   204   0010C8  EE00  F019         	lfsr	0,__pbssCOMRAM
   205   0010CC  0E07               	movlw	7
   206   0010CE                     clear_0:
   207   0010CE  6AEE               	clrf	postinc0,c
   208   0010D0  06E8               	decf	wreg,f,c
   209   0010D2  E1FD               	bnz	clear_0
   210   0010D4                     end_of_initialization:
   211                           	callstack 0
   212   0010D4                     __end_of__initialization:
   213                           	callstack 0
   214   0010D4  9021               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   215   0010D6  9221               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   216   0010D8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   217   0010DA  6EF8               	movwf	tblptru,c
   218   0010DC  0100               	movlb	0
   219   0010DE  EF5A  F005         	goto	_main	;jump to C main() function
   220                           
   221                           	psect	bssCOMRAM
   222   000019                     __pbssCOMRAM:
   223                           	callstack 0
   224   000019                     _B:
   225                           	callstack 0
   226   000019                     	ds	2
   227   00001B                     _A:
   228                           	callstack 0
   229   00001B                     	ds	2
   230   00001D                     _TempEEPROM:
   231                           	callstack 0
   232   00001D                     	ds	1
   233   00001E                     _Hum:
   234                           	callstack 0
   235   00001E                     	ds	1
   236   00001F                     _Temp:
   237                           	callstack 0
   238   00001F                     	ds	1
   239                           
   240                           	psect	dataCOMRAM
   241   000020                     __pdataCOMRAM:
   242                           	callstack 0
   243   000020                     _interfaz:
   244                           	callstack 0
   245   000020                     	ds	1
   246                           
   247                           	psect	cstackCOMRAM
   248   000001                     __pcstackCOMRAM:
   249                           	callstack 0
   250   000001                     ??_ISR:
   251   000001                     
   252                           ; 2 bytes @ 0x0
   253   000001                     	ds	2
   254   000003                     ??_RetardoLCD:
   255   000003                     ?_strlen:
   256                           	callstack 0
   257   000003                     ?___wmul:
   258                           	callstack 0
   259   000003                     ?___awdiv:
   260                           	callstack 0
   261   000003                     ?___lwdiv:
   262                           	callstack 0
   263   000003                     ?___lwmod:
   264                           	callstack 0
   265   000003                     LeerBit@res:
   266                           	callstack 0
   267   000003                     Transmitir@BufferT:
   268                           	callstack 0
   269   000003                     Conversion@canal:
   270                           	callstack 0
   271   000003                     ___lbdiv@divisor:
   272                           	callstack 0
   273   000003                     ___lbmod@divisor:
   274                           	callstack 0
   275   000003                     strlen@s:
   276                           	callstack 0
   277   000003                     ColorRGB@val:
   278                           	callstack 0
   279   000003                     GuardarDatoEnEEPROM@dir:
   280                           	callstack 0
   281   000003                     leerDatoEnEEPROM@dir:
   282                           	callstack 0
   283   000003                     ___wmul@multiplier:
   284                           	callstack 0
   285   000003                     ___awdiv@dividend:
   286                           	callstack 0
   287   000003                     ___lwdiv@dividend:
   288                           	callstack 0
   289   000003                     ___lwmod@dividend:
   290                           	callstack 0
   291                           
   292                           ; 2 bytes @ 0x2
   293   000003                     	ds	1
   294   000004                     ??_LeerByte:
   295   000004                     RetardoLCD@a:
   296                           	callstack 0
   297   000004                     ___lbdiv@dividend:
   298                           	callstack 0
   299   000004                     ___lbmod@dividend:
   300                           	callstack 0
   301                           
   302                           ; 1 bytes @ 0x3
   303   000004                     	ds	1
   304   000005                     EnviaDato@a:
   305                           	callstack 0
   306   000005                     LeerByte@res:
   307                           	callstack 0
   308   000005                     GuardarDatoEnEEPROM@dato:
   309                           	callstack 0
   310   000005                     ___lbdiv@counter:
   311                           	callstack 0
   312   000005                     ___lbmod@counter:
   313                           	callstack 0
   314   000005                     strlen@cp:
   315                           	callstack 0
   316   000005                     ___wmul@multiplicand:
   317                           	callstack 0
   318   000005                     ___awdiv@divisor:
   319                           	callstack 0
   320   000005                     ___lwdiv@divisor:
   321                           	callstack 0
   322   000005                     ___lwmod@divisor:
   323                           	callstack 0
   324                           
   325                           ; 2 bytes @ 0x4
   326   000005                     	ds	1
   327   000006                     EscribeLCD_c@a:
   328                           	callstack 0
   329   000006                     DireccionaLCD@a:
   330                           	callstack 0
   331   000006                     LeerByte@i:
   332                           	callstack 0
   333   000006                     ___lbdiv@quotient:
   334                           	callstack 0
   335   000006                     ___lbmod@rem:
   336                           	callstack 0
   337                           
   338                           ; 1 bytes @ 0x5
   339   000006                     	ds	1
   340   000007                     ??_LeerHT11:
   341   000007                     MensajeLCD_Word@a:
   342                           	callstack 0
   343   000007                     ___awdiv@counter:
   344                           	callstack 0
   345   000007                     ___lwmod@counter:
   346                           	callstack 0
   347   000007                     ___wmul@product:
   348                           	callstack 0
   349   000007                     ___lwdiv@quotient:
   350                           	callstack 0
   351                           
   352                           ; 2 bytes @ 0x6
   353   000007                     	ds	1
   354   000008                     ??_MensajeLCD_Word:
   355   000008                     ___awdiv@sign:
   356                           	callstack 0
   357                           
   358                           ; 1 bytes @ 0x7
   359   000008                     	ds	1
   360   000009                     ___lwdiv@counter:
   361                           	callstack 0
   362   000009                     MensajeLCD_Word@i:
   363                           	callstack 0
   364   000009                     ___awdiv@quotient:
   365                           	callstack 0
   366                           
   367                           ; 2 bytes @ 0x8
   368   000009                     	ds	2
   369   00000B                     TransmitirDatos@Ent1:
   370                           	callstack 0
   371                           
   372                           ; 2 bytes @ 0xA
   373   00000B                     	ds	2
   374   00000D                     TransmitirDatos@Ent2:
   375                           	callstack 0
   376                           
   377                           ; 2 bytes @ 0xC
   378   00000D                     	ds	2
   379   00000F                     ??_TransmitirDatos:
   380                           
   381                           ; 1 bytes @ 0xE
   382   00000F                     	ds	2
   383   000011                     TransmitirDatos@n:
   384                           	callstack 0
   385                           
   386                           ; 2 bytes @ 0x10
   387   000011                     	ds	2
   388   000013                     TransmitirDatos@Simb:
   389                           	callstack 0
   390                           
   391                           ; 2 bytes @ 0x12
   392   000013                     	ds	2
   393   000015                     TransmitirDatos@TempC:
   394                           	callstack 0
   395                           
   396                           ; 2 bytes @ 0x14
   397   000015                     	ds	2
   398   000017                     ??_main:
   399                           
   400                           ; 1 bytes @ 0x16
   401   000017                     	ds	2
   402                           
   403 ;;
   404 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   405 ;;
   406 ;; *************** function _main *****************
   407 ;; Defined at:
   408 ;;		line 35 in file "Laboratorio5.c"
   409 ;; Parameters:    Size  Location     Type
   410 ;;		None
   411 ;; Auto vars:     Size  Location     Type
   412 ;;		None
   413 ;; Return value:  Size  Location     Type
   414 ;;                  1    wreg      void 
   415 ;; Registers used:
   416 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   417 ;; Tracked objects:
   418 ;;		On entry : 0/0
   419 ;;		On exit  : 0/0
   420 ;;		Unchanged: 0/0
   421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   422 ;;      Params:         0       0       0       0       0       0       0       0       0
   423 ;;      Locals:         0       0       0       0       0       0       0       0       0
   424 ;;      Temps:          2       0       0       0       0       0       0       0       0
   425 ;;      Totals:         2       0       0       0       0       0       0       0       0
   426 ;;Total ram usage:        2 bytes
   427 ;; Hardware stack levels required when called: 7
   428 ;; This function calls:
   429 ;;		_BorraLCD
   430 ;;		_ColorRGB
   431 ;;		_Conversion
   432 ;;		_DireccionaLCD
   433 ;;		_EscribeLCD_c
   434 ;;		_GuardarDatoEnEEPROM
   435 ;;		_InicializaLCD
   436 ;;		_LeerHT11
   437 ;;		_MensajeLCD_Word
   438 ;;		_TransmitirDatos
   439 ;;		___lbdiv
   440 ;;		___lbmod
   441 ;;		_leerDatoEnEEPROM
   442 ;; This function is called by:
   443 ;;		Startup code after reset
   444 ;; This function uses a non-reentrant model
   445 ;;
   446                           
   447                           	psect	text0
   448   000AB4                     __ptext0:
   449                           	callstack 0
   450   000AB4                     _main:
   451                           	callstack 24
   452                           
   453                           ;Laboratorio5.c: 38: OSCCON = 0b01110110;
   454                           
   455                           ;incstack = 0
   456   000AB4  0E76               	movlw	118
   457   000AB6  6ED3               	movwf	211,c	;volatile
   458                           
   459                           ;Laboratorio5.c: 39: _delay((unsigned long)((1)*(8000000/4000.0)));
   460   000AB8  0E03               	movlw	3
   461   000ABA  6E17               	movwf	??_main^0,c
   462   000ABC  0E98               	movlw	152
   463   000ABE                     u997:
   464   000ABE  2EE8               	decfsz	wreg,f,c
   465   000AC0  D7FE               	bra	u997
   466   000AC2  2E17               	decfsz	??_main^0,f,c
   467   000AC4  D7FC               	bra	u997
   468                           
   469                           ;Laboratorio5.c: 40: LATC2 = 0;
   470   000AC6  948B               	bcf	3979,2,c	;volatile
   471                           
   472                           ;Laboratorio5.c: 41: TXSTA = 0b00100000;
   473   000AC8  0E20               	movlw	32
   474   000ACA  6EAC               	movwf	172,c	;volatile
   475                           
   476                           ;Laboratorio5.c: 42: RCSTA = 0b10010000;
   477   000ACC  0E90               	movlw	144
   478   000ACE  6EAB               	movwf	171,c	;volatile
   479                           
   480                           ;Laboratorio5.c: 43: BAUDCON = 0b00000000;
   481   000AD0  0E00               	movlw	0
   482   000AD2  6EB8               	movwf	184,c	;volatile
   483                           
   484                           ;Laboratorio5.c: 45: TRISE=0;
   485   000AD4  0E00               	movlw	0
   486   000AD6  6E96               	movwf	150,c	;volatile
   487                           
   488                           ;Laboratorio5.c: 46: SPBRG = 12;
   489   000AD8  0E0C               	movlw	12
   490   000ADA  6EAF               	movwf	175,c	;volatile
   491                           
   492                           ;Laboratorio5.c: 48: ADCON0 = 0b00000001;
   493   000ADC  0E01               	movlw	1
   494   000ADE  6EC2               	movwf	194,c	;volatile
   495                           
   496                           ;Laboratorio5.c: 49: ADCON1 = 13;
   497   000AE0  0E0D               	movlw	13
   498   000AE2  6EC1               	movwf	193,c	;volatile
   499                           
   500                           ;Laboratorio5.c: 50: ADCON2 = 0b10001000;
   501   000AE4  0E88               	movlw	136
   502   000AE6  6EC0               	movwf	192,c	;volatile
   503                           
   504                           ;Laboratorio5.c: 53: TRISB = 0;
   505   000AE8  0E00               	movlw	0
   506   000AEA  6E93               	movwf	147,c	;volatile
   507                           
   508                           ;Laboratorio5.c: 54: TRISD = 0;
   509   000AEC  0E00               	movlw	0
   510   000AEE  6E95               	movwf	149,c	;volatile
   511                           
   512                           ;Laboratorio5.c: 55: TRISA = 0b00000001;
   513   000AF0  0E01               	movlw	1
   514   000AF2  6E92               	movwf	146,c	;volatile
   515                           
   516                           ;Laboratorio5.c: 56: TRISC = 0b11010111;
   517   000AF4  0ED7               	movlw	215
   518   000AF6  6E94               	movwf	148,c	;volatile
   519                           
   520                           ;Laboratorio5.c: 57: USBEN = 0;
   521   000AF8  966D               	bcf	3949,3,c	;volatile
   522                           
   523                           ;Laboratorio5.c: 58: UTRDIS = 1;
   524   000AFA  866F               	bsf	3951,3,c	;volatile
   525                           
   526                           ;Laboratorio5.c: 61: TempEEPROM = leerDatoEnEEPROM(0);
   527   000AFC  0E00               	movlw	0
   528   000AFE  6E04               	movwf	(leerDatoEnEEPROM@dir+1)^0,c
   529   000B00  0E00               	movlw	0
   530   000B02  6E03               	movwf	leerDatoEnEEPROM@dir^0,c
   531   000B04  ECFB  F008         	call	_leerDatoEnEEPROM	;wreg free
   532   000B08  6E1D               	movwf	_TempEEPROM^0,c
   533                           
   534                           ;Laboratorio5.c: 63: InicializaLCD();
   535   000B0A  ECCB  F007         	call	_InicializaLCD	;wreg free
   536                           
   537                           ;Laboratorio5.c: 65: T0CON=0b00000011;
   538   000B0E  0E03               	movlw	3
   539   000B10  6ED5               	movwf	213,c	;volatile
   540                           
   541                           ;Laboratorio5.c: 66: TMR0IF=0;
   542   000B12  94F2               	bcf	4082,2,c	;volatile
   543                           
   544                           ;Laboratorio5.c: 67: TMR0=3036;
   545   000B14  0E0B               	movlw	11
   546   000B16  6ED7               	movwf	215,c	;volatile
   547   000B18  0EDC               	movlw	220
   548   000B1A  6ED6               	movwf	214,c	;volatile
   549                           
   550                           ;Laboratorio5.c: 68: TMR0IE=1;
   551   000B1C  8AF2               	bsf	4082,5,c	;volatile
   552                           
   553                           ;Laboratorio5.c: 69: GIE=1;
   554   000B1E  8EF2               	bsf	4082,7,c	;volatile
   555                           
   556                           ;Laboratorio5.c: 70: TMR0ON=1;
   557   000B20  8ED5               	bsf	4053,7,c	;volatile
   558                           
   559                           ;Laboratorio5.c: 72: BorraLCD();
   560   000B22  ECE7  F008         	call	_BorraLCD	;wreg free
   561                           
   562                           ;Laboratorio5.c: 74: if (TempEEPROM != 0xFF) {
   563   000B26  281D               	incf	_TempEEPROM^0,w,c
   564   000B28  B4D8               	btfsc	status,2,c
   565   000B2A  D028               	goto	l1983
   566                           
   567                           ;Laboratorio5.c: 75: MensajeLCD_Word("Ultima temp:");
   568   000B2C  0E01               	movlw	low STR_1
   569   000B2E  6E07               	movwf	MensajeLCD_Word@a^0,c
   570   000B30  EC09  F008         	call	_MensajeLCD_Word	;wreg free
   571                           
   572                           ;Laboratorio5.c: 76: DireccionaLCD(192);
   573   000B34  0EC0               	movlw	192
   574   000B36  ECDC  F008         	call	_DireccionaLCD
   575                           
   576                           ;Laboratorio5.c: 77: EscribeLCD_c(TempEEPROM / 10 + 48);
   577   000B3A  0E0A               	movlw	10
   578   000B3C  6E03               	movwf	___lbdiv@divisor^0,c
   579   000B3E  501D               	movf	_TempEEPROM^0,w,c
   580   000B40  ECEC  F007         	call	___lbdiv
   581   000B44  0F30               	addlw	48
   582   000B46  ECD1  F008         	call	_EscribeLCD_c
   583                           
   584                           ;Laboratorio5.c: 78: EscribeLCD_c(TempEEPROM % 10 + 48);
   585   000B4A  0E0A               	movlw	10
   586   000B4C  6E03               	movwf	___lbmod@divisor^0,c
   587   000B4E  501D               	movf	_TempEEPROM^0,w,c
   588   000B50  EC71  F008         	call	___lbmod
   589   000B54  0F30               	addlw	48
   590   000B56  ECD1  F008         	call	_EscribeLCD_c
   591                           
   592                           ;Laboratorio5.c: 79: EscribeLCD_c('C');
   593   000B5A  0E43               	movlw	67
   594   000B5C  ECD1  F008         	call	_EscribeLCD_c
   595                           
   596                           ;Laboratorio5.c: 80: _delay((unsigned long)((2000)*(8000000/4000.0)));
   597   000B60  0E15               	movlw	21
   598   000B62  6E18               	movwf	(??_main+1)^0,c
   599   000B64  0E4B               	movlw	75
   600   000B66  6E17               	movwf	??_main^0,c
   601   000B68  0EBE               	movlw	190
   602   000B6A                     u1007:
   603   000B6A  2EE8               	decfsz	wreg,f,c
   604   000B6C  D7FE               	bra	u1007
   605   000B6E  2E17               	decfsz	??_main^0,f,c
   606   000B70  D7FC               	bra	u1007
   607   000B72  2E18               	decfsz	(??_main+1)^0,f,c
   608   000B74  D7FA               	bra	u1007
   609   000B76  D000               	nop2	
   610                           
   611                           ;Laboratorio5.c: 81: BorraLCD();
   612   000B78  ECE7  F008         	call	_BorraLCD	;wreg free
   613   000B7C                     l1983:
   614                           
   615                           ;Laboratorio5.c: 82: };Laboratorio5.c: 84: MensajeLCD_Word("Iniciando");
   616   000B7C  0E0E               	movlw	low STR_2
   617   000B7E  6E07               	movwf	MensajeLCD_Word@a^0,c
   618   000B80  EC09  F008         	call	_MensajeLCD_Word	;wreg free
   619                           
   620                           ;Laboratorio5.c: 85: _delay((unsigned long)((500)*(8000000/4000.0)));
   621   000B84  0E06               	movlw	6
   622   000B86  6E18               	movwf	(??_main+1)^0,c
   623   000B88  0E13               	movlw	19
   624   000B8A  6E17               	movwf	??_main^0,c
   625   000B8C  0EAE               	movlw	174
   626   000B8E                     u1017:
   627   000B8E  2EE8               	decfsz	wreg,f,c
   628   000B90  D7FE               	bra	u1017
   629   000B92  2E17               	decfsz	??_main^0,f,c
   630   000B94  D7FC               	bra	u1017
   631   000B96  2E18               	decfsz	(??_main+1)^0,f,c
   632   000B98  D7FA               	bra	u1017
   633                           
   634                           ;Laboratorio5.c: 86: EscribeLCD_c('.');
   635   000B9A  0E2E               	movlw	46
   636   000B9C  ECD1  F008         	call	_EscribeLCD_c
   637                           
   638                           ;Laboratorio5.c: 87: _delay((unsigned long)((500)*(8000000/4000.0)));
   639   000BA0  0E06               	movlw	6
   640   000BA2  6E18               	movwf	(??_main+1)^0,c
   641   000BA4  0E13               	movlw	19
   642   000BA6  6E17               	movwf	??_main^0,c
   643   000BA8  0EAE               	movlw	174
   644   000BAA                     u1027:
   645   000BAA  2EE8               	decfsz	wreg,f,c
   646   000BAC  D7FE               	bra	u1027
   647   000BAE  2E17               	decfsz	??_main^0,f,c
   648   000BB0  D7FC               	bra	u1027
   649   000BB2  2E18               	decfsz	(??_main+1)^0,f,c
   650   000BB4  D7FA               	bra	u1027
   651                           
   652                           ;Laboratorio5.c: 88: EscribeLCD_c('.');
   653   000BB6  0E2E               	movlw	46
   654   000BB8  ECD1  F008         	call	_EscribeLCD_c
   655                           
   656                           ;Laboratorio5.c: 89: _delay((unsigned long)((500)*(8000000/4000.0)));
   657   000BBC  0E06               	movlw	6
   658   000BBE  6E18               	movwf	(??_main+1)^0,c
   659   000BC0  0E13               	movlw	19
   660   000BC2  6E17               	movwf	??_main^0,c
   661   000BC4  0EAE               	movlw	174
   662   000BC6                     u1037:
   663   000BC6  2EE8               	decfsz	wreg,f,c
   664   000BC8  D7FE               	bra	u1037
   665   000BCA  2E17               	decfsz	??_main^0,f,c
   666   000BCC  D7FC               	bra	u1037
   667   000BCE  2E18               	decfsz	(??_main+1)^0,f,c
   668   000BD0  D7FA               	bra	u1037
   669                           
   670                           ;Laboratorio5.c: 90: EscribeLCD_c('.');
   671   000BD2  0E2E               	movlw	46
   672   000BD4  ECD1  F008         	call	_EscribeLCD_c
   673                           
   674                           ;Laboratorio5.c: 91: _delay((unsigned long)((500)*(8000000/4000.0)));
   675   000BD8  0E06               	movlw	6
   676   000BDA  6E18               	movwf	(??_main+1)^0,c
   677   000BDC  0E13               	movlw	19
   678   000BDE  6E17               	movwf	??_main^0,c
   679   000BE0  0EAE               	movlw	174
   680   000BE2                     u1047:
   681   000BE2  2EE8               	decfsz	wreg,f,c
   682   000BE4  D7FE               	bra	u1047
   683   000BE6  2E17               	decfsz	??_main^0,f,c
   684   000BE8  D7FC               	bra	u1047
   685   000BEA  2E18               	decfsz	(??_main+1)^0,f,c
   686   000BEC  D7FA               	bra	u1047
   687                           
   688                           ;Laboratorio5.c: 92: BorraLCD();
   689   000BEE  ECE7  F008         	call	_BorraLCD	;wreg free
   690                           
   691                           ;Laboratorio5.c: 93: _delay((unsigned long)((500)*(8000000/4000.0)));
   692   000BF2  0E06               	movlw	6
   693   000BF4  6E18               	movwf	(??_main+1)^0,c
   694   000BF6  0E13               	movlw	19
   695   000BF8  6E17               	movwf	??_main^0,c
   696   000BFA  0EAE               	movlw	174
   697   000BFC                     u1057:
   698   000BFC  2EE8               	decfsz	wreg,f,c
   699   000BFE  D7FE               	bra	u1057
   700   000C00  2E17               	decfsz	??_main^0,f,c
   701   000C02  D7FC               	bra	u1057
   702   000C04  2E18               	decfsz	(??_main+1)^0,f,c
   703   000C06  D7FA               	bra	u1057
   704   000C08                     l1997:
   705                           
   706                           ;Laboratorio5.c: 96: _delay((unsigned long)((500)*(8000000/4000.0)));
   707   000C08  0E06               	movlw	6
   708   000C0A  6E18               	movwf	(??_main+1)^0,c
   709   000C0C  0E13               	movlw	19
   710   000C0E  6E17               	movwf	??_main^0,c
   711   000C10  0EAE               	movlw	174
   712   000C12                     u1067:
   713   000C12  2EE8               	decfsz	wreg,f,c
   714   000C14  D7FE               	bra	u1067
   715   000C16  2E17               	decfsz	??_main^0,f,c
   716   000C18  D7FC               	bra	u1067
   717   000C1A  2E18               	decfsz	(??_main+1)^0,f,c
   718   000C1C  D7FA               	bra	u1067
   719                           
   720                           ;Laboratorio5.c: 98: _delay((unsigned long)((500)*(8000000/4000.0)));
   721   000C1E  0E06               	movlw	6
   722   000C20  6E18               	movwf	(??_main+1)^0,c
   723   000C22  0E13               	movlw	19
   724   000C24  6E17               	movwf	??_main^0,c
   725   000C26  0EAE               	movlw	174
   726   000C28                     u1077:
   727   000C28  2EE8               	decfsz	wreg,f,c
   728   000C2A  D7FE               	bra	u1077
   729   000C2C  2E17               	decfsz	??_main^0,f,c
   730   000C2E  D7FC               	bra	u1077
   731   000C30  2E18               	decfsz	(??_main+1)^0,f,c
   732   000C32  D7FA               	bra	u1077
   733                           
   734                           ;Laboratorio5.c: 100: LeerHT11();
   735   000C34  EC26  F008         	call	_LeerHT11	;wreg free
   736                           
   737                           ;Laboratorio5.c: 102: GuardarDatoEnEEPROM(0, Temp);
   738   000C38  0E00               	movlw	0
   739   000C3A  6E04               	movwf	(GuardarDatoEnEEPROM@dir+1)^0,c
   740   000C3C  0E00               	movlw	0
   741   000C3E  6E03               	movwf	GuardarDatoEnEEPROM@dir^0,c
   742   000C40  C01F  F005         	movff	_Temp,GuardarDatoEnEEPROM@dato
   743   000C44  ECAD  F008         	call	_GuardarDatoEnEEPROM	;wreg free
   744                           
   745                           ;Laboratorio5.c: 103: ColorRGB(Temp);
   746   000C48  C01F  F003         	movff	_Temp,ColorRGB@val
   747   000C4C  6A04               	clrf	(ColorRGB@val+1)^0,c
   748   000C4E  EC53  F006         	call	_ColorRGB	;wreg free
   749                           
   750                           ;Laboratorio5.c: 106: if(!RC4) TransmitirDatos(RC0, RC1);
   751   000C52  B882               	btfsc	3970,4,c	;volatile
   752   000C54  D011               	goto	l2011
   753   000C56  A082               	btfss	3970,0,c	;volatile
   754   000C58  D002               	goto	u930
   755   000C5A  0E01               	movlw	1
   756   000C5C  D001               	goto	u940
   757   000C5E                     u930:
   758   000C5E  0E00               	movlw	0
   759   000C60                     u940:
   760   000C60  6E0B               	movwf	TransmitirDatos@Ent1^0,c
   761   000C62  6A0C               	clrf	(TransmitirDatos@Ent1+1)^0,c
   762   000C64  A282               	btfss	3970,1,c	;volatile
   763   000C66  D002               	goto	u950
   764   000C68  0E01               	movlw	1
   765   000C6A  D001               	goto	u960
   766   000C6C                     u950:
   767   000C6C  0E00               	movlw	0
   768   000C6E                     u960:
   769   000C6E  6E0D               	movwf	TransmitirDatos@Ent2^0,c
   770   000C70  6A0E               	clrf	(TransmitirDatos@Ent2+1)^0,c
   771   000C72  EC12  F004         	call	_TransmitirDatos	;wreg free
   772   000C76  D00A               	goto	l2013
   773   000C78                     l2011:
   774                           
   775                           ;Laboratorio5.c: 107: else TransmitirDatos(A, B);
   776   000C78  C01B  F00B         	movff	_A,TransmitirDatos@Ent1
   777   000C7C  C01C  F00C         	movff	_A+1,TransmitirDatos@Ent1+1
   778   000C80  C019  F00D         	movff	_B,TransmitirDatos@Ent2
   779   000C84  C01A  F00E         	movff	_B+1,TransmitirDatos@Ent2+1
   780   000C88  EC12  F004         	call	_TransmitirDatos	;wreg free
   781   000C8C                     l2013:
   782                           
   783                           ;Laboratorio5.c: 109: Conversion(0);
   784   000C8C  0E00               	movlw	0
   785   000C8E  ECF1  F008         	call	_Conversion
   786                           
   787                           ;Laboratorio5.c: 110: RD3 = (ADRES <= 511) ? 0 : 1;
   788   000C92  0E00               	movlw	0
   789   000C94  5CC3               	subwf	195,w,c	;volatile
   790   000C96  0E02               	movlw	2
   791   000C98  58C4               	subwfb	196,w,c	;volatile
   792   000C9A  A0D8               	btfss	status,0,c
   793   000C9C  D002               	goto	u970
   794   000C9E  8683               	bsf	3971,3,c	;volatile
   795   000CA0  D7B3               	goto	l1997
   796   000CA2                     u970:
   797   000CA2  9683               	bcf	3971,3,c	;volatile
   798   000CA4  D7B1               	goto	l1997
   799   000CA6                     __end_of_main:
   800                           	callstack 0
   801                           
   802 ;; *************** function _leerDatoEnEEPROM *****************
   803 ;; Defined at:
   804 ;;		line 289 in file "Laboratorio5.c"
   805 ;; Parameters:    Size  Location     Type
   806 ;;  dir             2    2[COMRAM] unsigned int 
   807 ;; Auto vars:     Size  Location     Type
   808 ;;		None
   809 ;; Return value:  Size  Location     Type
   810 ;;                  1    wreg      unsigned char 
   811 ;; Registers used:
   812 ;;		wreg, status,2
   813 ;; Tracked objects:
   814 ;;		On entry : 0/0
   815 ;;		On exit  : 0/0
   816 ;;		Unchanged: 0/0
   817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   818 ;;      Params:         2       0       0       0       0       0       0       0       0
   819 ;;      Locals:         0       0       0       0       0       0       0       0       0
   820 ;;      Temps:          0       0       0       0       0       0       0       0       0
   821 ;;      Totals:         2       0       0       0       0       0       0       0       0
   822 ;;Total ram usage:        2 bytes
   823 ;; Hardware stack levels used: 1
   824 ;; Hardware stack levels required when called: 2
   825 ;; This function calls:
   826 ;;		Nothing
   827 ;; This function is called by:
   828 ;;		_main
   829 ;; This function uses a non-reentrant model
   830 ;;
   831                           
   832                           	psect	text1
   833   0011F6                     __ptext1:
   834                           	callstack 0
   835   0011F6                     _leerDatoEnEEPROM:
   836                           	callstack 28
   837                           
   838                           ;Laboratorio5.c: 290: EEADR = dir;
   839                           
   840                           ;incstack = 0
   841   0011F6  C003  FFA9         	movff	leerDatoEnEEPROM@dir,4009	;volatile
   842                           
   843                           ;Laboratorio5.c: 291: EEPGD = 0;
   844   0011FA  9EA6               	bcf	4006,7,c	;volsfr
   845                           
   846                           ;Laboratorio5.c: 292: CFGS = 0;
   847   0011FC  9CA6               	bcf	4006,6,c	;volsfr
   848                           
   849                           ;Laboratorio5.c: 293: RD = 1;
   850   0011FE  80A6               	bsf	4006,0,c	;volsfr
   851                           
   852                           ;Laboratorio5.c: 295: return EEDATA;
   853   001200  50A8               	movf	168,w,c	;volatile
   854   001202  0012               	return		;funcret
   855   001204                     __end_of_leerDatoEnEEPROM:
   856                           	callstack 0
   857                           
   858 ;; *************** function _TransmitirDatos *****************
   859 ;; Defined at:
   860 ;;		line 162 in file "Laboratorio5.c"
   861 ;; Parameters:    Size  Location     Type
   862 ;;  Ent1            2   10[COMRAM] unsigned int 
   863 ;;  Ent2            2   12[COMRAM] unsigned int 
   864 ;; Auto vars:     Size  Location     Type
   865 ;;  TempC           2   20[COMRAM] unsigned int 
   866 ;;  Simb            2   18[COMRAM] unsigned int 
   867 ;;  n               2   16[COMRAM] unsigned int 
   868 ;;  HumC            2    0        unsigned int 
   869 ;; Return value:  Size  Location     Type
   870 ;;                  1    wreg      void 
   871 ;; Registers used:
   872 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   873 ;; Tracked objects:
   874 ;;		On entry : 0/0
   875 ;;		On exit  : 0/0
   876 ;;		Unchanged: 0/0
   877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   878 ;;      Params:         4       0       0       0       0       0       0       0       0
   879 ;;      Locals:         6       0       0       0       0       0       0       0       0
   880 ;;      Temps:          2       0       0       0       0       0       0       0       0
   881 ;;      Totals:        12       0       0       0       0       0       0       0       0
   882 ;;Total ram usage:       12 bytes
   883 ;; Hardware stack levels used: 1
   884 ;; Hardware stack levels required when called: 6
   885 ;; This function calls:
   886 ;;		_BorraLCD
   887 ;;		_DireccionaLCD
   888 ;;		_EscribeLCD_c
   889 ;;		_MensajeLCD_Word
   890 ;;		_Transmitir
   891 ;;		___awdiv
   892 ;;		___lbdiv
   893 ;;		___lbmod
   894 ;;		___lwdiv
   895 ;;		___lwmod
   896 ;;		___wmul
   897 ;; This function is called by:
   898 ;;		_main
   899 ;; This function uses a non-reentrant model
   900 ;;
   901                           
   902                           	psect	text2
   903   000824                     __ptext2:
   904                           	callstack 0
   905   000824                     _TransmitirDatos:
   906                           	callstack 24
   907                           
   908                           ;Laboratorio5.c: 163: unsigned int n = Ent1 * 10 + Ent2, TempC = Temp, HumC = Hum;
   909                           
   910                           ;incstack = 0
   911   000824  C00B  F003         	movff	TransmitirDatos@Ent1,___wmul@multiplier
   912   000828  C00C  F004         	movff	TransmitirDatos@Ent1+1,___wmul@multiplier+1
   913   00082C  0E00               	movlw	0
   914   00082E  6E06               	movwf	(___wmul@multiplicand+1)^0,c
   915   000830  0E0A               	movlw	10
   916   000832  6E05               	movwf	___wmul@multiplicand^0,c
   917   000834  EC9A  F008         	call	___wmul	;wreg free
   918   000838  500D               	movf	TransmitirDatos@Ent2^0,w,c
   919   00083A  2403               	addwf	?___wmul^0,w,c
   920   00083C  6E11               	movwf	TransmitirDatos@n^0,c
   921   00083E  500E               	movf	(TransmitirDatos@Ent2+1)^0,w,c
   922   000840  2004               	addwfc	(?___wmul+1)^0,w,c
   923   000842  6E12               	movwf	(TransmitirDatos@n+1)^0,c
   924   000844  C01F  F015         	movff	_Temp,TransmitirDatos@TempC
   925   000848  6A16               	clrf	(TransmitirDatos@TempC+1)^0,c
   926                           
   927                           ;Laboratorio5.c: 164: unsigned int Simb = 67;
   928   00084A  0E00               	movlw	0
   929   00084C  6E14               	movwf	(TransmitirDatos@Simb+1)^0,c
   930   00084E  0E43               	movlw	67
   931   000850  6E13               	movwf	TransmitirDatos@Simb^0,c
   932                           
   933                           ;Laboratorio5.c: 165: BorraLCD();
   934   000852  ECE7  F008         	call	_BorraLCD	;wreg free
   935                           
   936                           ;Laboratorio5.c: 166: switch (n) {
   937   000856  D03E               	goto	l1855
   938   000858                     l240:
   939                           
   940                           ;Laboratorio5.c: 168: TempC = Temp;
   941   000858  C01F  F015         	movff	_Temp,TransmitirDatos@TempC
   942   00085C  6A16               	clrf	(TransmitirDatos@TempC+1)^0,c
   943                           
   944                           ;Laboratorio5.c: 169: Simb = 67;
   945   00085E  0E00               	movlw	0
   946   000860  6E14               	movwf	(TransmitirDatos@Simb+1)^0,c
   947   000862  0E43               	movlw	67
   948   000864  D035               	goto	L3
   949   000866                     l1841:
   950                           
   951                           ;Laboratorio5.c: 172: TempC = Temp + 273;
   952   000866  0E11               	movlw	17
   953   000868  241F               	addwf	_Temp^0,w,c
   954   00086A  6E15               	movwf	TransmitirDatos@TempC^0,c
   955   00086C  6A16               	clrf	(TransmitirDatos@TempC+1)^0,c
   956   00086E  0E01               	movlw	1
   957   000870  2216               	addwfc	(TransmitirDatos@TempC+1)^0,f,c
   958                           
   959                           ;Laboratorio5.c: 173: Simb = 75;
   960   000872  0E00               	movlw	0
   961   000874  6E14               	movwf	(TransmitirDatos@Simb+1)^0,c
   962   000876  0E4B               	movlw	75
   963   000878  D02B               	goto	L3
   964   00087A                     l1845:
   965                           
   966                           ;Laboratorio5.c: 176: TempC = Temp * 9 / 5 + 492;
   967   00087A  501F               	movf	_Temp^0,w,c
   968   00087C  0D09               	mullw	9
   969   00087E  CFF3 F003          	movff	prodl,___awdiv@dividend
   970   000882  CFF4 F004          	movff	prodh,___awdiv@dividend+1
   971   000886  0E00               	movlw	0
   972   000888  6E06               	movwf	(___awdiv@divisor+1)^0,c
   973   00088A  0E05               	movlw	5
   974   00088C  6E05               	movwf	___awdiv@divisor^0,c
   975   00088E  EC0C  F007         	call	___awdiv	;wreg free
   976   000892  0EEC               	movlw	236
   977   000894  2403               	addwf	?___awdiv^0,w,c
   978   000896  6E15               	movwf	TransmitirDatos@TempC^0,c
   979   000898  0E01               	movlw	1
   980   00089A  2004               	addwfc	(?___awdiv+1)^0,w,c
   981   00089C  6E16               	movwf	(TransmitirDatos@TempC+1)^0,c
   982                           
   983                           ;Laboratorio5.c: 177: Simb = 82;
   984   00089E  0E00               	movlw	0
   985   0008A0  6E14               	movwf	(TransmitirDatos@Simb+1)^0,c
   986   0008A2  0E52               	movlw	82
   987   0008A4  D015               	goto	L3
   988   0008A6                     l1849:
   989                           
   990                           ;Laboratorio5.c: 180: TempC = Temp * 9 / 5 + 32;
   991   0008A6  501F               	movf	_Temp^0,w,c
   992   0008A8  0D09               	mullw	9
   993   0008AA  CFF3 F003          	movff	prodl,___awdiv@dividend
   994   0008AE  CFF4 F004          	movff	prodh,___awdiv@dividend+1
   995   0008B2  0E00               	movlw	0
   996   0008B4  6E06               	movwf	(___awdiv@divisor+1)^0,c
   997   0008B6  0E05               	movlw	5
   998   0008B8  6E05               	movwf	___awdiv@divisor^0,c
   999   0008BA  EC0C  F007         	call	___awdiv	;wreg free
  1000   0008BE  0E20               	movlw	32
  1001   0008C0  2403               	addwf	?___awdiv^0,w,c
  1002   0008C2  6E15               	movwf	TransmitirDatos@TempC^0,c
  1003   0008C4  0E00               	movlw	0
  1004   0008C6  2004               	addwfc	(?___awdiv+1)^0,w,c
  1005   0008C8  6E16               	movwf	(TransmitirDatos@TempC+1)^0,c
  1006                           
  1007                           ;Laboratorio5.c: 181: Simb = 70;
  1008   0008CA  0E00               	movlw	0
  1009   0008CC  6E14               	movwf	(TransmitirDatos@Simb+1)^0,c
  1010   0008CE  0E46               	movlw	70
  1011   0008D0                     L3:
  1012   0008D0  6E13               	movwf	TransmitirDatos@Simb^0,c
  1013                           
  1014                           ;Laboratorio5.c: 182: break;
  1015   0008D2  D015               	goto	l1857
  1016   0008D4                     l1855:
  1017   0008D4  C011  F00F         	movff	TransmitirDatos@n,??_TransmitirDatos
  1018   0008D8  C012  F010         	movff	TransmitirDatos@n+1,??_TransmitirDatos+1
  1019                           
  1020                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1021                           ; Switch size 1, requested type "simple"
  1022                           ; Number of cases is 1, Range of values is 0 to 0
  1023                           ; switch strategies available:
  1024                           ; Name         Instructions Cycles
  1025                           ; simple_byte            4     3 (average)
  1026                           ;	Chosen strategy is simple_byte
  1027   0008DC  5010               	movf	(??_TransmitirDatos+1)^0,w,c
  1028   0008DE  0A00               	xorlw	0	; case 0
  1029   0008E0  A4D8               	btfss	status,2,c
  1030   0008E2  D00D               	goto	l1857
  1031                           
  1032                           ; Switch size 1, requested type "simple"
  1033                           ; Number of cases is 4, Range of values is 0 to 11
  1034                           ; switch strategies available:
  1035                           ; Name         Instructions Cycles
  1036                           ; simple_byte           13     7 (average)
  1037                           ;	Chosen strategy is simple_byte
  1038   0008E4  500F               	movf	??_TransmitirDatos^0,w,c
  1039   0008E6  0A00               	xorlw	0	; case 0
  1040   0008E8  B4D8               	btfsc	status,2,c
  1041   0008EA  D7B6               	goto	l240
  1042   0008EC  0A01               	xorlw	1	; case 1
  1043   0008EE  B4D8               	btfsc	status,2,c
  1044   0008F0  D7BA               	goto	l1841
  1045   0008F2  0A0B               	xorlw	11	; case 10
  1046   0008F4  B4D8               	btfsc	status,2,c
  1047   0008F6  D7C1               	goto	l1845
  1048   0008F8  0A01               	xorlw	1	; case 11
  1049   0008FA  B4D8               	btfsc	status,2,c
  1050   0008FC  D7D4               	goto	l1849
  1051   0008FE                     l1857:
  1052                           
  1053                           ;Laboratorio5.c: 184: Transmitir('T');
  1054   0008FE  0E54               	movlw	84
  1055   000900  EC09  F009         	call	_Transmitir
  1056                           
  1057                           ;Laboratorio5.c: 185: Transmitir('e');
  1058   000904  0E65               	movlw	101
  1059   000906  EC09  F009         	call	_Transmitir
  1060                           
  1061                           ;Laboratorio5.c: 186: Transmitir('m');
  1062   00090A  0E6D               	movlw	109
  1063   00090C  EC09  F009         	call	_Transmitir
  1064                           
  1065                           ;Laboratorio5.c: 187: Transmitir('p');
  1066   000910  0E70               	movlw	112
  1067   000912  EC09  F009         	call	_Transmitir
  1068                           
  1069                           ;Laboratorio5.c: 188: Transmitir(':');
  1070   000916  0E3A               	movlw	58
  1071   000918  EC09  F009         	call	_Transmitir
  1072                           
  1073                           ;Laboratorio5.c: 189: Transmitir(' ');
  1074   00091C  0E20               	movlw	32
  1075   00091E  EC09  F009         	call	_Transmitir
  1076                           
  1077                           ;Laboratorio5.c: 191: MensajeLCD_Word("Temp:");
  1078   000922  0E18               	movlw	low STR_3
  1079   000924  6E07               	movwf	MensajeLCD_Word@a^0,c
  1080   000926  EC09  F008         	call	_MensajeLCD_Word	;wreg free
  1081                           
  1082                           ;Laboratorio5.c: 192: if (TempC / 100 > 0) {
  1083   00092A  C015  F003         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1084   00092E  C016  F004         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1085   000932  0E00               	movlw	0
  1086   000934  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1087   000936  0E64               	movlw	100
  1088   000938  6E05               	movwf	___lwdiv@divisor^0,c
  1089   00093A  EC81  F007         	call	___lwdiv	;wreg free
  1090   00093E  5003               	movf	?___lwdiv^0,w,c
  1091   000940  1004               	iorwf	(?___lwdiv+1)^0,w,c
  1092   000942  B4D8               	btfsc	status,2,c
  1093   000944  D02A               	goto	l245
  1094                           
  1095                           ;Laboratorio5.c: 193: Transmitir(TempC / 100 + 48);
  1096   000946  C015  F003         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1097   00094A  C016  F004         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1098   00094E  0E00               	movlw	0
  1099   000950  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1100   000952  0E64               	movlw	100
  1101   000954  6E05               	movwf	___lwdiv@divisor^0,c
  1102   000956  EC81  F007         	call	___lwdiv	;wreg free
  1103   00095A  5003               	movf	?___lwdiv^0,w,c
  1104   00095C  0F30               	addlw	48
  1105   00095E  EC09  F009         	call	_Transmitir
  1106                           
  1107                           ;Laboratorio5.c: 194: EscribeLCD_c(TempC / 100 + 48);
  1108   000962  C015  F003         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1109   000966  C016  F004         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1110   00096A  0E00               	movlw	0
  1111   00096C  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1112   00096E  0E64               	movlw	100
  1113   000970  6E05               	movwf	___lwdiv@divisor^0,c
  1114   000972  EC81  F007         	call	___lwdiv	;wreg free
  1115   000976  5003               	movf	?___lwdiv^0,w,c
  1116   000978  0F30               	addlw	48
  1117   00097A  ECD1  F008         	call	_EscribeLCD_c
  1118                           
  1119                           ;Laboratorio5.c: 195: TempC = TempC % 100;
  1120   00097E  C015  F003         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1121   000982  C016  F004         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1122   000986  0E00               	movlw	0
  1123   000988  6E06               	movwf	(___lwmod@divisor+1)^0,c
  1124   00098A  0E64               	movlw	100
  1125   00098C  6E05               	movwf	___lwmod@divisor^0,c
  1126   00098E  ECAA  F007         	call	___lwmod	;wreg free
  1127   000992  C003  F015         	movff	?___lwmod,TransmitirDatos@TempC
  1128   000996  C004  F016         	movff	?___lwmod+1,TransmitirDatos@TempC+1
  1129   00099A                     l245:
  1130                           
  1131                           ;Laboratorio5.c: 196: };Laboratorio5.c: 197: Transmitir(TempC / 10 + 48);
  1132   00099A  C015  F003         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1133   00099E  C016  F004         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1134   0009A2  0E00               	movlw	0
  1135   0009A4  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1136   0009A6  0E0A               	movlw	10
  1137   0009A8  6E05               	movwf	___lwdiv@divisor^0,c
  1138   0009AA  EC81  F007         	call	___lwdiv	;wreg free
  1139   0009AE  5003               	movf	?___lwdiv^0,w,c
  1140   0009B0  0F30               	addlw	48
  1141   0009B2  EC09  F009         	call	_Transmitir
  1142                           
  1143                           ;Laboratorio5.c: 198: Transmitir(TempC % 10 + 48);
  1144   0009B6  C015  F003         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1145   0009BA  C016  F004         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1146   0009BE  0E00               	movlw	0
  1147   0009C0  6E06               	movwf	(___lwmod@divisor+1)^0,c
  1148   0009C2  0E0A               	movlw	10
  1149   0009C4  6E05               	movwf	___lwmod@divisor^0,c
  1150   0009C6  ECAA  F007         	call	___lwmod	;wreg free
  1151   0009CA  5003               	movf	?___lwmod^0,w,c
  1152   0009CC  0F30               	addlw	48
  1153   0009CE  EC09  F009         	call	_Transmitir
  1154                           
  1155                           ;Laboratorio5.c: 199: Transmitir(167);
  1156   0009D2  0EA7               	movlw	167
  1157   0009D4  EC09  F009         	call	_Transmitir
  1158                           
  1159                           ;Laboratorio5.c: 200: Transmitir(Simb);
  1160   0009D8  5013               	movf	TransmitirDatos@Simb^0,w,c
  1161   0009DA  EC09  F009         	call	_Transmitir
  1162                           
  1163                           ;Laboratorio5.c: 201: Transmitir(' ');
  1164   0009DE  0E20               	movlw	32
  1165   0009E0  EC09  F009         	call	_Transmitir
  1166                           
  1167                           ;Laboratorio5.c: 202: Transmitir('\n');
  1168   0009E4  0E0A               	movlw	10
  1169   0009E6  EC09  F009         	call	_Transmitir
  1170                           
  1171                           ;Laboratorio5.c: 203: Transmitir('H');
  1172   0009EA  0E48               	movlw	72
  1173   0009EC  EC09  F009         	call	_Transmitir
  1174                           
  1175                           ;Laboratorio5.c: 204: Transmitir('u');
  1176   0009F0  0E75               	movlw	117
  1177   0009F2  EC09  F009         	call	_Transmitir
  1178                           
  1179                           ;Laboratorio5.c: 205: Transmitir('m');
  1180   0009F6  0E6D               	movlw	109
  1181   0009F8  EC09  F009         	call	_Transmitir
  1182                           
  1183                           ;Laboratorio5.c: 206: Transmitir(':');
  1184   0009FC  0E3A               	movlw	58
  1185   0009FE  EC09  F009         	call	_Transmitir
  1186                           
  1187                           ;Laboratorio5.c: 207: Transmitir(' ');
  1188   000A02  0E20               	movlw	32
  1189   000A04  EC09  F009         	call	_Transmitir
  1190                           
  1191                           ;Laboratorio5.c: 208: Transmitir(Hum / 10 + 48);
  1192   000A08  0E0A               	movlw	10
  1193   000A0A  6E03               	movwf	___lbdiv@divisor^0,c
  1194   000A0C  501E               	movf	_Hum^0,w,c
  1195   000A0E  ECEC  F007         	call	___lbdiv
  1196   000A12  0F30               	addlw	48
  1197   000A14  EC09  F009         	call	_Transmitir
  1198                           
  1199                           ;Laboratorio5.c: 209: Transmitir(Hum % 10 + 48);
  1200   000A18  0E0A               	movlw	10
  1201   000A1A  6E03               	movwf	___lbmod@divisor^0,c
  1202   000A1C  501E               	movf	_Hum^0,w,c
  1203   000A1E  EC71  F008         	call	___lbmod
  1204   000A22  0F30               	addlw	48
  1205   000A24  EC09  F009         	call	_Transmitir
  1206                           
  1207                           ;Laboratorio5.c: 210: Transmitir(' ');
  1208   000A28  0E20               	movlw	32
  1209   000A2A  EC09  F009         	call	_Transmitir
  1210                           
  1211                           ;Laboratorio5.c: 211: Transmitir('%');
  1212   000A2E  0E25               	movlw	37
  1213   000A30  EC09  F009         	call	_Transmitir
  1214                           
  1215                           ;Laboratorio5.c: 212: Transmitir('\n');
  1216   000A34  0E0A               	movlw	10
  1217   000A36  EC09  F009         	call	_Transmitir
  1218                           
  1219                           ;Laboratorio5.c: 213: Transmitir(' ');
  1220   000A3A  0E20               	movlw	32
  1221   000A3C  EC09  F009         	call	_Transmitir
  1222                           
  1223                           ;Laboratorio5.c: 215: EscribeLCD_c(TempC / 10 + 48);
  1224   000A40  C015  F003         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1225   000A44  C016  F004         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1226   000A48  0E00               	movlw	0
  1227   000A4A  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1228   000A4C  0E0A               	movlw	10
  1229   000A4E  6E05               	movwf	___lwdiv@divisor^0,c
  1230   000A50  EC81  F007         	call	___lwdiv	;wreg free
  1231   000A54  5003               	movf	?___lwdiv^0,w,c
  1232   000A56  0F30               	addlw	48
  1233   000A58  ECD1  F008         	call	_EscribeLCD_c
  1234                           
  1235                           ;Laboratorio5.c: 216: EscribeLCD_c(TempC % 10 + 48);
  1236   000A5C  C015  F003         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1237   000A60  C016  F004         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1238   000A64  0E00               	movlw	0
  1239   000A66  6E06               	movwf	(___lwmod@divisor+1)^0,c
  1240   000A68  0E0A               	movlw	10
  1241   000A6A  6E05               	movwf	___lwmod@divisor^0,c
  1242   000A6C  ECAA  F007         	call	___lwmod	;wreg free
  1243   000A70  5003               	movf	?___lwmod^0,w,c
  1244   000A72  0F30               	addlw	48
  1245   000A74  ECD1  F008         	call	_EscribeLCD_c
  1246                           
  1247                           ;Laboratorio5.c: 217: EscribeLCD_c(Simb);
  1248   000A78  5013               	movf	TransmitirDatos@Simb^0,w,c
  1249   000A7A  ECD1  F008         	call	_EscribeLCD_c
  1250                           
  1251                           ;Laboratorio5.c: 218: DireccionaLCD(192);
  1252   000A7E  0EC0               	movlw	192
  1253   000A80  ECDC  F008         	call	_DireccionaLCD
  1254                           
  1255                           ;Laboratorio5.c: 219: MensajeLCD_Word("Hum:");
  1256   000A84  0E1E               	movlw	low STR_4
  1257   000A86  6E07               	movwf	MensajeLCD_Word@a^0,c
  1258   000A88  EC09  F008         	call	_MensajeLCD_Word	;wreg free
  1259                           
  1260                           ;Laboratorio5.c: 220: EscribeLCD_c(Hum / 10 + 48);
  1261   000A8C  0E0A               	movlw	10
  1262   000A8E  6E03               	movwf	___lbdiv@divisor^0,c
  1263   000A90  501E               	movf	_Hum^0,w,c
  1264   000A92  ECEC  F007         	call	___lbdiv
  1265   000A96  0F30               	addlw	48
  1266   000A98  ECD1  F008         	call	_EscribeLCD_c
  1267                           
  1268                           ;Laboratorio5.c: 221: EscribeLCD_c(Hum % 10 + 48);
  1269   000A9C  0E0A               	movlw	10
  1270   000A9E  6E03               	movwf	___lbmod@divisor^0,c
  1271   000AA0  501E               	movf	_Hum^0,w,c
  1272   000AA2  EC71  F008         	call	___lbmod
  1273   000AA6  0F30               	addlw	48
  1274   000AA8  ECD1  F008         	call	_EscribeLCD_c
  1275                           
  1276                           ;Laboratorio5.c: 222: EscribeLCD_c('%');
  1277   000AAC  0E25               	movlw	37
  1278   000AAE  ECD1  F008         	call	_EscribeLCD_c
  1279   000AB2  0012               	return		;funcret
  1280   000AB4                     __end_of_TransmitirDatos:
  1281                           	callstack 0
  1282                           
  1283 ;; *************** function ___wmul *****************
  1284 ;; Defined at:
  1285 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;  multiplier      2    2[COMRAM] unsigned int 
  1288 ;;  multiplicand    2    4[COMRAM] unsigned int 
  1289 ;; Auto vars:     Size  Location     Type
  1290 ;;  product         2    6[COMRAM] unsigned int 
  1291 ;; Return value:  Size  Location     Type
  1292 ;;                  2    2[COMRAM] unsigned int 
  1293 ;; Registers used:
  1294 ;;		wreg, status,2, status,0, prodl, prodh
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1300 ;;      Params:         4       0       0       0       0       0       0       0       0
  1301 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1302 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1303 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1304 ;;Total ram usage:        6 bytes
  1305 ;; Hardware stack levels used: 1
  1306 ;; Hardware stack levels required when called: 2
  1307 ;; This function calls:
  1308 ;;		Nothing
  1309 ;; This function is called by:
  1310 ;;		_TransmitirDatos
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313                           
  1314                           	psect	text3
  1315   001134                     __ptext3:
  1316                           	callstack 0
  1317   001134                     ___wmul:
  1318                           	callstack 27
  1319                           
  1320                           ;incstack = 0
  1321   001134  5003               	movf	___wmul@multiplier^0,w,c
  1322   001136  0205               	mulwf	___wmul@multiplicand^0,c
  1323   001138  CFF3 F007          	movff	prodl,___wmul@product
  1324   00113C  CFF4 F008          	movff	prodh,___wmul@product+1
  1325   001140  5003               	movf	___wmul@multiplier^0,w,c
  1326   001142  0206               	mulwf	(___wmul@multiplicand+1)^0,c
  1327   001144  50F3               	movf	243,w,c
  1328   001146  2608               	addwf	(___wmul@product+1)^0,f,c
  1329   001148  5004               	movf	(___wmul@multiplier+1)^0,w,c
  1330   00114A  0205               	mulwf	___wmul@multiplicand^0,c
  1331   00114C  50F3               	movf	243,w,c
  1332   00114E  2608               	addwf	(___wmul@product+1)^0,f,c
  1333   001150  C007  F003         	movff	___wmul@product,?___wmul
  1334   001154  C008  F004         	movff	___wmul@product+1,?___wmul+1
  1335   001158  0012               	return		;funcret
  1336   00115A                     __end_of___wmul:
  1337                           	callstack 0
  1338                           
  1339 ;; *************** function ___lwmod *****************
  1340 ;; Defined at:
  1341 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1342 ;; Parameters:    Size  Location     Type
  1343 ;;  dividend        2    2[COMRAM] unsigned int 
  1344 ;;  divisor         2    4[COMRAM] unsigned int 
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;  counter         1    6[COMRAM] unsigned char 
  1347 ;; Return value:  Size  Location     Type
  1348 ;;                  2    2[COMRAM] unsigned int 
  1349 ;; Registers used:
  1350 ;;		wreg, status,2, status,0
  1351 ;; Tracked objects:
  1352 ;;		On entry : 0/0
  1353 ;;		On exit  : 0/0
  1354 ;;		Unchanged: 0/0
  1355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1356 ;;      Params:         4       0       0       0       0       0       0       0       0
  1357 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1358 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1359 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1360 ;;Total ram usage:        5 bytes
  1361 ;; Hardware stack levels used: 1
  1362 ;; Hardware stack levels required when called: 2
  1363 ;; This function calls:
  1364 ;;		Nothing
  1365 ;; This function is called by:
  1366 ;;		_TransmitirDatos
  1367 ;; This function uses a non-reentrant model
  1368 ;;
  1369                           
  1370                           	psect	text4
  1371   000F54                     __ptext4:
  1372                           	callstack 0
  1373   000F54                     ___lwmod:
  1374                           	callstack 27
  1375                           
  1376                           ;incstack = 0
  1377   000F54  5005               	movf	___lwmod@divisor^0,w,c
  1378   000F56  1006               	iorwf	(___lwmod@divisor+1)^0,w,c
  1379   000F58  B4D8               	btfsc	status,2,c
  1380   000F5A  D018               	goto	l785
  1381   000F5C  0E01               	movlw	1
  1382   000F5E  6E07               	movwf	___lwmod@counter^0,c
  1383   000F60  D004               	goto	l1761
  1384   000F62                     l1759:
  1385   000F62  90D8               	bcf	status,0,c
  1386   000F64  3605               	rlcf	___lwmod@divisor^0,f,c
  1387   000F66  3606               	rlcf	(___lwmod@divisor+1)^0,f,c
  1388   000F68  2A07               	incf	___lwmod@counter^0,f,c
  1389   000F6A                     l1761:
  1390   000F6A  AE06               	btfss	(___lwmod@divisor+1)^0,7,c
  1391   000F6C  D7FA               	goto	l1759
  1392   000F6E                     u730:
  1393   000F6E  5005               	movf	___lwmod@divisor^0,w,c
  1394   000F70  5C03               	subwf	___lwmod@dividend^0,w,c
  1395   000F72  5006               	movf	(___lwmod@divisor+1)^0,w,c
  1396   000F74  5804               	subwfb	(___lwmod@dividend+1)^0,w,c
  1397   000F76  A0D8               	btfss	status,0,c
  1398   000F78  D004               	goto	l1767
  1399   000F7A  5005               	movf	___lwmod@divisor^0,w,c
  1400   000F7C  5E03               	subwf	___lwmod@dividend^0,f,c
  1401   000F7E  5006               	movf	(___lwmod@divisor+1)^0,w,c
  1402   000F80  5A04               	subwfb	(___lwmod@dividend+1)^0,f,c
  1403   000F82                     l1767:
  1404   000F82  90D8               	bcf	status,0,c
  1405   000F84  3206               	rrcf	(___lwmod@divisor+1)^0,f,c
  1406   000F86  3205               	rrcf	___lwmod@divisor^0,f,c
  1407   000F88  2E07               	decfsz	___lwmod@counter^0,f,c
  1408   000F8A  D7F1               	goto	u730
  1409   000F8C                     l785:
  1410   000F8C  C003  F003         	movff	___lwmod@dividend,?___lwmod
  1411   000F90  C004  F004         	movff	___lwmod@dividend+1,?___lwmod+1
  1412   000F94  0012               	return		;funcret
  1413   000F96                     __end_of___lwmod:
  1414                           	callstack 0
  1415                           
  1416 ;; *************** function ___lwdiv *****************
  1417 ;; Defined at:
  1418 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1419 ;; Parameters:    Size  Location     Type
  1420 ;;  dividend        2    2[COMRAM] unsigned int 
  1421 ;;  divisor         2    4[COMRAM] unsigned int 
  1422 ;; Auto vars:     Size  Location     Type
  1423 ;;  quotient        2    6[COMRAM] unsigned int 
  1424 ;;  counter         1    8[COMRAM] unsigned char 
  1425 ;; Return value:  Size  Location     Type
  1426 ;;                  2    2[COMRAM] unsigned int 
  1427 ;; Registers used:
  1428 ;;		wreg, status,2, status,0
  1429 ;; Tracked objects:
  1430 ;;		On entry : 0/0
  1431 ;;		On exit  : 0/0
  1432 ;;		Unchanged: 0/0
  1433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1434 ;;      Params:         4       0       0       0       0       0       0       0       0
  1435 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1436 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1437 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1438 ;;Total ram usage:        7 bytes
  1439 ;; Hardware stack levels used: 1
  1440 ;; Hardware stack levels required when called: 2
  1441 ;; This function calls:
  1442 ;;		Nothing
  1443 ;; This function is called by:
  1444 ;;		_TransmitirDatos
  1445 ;; This function uses a non-reentrant model
  1446 ;;
  1447                           
  1448                           	psect	text5
  1449   000F02                     __ptext5:
  1450                           	callstack 0
  1451   000F02                     ___lwdiv:
  1452                           	callstack 27
  1453                           
  1454                           ;incstack = 0
  1455   000F02  0E00               	movlw	0
  1456   000F04  6E08               	movwf	(___lwdiv@quotient+1)^0,c
  1457   000F06  0E00               	movlw	0
  1458   000F08  6E07               	movwf	___lwdiv@quotient^0,c
  1459   000F0A  5005               	movf	___lwdiv@divisor^0,w,c
  1460   000F0C  1006               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1461   000F0E  B4D8               	btfsc	status,2,c
  1462   000F10  D01C               	goto	l775
  1463   000F12  0E01               	movlw	1
  1464   000F14  6E09               	movwf	___lwdiv@counter^0,c
  1465   000F16  D004               	goto	l1741
  1466   000F18                     l1739:
  1467   000F18  90D8               	bcf	status,0,c
  1468   000F1A  3605               	rlcf	___lwdiv@divisor^0,f,c
  1469   000F1C  3606               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1470   000F1E  2A09               	incf	___lwdiv@counter^0,f,c
  1471   000F20                     l1741:
  1472   000F20  AE06               	btfss	(___lwdiv@divisor+1)^0,7,c
  1473   000F22  D7FA               	goto	l1739
  1474   000F24                     u700:
  1475   000F24  90D8               	bcf	status,0,c
  1476   000F26  3607               	rlcf	___lwdiv@quotient^0,f,c
  1477   000F28  3608               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1478   000F2A  5005               	movf	___lwdiv@divisor^0,w,c
  1479   000F2C  5C03               	subwf	___lwdiv@dividend^0,w,c
  1480   000F2E  5006               	movf	(___lwdiv@divisor+1)^0,w,c
  1481   000F30  5804               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1482   000F32  A0D8               	btfss	status,0,c
  1483   000F34  D005               	goto	l1751
  1484   000F36  5005               	movf	___lwdiv@divisor^0,w,c
  1485   000F38  5E03               	subwf	___lwdiv@dividend^0,f,c
  1486   000F3A  5006               	movf	(___lwdiv@divisor+1)^0,w,c
  1487   000F3C  5A04               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1488   000F3E  8007               	bsf	___lwdiv@quotient^0,0,c
  1489   000F40                     l1751:
  1490   000F40  90D8               	bcf	status,0,c
  1491   000F42  3206               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1492   000F44  3205               	rrcf	___lwdiv@divisor^0,f,c
  1493   000F46  2E09               	decfsz	___lwdiv@counter^0,f,c
  1494   000F48  D7ED               	goto	u700
  1495   000F4A                     l775:
  1496   000F4A  C007  F003         	movff	___lwdiv@quotient,?___lwdiv
  1497   000F4E  C008  F004         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1498   000F52  0012               	return		;funcret
  1499   000F54                     __end_of___lwdiv:
  1500                           	callstack 0
  1501                           
  1502 ;; *************** function ___lbmod *****************
  1503 ;; Defined at:
  1504 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lbmod.c"
  1505 ;; Parameters:    Size  Location     Type
  1506 ;;  dividend        1    wreg     unsigned char 
  1507 ;;  divisor         1    2[COMRAM] unsigned char 
  1508 ;; Auto vars:     Size  Location     Type
  1509 ;;  dividend        1    3[COMRAM] unsigned char 
  1510 ;;  rem             1    5[COMRAM] unsigned char 
  1511 ;;  counter         1    4[COMRAM] unsigned char 
  1512 ;; Return value:  Size  Location     Type
  1513 ;;                  1    wreg      unsigned char 
  1514 ;; Registers used:
  1515 ;;		wreg, status,2, status,0
  1516 ;; Tracked objects:
  1517 ;;		On entry : 0/0
  1518 ;;		On exit  : 0/0
  1519 ;;		Unchanged: 0/0
  1520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1521 ;;      Params:         1       0       0       0       0       0       0       0       0
  1522 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1523 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1524 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1525 ;;Total ram usage:        4 bytes
  1526 ;; Hardware stack levels used: 1
  1527 ;; Hardware stack levels required when called: 2
  1528 ;; This function calls:
  1529 ;;		Nothing
  1530 ;; This function is called by:
  1531 ;;		_main
  1532 ;;		_TransmitirDatos
  1533 ;; This function uses a non-reentrant model
  1534 ;;
  1535                           
  1536                           	psect	text6
  1537   0010E2                     __ptext6:
  1538                           	callstack 0
  1539   0010E2                     ___lbmod:
  1540                           	callstack 28
  1541                           
  1542                           ;incstack = 0
  1543                           ;___lbmod@dividend stored from wreg
  1544   0010E2  6E04               	movwf	___lbmod@dividend^0,c
  1545   0010E4  0E08               	movlw	8
  1546   0010E6  6E05               	movwf	___lbmod@counter^0,c
  1547   0010E8  0E00               	movlw	0
  1548   0010EA  6E06               	movwf	___lbmod@rem^0,c
  1549   0010EC                     l1719:
  1550   0010EC  90D8               	bcf	status,0,c
  1551   0010EE  3404               	rlcf	___lbmod@dividend^0,w,c
  1552   0010F0  3406               	rlcf	___lbmod@rem^0,w,c
  1553   0010F2  6E06               	movwf	___lbmod@rem^0,c
  1554   0010F4  90D8               	bcf	status,0,c
  1555   0010F6  3604               	rlcf	___lbmod@dividend^0,f,c
  1556   0010F8  5003               	movf	___lbmod@divisor^0,w,c
  1557   0010FA  5C06               	subwf	___lbmod@rem^0,w,c
  1558   0010FC  A0D8               	btfss	status,0,c
  1559   0010FE  D002               	goto	l1727
  1560   001100  5003               	movf	___lbmod@divisor^0,w,c
  1561   001102  5E06               	subwf	___lbmod@rem^0,f,c
  1562   001104                     l1727:
  1563   001104  2E05               	decfsz	___lbmod@counter^0,f,c
  1564   001106  D7F2               	goto	l1719
  1565   001108  5006               	movf	___lbmod@rem^0,w,c
  1566   00110A  0012               	return		;funcret
  1567   00110C                     __end_of___lbmod:
  1568                           	callstack 0
  1569                           
  1570 ;; *************** function ___lbdiv *****************
  1571 ;; Defined at:
  1572 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lbdiv.c"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;  dividend        1    wreg     unsigned char 
  1575 ;;  divisor         1    2[COMRAM] unsigned char 
  1576 ;; Auto vars:     Size  Location     Type
  1577 ;;  dividend        1    3[COMRAM] unsigned char 
  1578 ;;  quotient        1    5[COMRAM] unsigned char 
  1579 ;;  counter         1    4[COMRAM] unsigned char 
  1580 ;; Return value:  Size  Location     Type
  1581 ;;                  1    wreg      unsigned char 
  1582 ;; Registers used:
  1583 ;;		wreg, status,2, status,0
  1584 ;; Tracked objects:
  1585 ;;		On entry : 0/0
  1586 ;;		On exit  : 0/0
  1587 ;;		Unchanged: 0/0
  1588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1589 ;;      Params:         1       0       0       0       0       0       0       0       0
  1590 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1591 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1592 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1593 ;;Total ram usage:        4 bytes
  1594 ;; Hardware stack levels used: 1
  1595 ;; Hardware stack levels required when called: 2
  1596 ;; This function calls:
  1597 ;;		Nothing
  1598 ;; This function is called by:
  1599 ;;		_main
  1600 ;;		_TransmitirDatos
  1601 ;; This function uses a non-reentrant model
  1602 ;;
  1603                           
  1604                           	psect	text7
  1605   000FD8                     __ptext7:
  1606                           	callstack 0
  1607   000FD8                     ___lbdiv:
  1608                           	callstack 28
  1609                           
  1610                           ;incstack = 0
  1611                           ;___lbdiv@dividend stored from wreg
  1612   000FD8  6E04               	movwf	___lbdiv@dividend^0,c
  1613   000FDA  0E00               	movlw	0
  1614   000FDC  6E06               	movwf	___lbdiv@quotient^0,c
  1615   000FDE  5003               	movf	___lbdiv@divisor^0,w,c
  1616   000FE0  B4D8               	btfsc	status,2,c
  1617   000FE2  D015               	goto	l1713
  1618   000FE4  0E01               	movlw	1
  1619   000FE6  6E05               	movwf	___lbdiv@counter^0,c
  1620   000FE8  D003               	goto	l1701
  1621   000FEA                     l1697:
  1622   000FEA  90D8               	bcf	status,0,c
  1623   000FEC  3603               	rlcf	___lbdiv@divisor^0,f,c
  1624   000FEE  2A05               	incf	___lbdiv@counter^0,f,c
  1625   000FF0                     l1701:
  1626   000FF0  AE03               	btfss	___lbdiv@divisor^0,7,c
  1627   000FF2  D7FB               	goto	l1697
  1628   000FF4                     u660:
  1629   000FF4  90D8               	bcf	status,0,c
  1630   000FF6  3606               	rlcf	___lbdiv@quotient^0,f,c
  1631   000FF8  5003               	movf	___lbdiv@divisor^0,w,c
  1632   000FFA  5C04               	subwf	___lbdiv@dividend^0,w,c
  1633   000FFC  A0D8               	btfss	status,0,c
  1634   000FFE  D003               	goto	l1709
  1635   001000  5003               	movf	___lbdiv@divisor^0,w,c
  1636   001002  5E04               	subwf	___lbdiv@dividend^0,f,c
  1637   001004  8006               	bsf	___lbdiv@quotient^0,0,c
  1638   001006                     l1709:
  1639   001006  90D8               	bcf	status,0,c
  1640   001008  3203               	rrcf	___lbdiv@divisor^0,f,c
  1641   00100A  2E05               	decfsz	___lbdiv@counter^0,f,c
  1642   00100C  D7F3               	goto	u660
  1643   00100E                     l1713:
  1644   00100E  5006               	movf	___lbdiv@quotient^0,w,c
  1645   001010  0012               	return		;funcret
  1646   001012                     __end_of___lbdiv:
  1647                           	callstack 0
  1648                           
  1649 ;; *************** function ___awdiv *****************
  1650 ;; Defined at:
  1651 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  1652 ;; Parameters:    Size  Location     Type
  1653 ;;  dividend        2    2[COMRAM] int 
  1654 ;;  divisor         2    4[COMRAM] int 
  1655 ;; Auto vars:     Size  Location     Type
  1656 ;;  quotient        2    8[COMRAM] int 
  1657 ;;  sign            1    7[COMRAM] unsigned char 
  1658 ;;  counter         1    6[COMRAM] unsigned char 
  1659 ;; Return value:  Size  Location     Type
  1660 ;;                  2    2[COMRAM] int 
  1661 ;; Registers used:
  1662 ;;		wreg, status,2, status,0
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1668 ;;      Params:         4       0       0       0       0       0       0       0       0
  1669 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1670 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1671 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1672 ;;Total ram usage:        8 bytes
  1673 ;; Hardware stack levels used: 1
  1674 ;; Hardware stack levels required when called: 2
  1675 ;; This function calls:
  1676 ;;		Nothing
  1677 ;; This function is called by:
  1678 ;;		_TransmitirDatos
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           
  1682                           	psect	text8
  1683   000E18                     __ptext8:
  1684                           	callstack 0
  1685   000E18                     ___awdiv:
  1686                           	callstack 27
  1687                           
  1688                           ;incstack = 0
  1689   000E18  0E00               	movlw	0
  1690   000E1A  6E08               	movwf	___awdiv@sign^0,c
  1691   000E1C  AE06               	btfss	(___awdiv@divisor+1)^0,7,c
  1692   000E1E  D006               	goto	l1655
  1693   000E20  6C05               	negf	___awdiv@divisor^0,c
  1694   000E22  1E06               	comf	(___awdiv@divisor+1)^0,f,c
  1695   000E24  B0D8               	btfsc	status,0,c
  1696   000E26  2A06               	incf	(___awdiv@divisor+1)^0,f,c
  1697   000E28  0E01               	movlw	1
  1698   000E2A  6E08               	movwf	___awdiv@sign^0,c
  1699   000E2C                     l1655:
  1700   000E2C  AE04               	btfss	(___awdiv@dividend+1)^0,7,c
  1701   000E2E  D006               	goto	l1661
  1702   000E30  6C03               	negf	___awdiv@dividend^0,c
  1703   000E32  1E04               	comf	(___awdiv@dividend+1)^0,f,c
  1704   000E34  B0D8               	btfsc	status,0,c
  1705   000E36  2A04               	incf	(___awdiv@dividend+1)^0,f,c
  1706   000E38  0E01               	movlw	1
  1707   000E3A  1A08               	xorwf	___awdiv@sign^0,f,c
  1708   000E3C                     l1661:
  1709   000E3C  0E00               	movlw	0
  1710   000E3E  6E0A               	movwf	(___awdiv@quotient+1)^0,c
  1711   000E40  0E00               	movlw	0
  1712   000E42  6E09               	movwf	___awdiv@quotient^0,c
  1713   000E44  5005               	movf	___awdiv@divisor^0,w,c
  1714   000E46  1006               	iorwf	(___awdiv@divisor+1)^0,w,c
  1715   000E48  B4D8               	btfsc	status,2,c
  1716   000E4A  D01C               	goto	l1683
  1717   000E4C  0E01               	movlw	1
  1718   000E4E  6E07               	movwf	___awdiv@counter^0,c
  1719   000E50  D004               	goto	l1669
  1720   000E52                     l1667:
  1721   000E52  90D8               	bcf	status,0,c
  1722   000E54  3605               	rlcf	___awdiv@divisor^0,f,c
  1723   000E56  3606               	rlcf	(___awdiv@divisor+1)^0,f,c
  1724   000E58  2A07               	incf	___awdiv@counter^0,f,c
  1725   000E5A                     l1669:
  1726   000E5A  AE06               	btfss	(___awdiv@divisor+1)^0,7,c
  1727   000E5C  D7FA               	goto	l1667
  1728   000E5E                     u620:
  1729   000E5E  90D8               	bcf	status,0,c
  1730   000E60  3609               	rlcf	___awdiv@quotient^0,f,c
  1731   000E62  360A               	rlcf	(___awdiv@quotient+1)^0,f,c
  1732   000E64  5005               	movf	___awdiv@divisor^0,w,c
  1733   000E66  5C03               	subwf	___awdiv@dividend^0,w,c
  1734   000E68  5006               	movf	(___awdiv@divisor+1)^0,w,c
  1735   000E6A  5804               	subwfb	(___awdiv@dividend+1)^0,w,c
  1736   000E6C  A0D8               	btfss	status,0,c
  1737   000E6E  D005               	goto	l1679
  1738   000E70  5005               	movf	___awdiv@divisor^0,w,c
  1739   000E72  5E03               	subwf	___awdiv@dividend^0,f,c
  1740   000E74  5006               	movf	(___awdiv@divisor+1)^0,w,c
  1741   000E76  5A04               	subwfb	(___awdiv@dividend+1)^0,f,c
  1742   000E78  8009               	bsf	___awdiv@quotient^0,0,c
  1743   000E7A                     l1679:
  1744   000E7A  90D8               	bcf	status,0,c
  1745   000E7C  3206               	rrcf	(___awdiv@divisor+1)^0,f,c
  1746   000E7E  3205               	rrcf	___awdiv@divisor^0,f,c
  1747   000E80  2E07               	decfsz	___awdiv@counter^0,f,c
  1748   000E82  D7ED               	goto	u620
  1749   000E84                     l1683:
  1750   000E84  5008               	movf	___awdiv@sign^0,w,c
  1751   000E86  B4D8               	btfsc	status,2,c
  1752   000E88  D004               	goto	l1687
  1753   000E8A  6C09               	negf	___awdiv@quotient^0,c
  1754   000E8C  1E0A               	comf	(___awdiv@quotient+1)^0,f,c
  1755   000E8E  B0D8               	btfsc	status,0,c
  1756   000E90  2A0A               	incf	(___awdiv@quotient+1)^0,f,c
  1757   000E92                     l1687:
  1758   000E92  C009  F003         	movff	___awdiv@quotient,?___awdiv
  1759   000E96  C00A  F004         	movff	___awdiv@quotient+1,?___awdiv+1
  1760   000E9A  0012               	return		;funcret
  1761   000E9C                     __end_of___awdiv:
  1762                           	callstack 0
  1763                           
  1764 ;; *************** function _Transmitir *****************
  1765 ;; Defined at:
  1766 ;;		line 152 in file "Laboratorio5.c"
  1767 ;; Parameters:    Size  Location     Type
  1768 ;;  BufferT         1    wreg     unsigned char 
  1769 ;; Auto vars:     Size  Location     Type
  1770 ;;  BufferT         1    2[COMRAM] unsigned char 
  1771 ;; Return value:  Size  Location     Type
  1772 ;;                  1    wreg      void 
  1773 ;; Registers used:
  1774 ;;		wreg
  1775 ;; Tracked objects:
  1776 ;;		On entry : 0/0
  1777 ;;		On exit  : 0/0
  1778 ;;		Unchanged: 0/0
  1779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1780 ;;      Params:         0       0       0       0       0       0       0       0       0
  1781 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1782 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1783 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1784 ;;Total ram usage:        1 bytes
  1785 ;; Hardware stack levels used: 1
  1786 ;; Hardware stack levels required when called: 2
  1787 ;; This function calls:
  1788 ;;		Nothing
  1789 ;; This function is called by:
  1790 ;;		_TransmitirDatos
  1791 ;; This function uses a non-reentrant model
  1792 ;;
  1793                           
  1794                           	psect	text9
  1795   001212                     __ptext9:
  1796                           	callstack 0
  1797   001212                     _Transmitir:
  1798                           	callstack 27
  1799                           
  1800                           ;incstack = 0
  1801                           ;Transmitir@BufferT stored from wreg
  1802   001212  6E03               	movwf	Transmitir@BufferT^0,c
  1803   001214                     
  1804                           ;Laboratorio5.c: 153: while (TRMT == 0);
  1805   001214  A2AC               	btfss	4012,1,c	;volatile
  1806   001216  D7FE               	goto	l1149
  1807                           
  1808                           ;Laboratorio5.c: 154: TXREG = BufferT;
  1809   001218  C003  FFAD         	movff	Transmitir@BufferT,4013	;volatile
  1810   00121C  0012               	return		;funcret
  1811   00121E                     __end_of_Transmitir:
  1812                           	callstack 0
  1813                           
  1814 ;; *************** function _MensajeLCD_Word *****************
  1815 ;; Defined at:
  1816 ;;		line 241 in file "LibLCDXC8.h"
  1817 ;; Parameters:    Size  Location     Type
  1818 ;;  a               1    6[COMRAM] PTR unsigned char 
  1819 ;;		 -> STR_4(5), STR_3(6), STR_2(10), STR_1(13), 
  1820 ;; Auto vars:     Size  Location     Type
  1821 ;;  i               2    8[COMRAM] int 
  1822 ;; Return value:  Size  Location     Type
  1823 ;;                  1    wreg      void 
  1824 ;; Registers used:
  1825 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1826 ;; Tracked objects:
  1827 ;;		On entry : 0/0
  1828 ;;		On exit  : 0/0
  1829 ;;		Unchanged: 0/0
  1830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1831 ;;      Params:         1       0       0       0       0       0       0       0       0
  1832 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1833 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1834 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1835 ;;Total ram usage:        4 bytes
  1836 ;; Hardware stack levels used: 1
  1837 ;; Hardware stack levels required when called: 5
  1838 ;; This function calls:
  1839 ;;		_EscribeLCD_c
  1840 ;;		_strlen
  1841 ;; This function is called by:
  1842 ;;		_main
  1843 ;;		_TransmitirDatos
  1844 ;; This function uses a non-reentrant model
  1845 ;;
  1846                           
  1847                           	psect	text10
  1848   001012                     __ptext10:
  1849                           	callstack 0
  1850   001012                     _MensajeLCD_Word:
  1851                           	callstack 24
  1852                           
  1853                           ;LibLCDXC8.h: 245: for(int i = 0; i<strlen(a); i++){
  1854                           
  1855                           ;incstack = 0
  1856   001012  0E00               	movlw	0
  1857   001014  6E0A               	movwf	(MensajeLCD_Word@i+1)^0,c
  1858   001016  0E00               	movlw	0
  1859   001018  6E09               	movwf	MensajeLCD_Word@i^0,c
  1860   00101A  D00D               	goto	l1639
  1861   00101C                     l1635:
  1862                           
  1863                           ;LibLCDXC8.h: 247: EscribeLCD_c(a[i]);
  1864   00101C  5007               	movf	MensajeLCD_Word@a^0,w,c
  1865   00101E  2409               	addwf	MensajeLCD_Word@i^0,w,c
  1866   001020  6E08               	movwf	??_MensajeLCD_Word^0,c
  1867   001022  C008  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  1868   001026                     	if	1	;There is more than 1 active tblptr byte
  1869   001026  0E08               	movlw	high __smallconst
  1870   001028  6EF7               	movwf	tblptrh,c
  1871   00102A                     	endif
  1872   00102A                     	if	0	;tblptru may be non-zero
  1873   00102A                     	endif
  1874   00102A                     	if	0	;tblptru may be non-zero
  1875   00102A                     	endif
  1876   00102A  0008               	tblrd		*
  1877   00102C  50F5               	movf	tablat,w,c
  1878   00102E  ECD1  F008         	call	_EscribeLCD_c
  1879   001032  4A09               	infsnz	MensajeLCD_Word@i^0,f,c
  1880   001034  2A0A               	incf	(MensajeLCD_Word@i+1)^0,f,c
  1881   001036                     l1639:
  1882   001036  C007  F003         	movff	MensajeLCD_Word@a,strlen@s
  1883   00103A  EC86  F008         	call	_strlen	;wreg free
  1884   00103E  5003               	movf	?_strlen^0,w,c
  1885   001040  5C09               	subwf	MensajeLCD_Word@i^0,w,c
  1886   001042  5004               	movf	(?_strlen+1)^0,w,c
  1887   001044  580A               	subwfb	(MensajeLCD_Word@i+1)^0,w,c
  1888   001046  B0D8               	btfsc	status,0,c
  1889   001048  0012               	return	
  1890   00104A  D7E8               	goto	l1635
  1891   00104C                     __end_of_MensajeLCD_Word:
  1892                           	callstack 0
  1893                           
  1894 ;; *************** function _strlen *****************
  1895 ;; Defined at:
  1896 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\strlen.c"
  1897 ;; Parameters:    Size  Location     Type
  1898 ;;  s               1    2[COMRAM] PTR const unsigned char 
  1899 ;;		 -> STR_4(5), STR_3(6), STR_2(10), STR_1(13), 
  1900 ;; Auto vars:     Size  Location     Type
  1901 ;;  cp              1    4[COMRAM] PTR const unsigned char 
  1902 ;;		 -> STR_4(5), STR_3(6), STR_2(10), STR_1(13), 
  1903 ;; Return value:  Size  Location     Type
  1904 ;;                  2    2[COMRAM] unsigned int 
  1905 ;; Registers used:
  1906 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1907 ;; Tracked objects:
  1908 ;;		On entry : 0/0
  1909 ;;		On exit  : 0/0
  1910 ;;		Unchanged: 0/0
  1911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1912 ;;      Params:         2       0       0       0       0       0       0       0       0
  1913 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1914 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1915 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1916 ;;Total ram usage:        3 bytes
  1917 ;; Hardware stack levels used: 1
  1918 ;; Hardware stack levels required when called: 2
  1919 ;; This function calls:
  1920 ;;		Nothing
  1921 ;; This function is called by:
  1922 ;;		_MensajeLCD_Word
  1923 ;; This function uses a non-reentrant model
  1924 ;;
  1925                           
  1926                           	psect	text11
  1927   00110C                     __ptext11:
  1928                           	callstack 0
  1929   00110C                     _strlen:
  1930                           	callstack 26
  1931                           
  1932                           ;incstack = 0
  1933   00110C  C003  F005         	movff	strlen@s,strlen@cp
  1934   001110  D001               	goto	l1627
  1935   001112                     l1625:
  1936   001112  2A05               	incf	strlen@cp^0,f,c
  1937   001114                     l1627:
  1938   001114  C005  FFF6         	movff	strlen@cp,tblptrl
  1939   001118                     	if	1	;There is more than 1 active tblptr byte
  1940   001118  0E08               	movlw	high __smallconst
  1941   00111A  6EF7               	movwf	tblptrh,c
  1942   00111C                     	endif
  1943   00111C                     	if	0	;tblptru may be non-zero
  1944   00111C                     	endif
  1945   00111C                     	if	0	;tblptru may be non-zero
  1946   00111C                     	endif
  1947   00111C  0008               	tblrd		*
  1948   00111E  50F5               	movf	tablat,w,c
  1949   001120  0900               	iorlw	0
  1950   001122  A4D8               	btfss	status,2,c
  1951   001124  D7F6               	goto	l1625
  1952   001126  5003               	movf	strlen@s^0,w,c
  1953   001128  5C05               	subwf	strlen@cp^0,w,c
  1954   00112A  6E03               	movwf	?_strlen^0,c
  1955   00112C  6A04               	clrf	(?_strlen+1)^0,c
  1956   00112E  BE03               	btfsc	?_strlen^0,7,c
  1957   001130  0604               	decf	(?_strlen+1)^0,f,c
  1958   001132  0012               	return		;funcret
  1959   001134                     __end_of_strlen:
  1960                           	callstack 0
  1961                           
  1962 ;; *************** function _EscribeLCD_c *****************
  1963 ;; Defined at:
  1964 ;;		line 142 in file "LibLCDXC8.h"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;  a               1    wreg     unsigned char 
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;  a               1    5[COMRAM] unsigned char 
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  1    wreg      void 
  1971 ;; Registers used:
  1972 ;;		wreg, status,2, status,0, cstack
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1978 ;;      Params:         0       0       0       0       0       0       0       0       0
  1979 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1980 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1981 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1982 ;;Total ram usage:        1 bytes
  1983 ;; Hardware stack levels used: 1
  1984 ;; Hardware stack levels required when called: 4
  1985 ;; This function calls:
  1986 ;;		_EnviaDato
  1987 ;;		_HabilitaLCD
  1988 ;;		_RetardoLCD
  1989 ;; This function is called by:
  1990 ;;		_MensajeLCD_Word
  1991 ;;		_main
  1992 ;;		_TransmitirDatos
  1993 ;; This function uses a non-reentrant model
  1994 ;;
  1995                           
  1996                           	psect	text12
  1997   0011A2                     __ptext12:
  1998                           	callstack 0
  1999   0011A2                     _EscribeLCD_c:
  2000                           	callstack 24
  2001                           
  2002                           ;incstack = 0
  2003                           ;EscribeLCD_c@a stored from wreg
  2004   0011A2  6E06               	movwf	EscribeLCD_c@a^0,c
  2005                           
  2006                           ;LibLCDXC8.h: 146: LATE1=1;
  2007   0011A4  828D               	bsf	3981,1,c	;volatile
  2008                           
  2009                           ;LibLCDXC8.h: 147: EnviaDato(a);
  2010   0011A6  5006               	movf	EscribeLCD_c@a^0,w,c
  2011   0011A8  EC0F  F009         	call	_EnviaDato
  2012                           
  2013                           ;LibLCDXC8.h: 148: HabilitaLCD();
  2014   0011AC  EC02  F009         	call	_HabilitaLCD	;wreg free
  2015                           
  2016                           ;LibLCDXC8.h: 149: RetardoLCD(4);
  2017   0011B0  0E04               	movlw	4
  2018   0011B2  EC4E  F007         	call	_RetardoLCD
  2019   0011B6  0012               	return		;funcret
  2020   0011B8                     __end_of_EscribeLCD_c:
  2021                           	callstack 0
  2022                           
  2023 ;; *************** function _DireccionaLCD *****************
  2024 ;; Defined at:
  2025 ;;		line 252 in file "LibLCDXC8.h"
  2026 ;; Parameters:    Size  Location     Type
  2027 ;;  a               1    wreg     unsigned char 
  2028 ;; Auto vars:     Size  Location     Type
  2029 ;;  a               1    5[COMRAM] unsigned char 
  2030 ;; Return value:  Size  Location     Type
  2031 ;;                  1    wreg      void 
  2032 ;; Registers used:
  2033 ;;		wreg, status,2, status,0, cstack
  2034 ;; Tracked objects:
  2035 ;;		On entry : 0/0
  2036 ;;		On exit  : 0/0
  2037 ;;		Unchanged: 0/0
  2038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2039 ;;      Params:         0       0       0       0       0       0       0       0       0
  2040 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2041 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2042 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2043 ;;Total ram usage:        1 bytes
  2044 ;; Hardware stack levels used: 1
  2045 ;; Hardware stack levels required when called: 4
  2046 ;; This function calls:
  2047 ;;		_EnviaDato
  2048 ;;		_HabilitaLCD
  2049 ;;		_RetardoLCD
  2050 ;; This function is called by:
  2051 ;;		_main
  2052 ;;		_TransmitirDatos
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055                           
  2056                           	psect	text13
  2057   0011B8                     __ptext13:
  2058                           	callstack 0
  2059   0011B8                     _DireccionaLCD:
  2060                           	callstack 25
  2061                           
  2062                           ;incstack = 0
  2063                           ;DireccionaLCD@a stored from wreg
  2064   0011B8  6E06               	movwf	DireccionaLCD@a^0,c
  2065                           
  2066                           ;LibLCDXC8.h: 255: LATE1=0;
  2067   0011BA  928D               	bcf	3981,1,c	;volatile
  2068                           
  2069                           ;LibLCDXC8.h: 256: EnviaDato(a);
  2070   0011BC  5006               	movf	DireccionaLCD@a^0,w,c
  2071   0011BE  EC0F  F009         	call	_EnviaDato
  2072                           
  2073                           ;LibLCDXC8.h: 257: HabilitaLCD();
  2074   0011C2  EC02  F009         	call	_HabilitaLCD	;wreg free
  2075                           
  2076                           ;LibLCDXC8.h: 258: RetardoLCD(4);
  2077   0011C6  0E04               	movlw	4
  2078   0011C8  EC4E  F007         	call	_RetardoLCD
  2079   0011CC  0012               	return		;funcret
  2080   0011CE                     __end_of_DireccionaLCD:
  2081                           	callstack 0
  2082                           
  2083 ;; *************** function _LeerHT11 *****************
  2084 ;; Defined at:
  2085 ;;		line 114 in file "Laboratorio5.c"
  2086 ;; Parameters:    Size  Location     Type
  2087 ;;		None
  2088 ;; Auto vars:     Size  Location     Type
  2089 ;;		None
  2090 ;; Return value:  Size  Location     Type
  2091 ;;                  1    wreg      void 
  2092 ;; Registers used:
  2093 ;;		wreg, status,2, status,0, cstack
  2094 ;; Tracked objects:
  2095 ;;		On entry : 0/0
  2096 ;;		On exit  : 0/0
  2097 ;;		Unchanged: 0/0
  2098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2099 ;;      Params:         0       0       0       0       0       0       0       0       0
  2100 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2101 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2102 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2103 ;;Total ram usage:        1 bytes
  2104 ;; Hardware stack levels used: 1
  2105 ;; Hardware stack levels required when called: 4
  2106 ;; This function calls:
  2107 ;;		_LeerByte
  2108 ;; This function is called by:
  2109 ;;		_main
  2110 ;; This function uses a non-reentrant model
  2111 ;;
  2112                           
  2113                           	psect	text14
  2114   00104C                     __ptext14:
  2115                           	callstack 0
  2116   00104C                     _LeerHT11:
  2117                           	callstack 26
  2118                           
  2119                           ;Laboratorio5.c: 116: TRISC2 = 0;
  2120                           
  2121                           ;incstack = 0
  2122   00104C  9494               	bcf	3988,2,c	;volatile
  2123                           
  2124                           ;Laboratorio5.c: 117: _delay((unsigned long)((18)*(8000000/4000.0)));
  2125   00104E  0E2F               	movlw	47
  2126   001050  6E07               	movwf	??_LeerHT11^0,c
  2127   001052  0EC0               	movlw	192
  2128   001054                     u1087:
  2129   001054  2EE8               	decfsz	wreg,f,c
  2130   001056  D7FE               	bra	u1087
  2131   001058  2E07               	decfsz	??_LeerHT11^0,f,c
  2132   00105A  D7FC               	bra	u1087
  2133                           
  2134                           ;Laboratorio5.c: 118: TRISC2 = 1;
  2135   00105C  8494               	bsf	3988,2,c	;volatile
  2136   00105E                     l202:
  2137   00105E  B482               	btfsc	3970,2,c	;volatile
  2138   001060  D7FE               	goto	l202
  2139                           
  2140                           ;Laboratorio5.c: 121: _delay((unsigned long)((120)*(8000000/4000000.0)));
  2141   001062  0E50               	movlw	80
  2142   001064                     u1097:
  2143   001064  2EE8               	decfsz	wreg,f,c
  2144   001066  D7FE               	bra	u1097
  2145   001068                     l205:
  2146   001068  B482               	btfsc	3970,2,c	;volatile
  2147   00106A  D7FE               	goto	l205
  2148                           
  2149                           ;Laboratorio5.c: 124: Hum = LeerByte();
  2150   00106C  ECC0  F008         	call	_LeerByte	;wreg free
  2151   001070  6E1E               	movwf	_Hum^0,c
  2152                           
  2153                           ;Laboratorio5.c: 125: LeerByte();
  2154   001072  ECC0  F008         	call	_LeerByte	;wreg free
  2155                           
  2156                           ;Laboratorio5.c: 126: Temp = LeerByte();
  2157   001076  ECC0  F008         	call	_LeerByte	;wreg free
  2158   00107A  6E1F               	movwf	_Temp^0,c
  2159                           
  2160                           ;Laboratorio5.c: 127: LeerByte();
  2161   00107C  ECC0  F008         	call	_LeerByte	;wreg free
  2162                           
  2163                           ;Laboratorio5.c: 128: LeerByte();
  2164   001080  ECC0  F008         	call	_LeerByte	;wreg free
  2165   001084  0012               	return		;funcret
  2166   001086                     __end_of_LeerHT11:
  2167                           	callstack 0
  2168                           
  2169 ;; *************** function _LeerByte *****************
  2170 ;; Defined at:
  2171 ;;		line 131 in file "Laboratorio5.c"
  2172 ;; Parameters:    Size  Location     Type
  2173 ;;		None
  2174 ;; Auto vars:     Size  Location     Type
  2175 ;;  i               1    5[COMRAM] unsigned char 
  2176 ;;  res             1    4[COMRAM] unsigned char 
  2177 ;; Return value:  Size  Location     Type
  2178 ;;                  1    wreg      unsigned char 
  2179 ;; Registers used:
  2180 ;;		wreg, status,2, status,0, cstack
  2181 ;; Tracked objects:
  2182 ;;		On entry : 0/0
  2183 ;;		On exit  : 0/0
  2184 ;;		Unchanged: 0/0
  2185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2186 ;;      Params:         0       0       0       0       0       0       0       0       0
  2187 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2188 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2189 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2190 ;;Total ram usage:        3 bytes
  2191 ;; Hardware stack levels used: 1
  2192 ;; Hardware stack levels required when called: 3
  2193 ;; This function calls:
  2194 ;;		_LeerBit
  2195 ;; This function is called by:
  2196 ;;		_LeerHT11
  2197 ;; This function uses a non-reentrant model
  2198 ;;
  2199                           
  2200                           	psect	text15
  2201   001180                     __ptext15:
  2202                           	callstack 0
  2203   001180                     _LeerByte:
  2204                           	callstack 26
  2205                           
  2206                           ;Laboratorio5.c: 132: unsigned char res = 0, i;
  2207                           
  2208                           ;incstack = 0
  2209   001180  0E00               	movlw	0
  2210   001182  6E05               	movwf	LeerByte@res^0,c
  2211                           
  2212                           ;Laboratorio5.c: 133: for (i = 8; i > 0; i--) {
  2213   001184  0E08               	movlw	8
  2214   001186  6E06               	movwf	LeerByte@i^0,c
  2215   001188                     l1139:
  2216                           
  2217                           ;Laboratorio5.c: 134: res = (res << 1) | LeerBit();
  2218   001188  EC43  F008         	call	_LeerBit	;wreg free
  2219   00118C  6E04               	movwf	??_LeerByte^0,c
  2220   00118E  5005               	movf	LeerByte@res^0,w,c
  2221   001190  2405               	addwf	LeerByte@res^0,w,c
  2222   001192  1004               	iorwf	??_LeerByte^0,w,c
  2223   001194  6E05               	movwf	LeerByte@res^0,c
  2224   001196  0606               	decf	LeerByte@i^0,f,c
  2225   001198  5006               	movf	LeerByte@i^0,w,c
  2226   00119A  A4D8               	btfss	status,2,c
  2227   00119C  D7F5               	goto	l1139
  2228                           
  2229                           ;Laboratorio5.c: 135: };Laboratorio5.c: 136: return res;
  2230   00119E  5005               	movf	LeerByte@res^0,w,c
  2231   0011A0  0012               	return		;funcret
  2232   0011A2                     __end_of_LeerByte:
  2233                           	callstack 0
  2234                           
  2235 ;; *************** function _LeerBit *****************
  2236 ;; Defined at:
  2237 ;;		line 139 in file "Laboratorio5.c"
  2238 ;; Parameters:    Size  Location     Type
  2239 ;;		None
  2240 ;; Auto vars:     Size  Location     Type
  2241 ;;  res             1    2[COMRAM] unsigned char 
  2242 ;; Return value:  Size  Location     Type
  2243 ;;                  1    wreg      unsigned char 
  2244 ;; Registers used:
  2245 ;;		wreg, status,2
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2251 ;;      Params:         0       0       0       0       0       0       0       0       0
  2252 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2253 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2254 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2255 ;;Total ram usage:        1 bytes
  2256 ;; Hardware stack levels used: 1
  2257 ;; Hardware stack levels required when called: 2
  2258 ;; This function calls:
  2259 ;;		Nothing
  2260 ;; This function is called by:
  2261 ;;		_LeerByte
  2262 ;; This function uses a non-reentrant model
  2263 ;;
  2264                           
  2265                           	psect	text16
  2266   001086                     __ptext16:
  2267                           	callstack 0
  2268   001086                     _LeerBit:
  2269                           	callstack 26
  2270                           
  2271                           ;Laboratorio5.c: 140: unsigned char res = 0;
  2272                           
  2273                           ;incstack = 0
  2274   001086  0E00               	movlw	0
  2275   001088  6E03               	movwf	LeerBit@res^0,c
  2276   00108A                     l216:
  2277   00108A  A482               	btfss	3970,2,c	;volatile
  2278   00108C  D7FE               	goto	l216
  2279                           
  2280                           ;Laboratorio5.c: 142: _delay((unsigned long)((13)*(8000000/4000000.0)));
  2281   00108E  0E08               	movlw	8
  2282   001090                     u1107:
  2283   001090  2EE8               	decfsz	wreg,f,c
  2284   001092  D7FE               	bra	u1107
  2285   001094  D000               	nop2	
  2286                           
  2287                           ;Laboratorio5.c: 143: if (RC2 == 1) res = 0;
  2288   001096  A482               	btfss	3970,2,c	;volatile
  2289   001098  D002               	goto	l1103
  2290   00109A  0E00               	movlw	0
  2291   00109C  6E03               	movwf	LeerBit@res^0,c
  2292   00109E                     l1103:
  2293                           
  2294                           ;Laboratorio5.c: 144: _delay((unsigned long)((22)*(8000000/4000000.0)));
  2295   00109E  0E0E               	movlw	14
  2296   0010A0                     u1117:
  2297   0010A0  2EE8               	decfsz	wreg,f,c
  2298   0010A2  D7FE               	bra	u1117
  2299   0010A4  D000               	nop2	
  2300                           
  2301                           ;Laboratorio5.c: 145: if (RC2 == 1) {
  2302   0010A6  A482               	btfss	3970,2,c	;volatile
  2303   0010A8  D004               	goto	u50
  2304                           
  2305                           ;Laboratorio5.c: 146: res = 1;
  2306   0010AA  0E01               	movlw	1
  2307   0010AC  6E03               	movwf	LeerBit@res^0,c
  2308   0010AE                     l221:
  2309   0010AE  B482               	btfsc	3970,2,c	;volatile
  2310   0010B0  D7FE               	goto	l221
  2311   0010B2                     u50:
  2312                           
  2313                           ;Laboratorio5.c: 148: };Laboratorio5.c: 149: return res;
  2314   0010B2  5003               	movf	LeerBit@res^0,w,c
  2315   0010B4  0012               	return		;funcret
  2316   0010B6                     __end_of_LeerBit:
  2317                           	callstack 0
  2318                           
  2319 ;; *************** function _InicializaLCD *****************
  2320 ;; Defined at:
  2321 ;;		line 73 in file "LibLCDXC8.h"
  2322 ;; Parameters:    Size  Location     Type
  2323 ;;		None
  2324 ;; Auto vars:     Size  Location     Type
  2325 ;;		None
  2326 ;; Return value:  Size  Location     Type
  2327 ;;                  1    wreg      void 
  2328 ;; Registers used:
  2329 ;;		wreg, status,2, status,0, cstack
  2330 ;; Tracked objects:
  2331 ;;		On entry : 0/0
  2332 ;;		On exit  : 0/0
  2333 ;;		Unchanged: 0/0
  2334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2335 ;;      Params:         0       0       0       0       0       0       0       0       0
  2336 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2337 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2338 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2339 ;;Total ram usage:        0 bytes
  2340 ;; Hardware stack levels used: 1
  2341 ;; Hardware stack levels required when called: 5
  2342 ;; This function calls:
  2343 ;;		_BorraLCD
  2344 ;;		_EnviaDato
  2345 ;;		_HabilitaLCD
  2346 ;;		_RetardoLCD
  2347 ;; This function is called by:
  2348 ;;		_main
  2349 ;; This function uses a non-reentrant model
  2350 ;;
  2351                           
  2352                           	psect	text17
  2353   000F96                     __ptext17:
  2354                           	callstack 0
  2355   000F96                     _InicializaLCD:
  2356                           	callstack 25
  2357                           
  2358                           ;LibLCDXC8.h: 75: LATE1=0;
  2359                           
  2360                           ;incstack = 0
  2361   000F96  928D               	bcf	3981,1,c	;volatile
  2362                           
  2363                           ;LibLCDXC8.h: 78: else;LibLCDXC8.h: 79: LATD=0x3F;
  2364                           
  2365                           ;LibLCDXC8.h: 76: if(interfaz==4)
  2366   000F98  0E3F               	movlw	63
  2367   000F9A  6E8C               	movwf	140,c	;volatile
  2368                           
  2369                           ;LibLCDXC8.h: 80: HabilitaLCD();
  2370   000F9C  EC02  F009         	call	_HabilitaLCD	;wreg free
  2371                           
  2372                           ;LibLCDXC8.h: 81: RetardoLCD(1);
  2373   000FA0  0E01               	movlw	1
  2374   000FA2  EC4E  F007         	call	_RetardoLCD
  2375                           
  2376                           ;LibLCDXC8.h: 84: else;LibLCDXC8.h: 85: LATD=0x3F;
  2377                           
  2378                           ;LibLCDXC8.h: 82: if(interfaz==4)
  2379   000FA6  0E3F               	movlw	63
  2380   000FA8  6E8C               	movwf	140,c	;volatile
  2381                           
  2382                           ;LibLCDXC8.h: 86: HabilitaLCD();
  2383   000FAA  EC02  F009         	call	_HabilitaLCD	;wreg free
  2384                           
  2385                           ;LibLCDXC8.h: 87: RetardoLCD(3);
  2386   000FAE  0E03               	movlw	3
  2387   000FB0  EC4E  F007         	call	_RetardoLCD
  2388                           
  2389                           ;LibLCDXC8.h: 90: else;LibLCDXC8.h: 91: LATD=0x3F;
  2390                           
  2391                           ;LibLCDXC8.h: 88: if(interfaz==4)
  2392   000FB4  0E3F               	movlw	63
  2393   000FB6  6E8C               	movwf	140,c	;volatile
  2394                           
  2395                           ;LibLCDXC8.h: 92: HabilitaLCD();
  2396   000FB8  EC02  F009         	call	_HabilitaLCD	;wreg free
  2397                           
  2398                           ;LibLCDXC8.h: 93: RetardoLCD(4);
  2399   000FBC  0E04               	movlw	4
  2400   000FBE  EC4E  F007         	call	_RetardoLCD
  2401                           
  2402                           ;LibLCDXC8.h: 101: };LibLCDXC8.h: 102: BorraLCD();
  2403                           
  2404                           ;LibLCDXC8.h: 94: if(interfaz==4){
  2405   000FC2  ECE7  F008         	call	_BorraLCD	;wreg free
  2406                           
  2407                           ;LibLCDXC8.h: 103: EnviaDato(0xF);
  2408   000FC6  0E0F               	movlw	15
  2409   000FC8  EC0F  F009         	call	_EnviaDato
  2410                           
  2411                           ;LibLCDXC8.h: 104: HabilitaLCD();
  2412   000FCC  EC02  F009         	call	_HabilitaLCD	;wreg free
  2413                           
  2414                           ;LibLCDXC8.h: 105: RetardoLCD(4);
  2415   000FD0  0E04               	movlw	4
  2416   000FD2  EC4E  F007         	call	_RetardoLCD
  2417   000FD6  0012               	return		;funcret
  2418   000FD8                     __end_of_InicializaLCD:
  2419                           	callstack 0
  2420                           
  2421 ;; *************** function _BorraLCD *****************
  2422 ;; Defined at:
  2423 ;;		line 114 in file "LibLCDXC8.h"
  2424 ;; Parameters:    Size  Location     Type
  2425 ;;		None
  2426 ;; Auto vars:     Size  Location     Type
  2427 ;;		None
  2428 ;; Return value:  Size  Location     Type
  2429 ;;                  1    wreg      void 
  2430 ;; Registers used:
  2431 ;;		wreg, status,2, status,0, cstack
  2432 ;; Tracked objects:
  2433 ;;		On entry : 0/0
  2434 ;;		On exit  : 0/0
  2435 ;;		Unchanged: 0/0
  2436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2437 ;;      Params:         0       0       0       0       0       0       0       0       0
  2438 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2439 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2440 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2441 ;;Total ram usage:        0 bytes
  2442 ;; Hardware stack levels used: 1
  2443 ;; Hardware stack levels required when called: 4
  2444 ;; This function calls:
  2445 ;;		_EnviaDato
  2446 ;;		_HabilitaLCD
  2447 ;;		_RetardoLCD
  2448 ;; This function is called by:
  2449 ;;		_InicializaLCD
  2450 ;;		_main
  2451 ;;		_TransmitirDatos
  2452 ;; This function uses a non-reentrant model
  2453 ;;
  2454                           
  2455                           	psect	text18
  2456   0011CE                     __ptext18:
  2457                           	callstack 0
  2458   0011CE                     _BorraLCD:
  2459                           	callstack 25
  2460                           
  2461                           ;LibLCDXC8.h: 116: LATE1=0;
  2462                           
  2463                           ;incstack = 0
  2464   0011CE  928D               	bcf	3981,1,c	;volatile
  2465                           
  2466                           ;LibLCDXC8.h: 117: EnviaDato(0x01);
  2467   0011D0  0E01               	movlw	1
  2468   0011D2  EC0F  F009         	call	_EnviaDato
  2469                           
  2470                           ;LibLCDXC8.h: 118: HabilitaLCD();
  2471   0011D6  EC02  F009         	call	_HabilitaLCD	;wreg free
  2472                           
  2473                           ;LibLCDXC8.h: 119: RetardoLCD(2);
  2474   0011DA  0E02               	movlw	2
  2475   0011DC  EC4E  F007         	call	_RetardoLCD
  2476   0011E0  0012               	return		;funcret
  2477   0011E2                     __end_of_BorraLCD:
  2478                           	callstack 0
  2479                           
  2480 ;; *************** function _EnviaDato *****************
  2481 ;; Defined at:
  2482 ;;		line 61 in file "LibLCDXC8.h"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;  a               1    wreg     unsigned char 
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;  a               1    4[COMRAM] unsigned char 
  2487 ;; Return value:  Size  Location     Type
  2488 ;;                  1    wreg      void 
  2489 ;; Registers used:
  2490 ;;		wreg
  2491 ;; Tracked objects:
  2492 ;;		On entry : 0/0
  2493 ;;		On exit  : 0/0
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2496 ;;      Params:         0       0       0       0       0       0       0       0       0
  2497 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2498 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2499 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2500 ;;Total ram usage:        1 bytes
  2501 ;; Hardware stack levels used: 1
  2502 ;; Hardware stack levels required when called: 3
  2503 ;; This function calls:
  2504 ;;		_HabilitaLCD
  2505 ;;		_RetardoLCD
  2506 ;; This function is called by:
  2507 ;;		_InicializaLCD
  2508 ;;		_BorraLCD
  2509 ;;		_EscribeLCD_c
  2510 ;;		_DireccionaLCD
  2511 ;; This function uses a non-reentrant model
  2512 ;;
  2513                           
  2514                           	psect	text19
  2515   00121E                     __ptext19:
  2516                           	callstack 0
  2517   00121E                     _EnviaDato:
  2518                           	callstack 24
  2519                           
  2520                           ;incstack = 0
  2521                           ;EnviaDato@a stored from wreg
  2522   00121E  6E05               	movwf	EnviaDato@a^0,c
  2523                           
  2524                           ;LibLCDXC8.h: 70: LATD=a;
  2525                           
  2526                           ;LibLCDXC8.h: 62: if(interfaz==4){
  2527   001220  C005  FF8C         	movff	EnviaDato@a,3980	;volatile
  2528   001224  0012               	return		;funcret
  2529   001226                     __end_of_EnviaDato:
  2530                           	callstack 0
  2531                           
  2532 ;; *************** function _RetardoLCD *****************
  2533 ;; Defined at:
  2534 ;;		line 288 in file "LibLCDXC8.h"
  2535 ;; Parameters:    Size  Location     Type
  2536 ;;  a               1    wreg     unsigned char 
  2537 ;; Auto vars:     Size  Location     Type
  2538 ;;  a               1    3[COMRAM] unsigned char 
  2539 ;; Return value:  Size  Location     Type
  2540 ;;                  1    wreg      void 
  2541 ;; Registers used:
  2542 ;;		wreg, status,2, status,0
  2543 ;; Tracked objects:
  2544 ;;		On entry : 0/0
  2545 ;;		On exit  : 0/0
  2546 ;;		Unchanged: 0/0
  2547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2548 ;;      Params:         0       0       0       0       0       0       0       0       0
  2549 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2550 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2551 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2552 ;;Total ram usage:        2 bytes
  2553 ;; Hardware stack levels used: 1
  2554 ;; Hardware stack levels required when called: 2
  2555 ;; This function calls:
  2556 ;;		Nothing
  2557 ;; This function is called by:
  2558 ;;		_EnviaDato
  2559 ;;		_InicializaLCD
  2560 ;;		_BorraLCD
  2561 ;;		_EscribeLCD_c
  2562 ;;		_DireccionaLCD
  2563 ;; This function uses a non-reentrant model
  2564 ;;
  2565                           
  2566                           	psect	text20
  2567   000E9C                     __ptext20:
  2568                           	callstack 0
  2569   000E9C                     _RetardoLCD:
  2570                           	callstack 25
  2571                           
  2572                           ;incstack = 0
  2573                           ;RetardoLCD@a stored from wreg
  2574   000E9C  6E04               	movwf	RetardoLCD@a^0,c
  2575                           
  2576                           ;LibLCDXC8.h: 289: switch(a){
  2577   000E9E  D023               	goto	l1065
  2578   000EA0                     l1055:
  2579   000EA0  0E62               	movlw	98
  2580   000EA2  6E03               	movwf	??_RetardoLCD^0,c
  2581   000EA4  0E66               	movlw	102
  2582   000EA6                     u1127:
  2583   000EA6  2EE8               	decfsz	wreg,f,c
  2584   000EA8  D7FE               	bra	u1127
  2585   000EAA  2E03               	decfsz	??_RetardoLCD^0,f,c
  2586   000EAC  D7FC               	bra	u1127
  2587                           
  2588                           ;LibLCDXC8.h: 292: break;
  2589   000EAE  0012               	return	
  2590   000EB0                     l1057:
  2591   000EB0  0E07               	movlw	7
  2592   000EB2  6E03               	movwf	??_RetardoLCD^0,c
  2593   000EB4  0E7D               	movlw	125
  2594   000EB6                     u1137:
  2595   000EB6  2EE8               	decfsz	wreg,f,c
  2596   000EB8  D7FE               	bra	u1137
  2597   000EBA  2E03               	decfsz	??_RetardoLCD^0,f,c
  2598   000EBC  D7FC               	bra	u1137
  2599   000EBE  F000               	nop	
  2600                           
  2601                           ;LibLCDXC8.h: 294: _delay((unsigned long)((640)*(20000000/4000000.0)));
  2602   000EC0  0E05               	movlw	5
  2603   000EC2  6E03               	movwf	??_RetardoLCD^0,c
  2604   000EC4  0E26               	movlw	38
  2605   000EC6                     u1147:
  2606   000EC6  2EE8               	decfsz	wreg,f,c
  2607   000EC8  D7FE               	bra	u1147
  2608   000ECA  2E03               	decfsz	??_RetardoLCD^0,f,c
  2609   000ECC  D7FC               	bra	u1147
  2610   000ECE  D000               	nop2	
  2611                           
  2612                           ;LibLCDXC8.h: 296: break;
  2613   000ED0  0012               	return	
  2614   000ED2                     l1059:
  2615   000ED2  0EA6               	movlw	166
  2616   000ED4                     u1157:
  2617   000ED4  2EE8               	decfsz	wreg,f,c
  2618   000ED6  D7FE               	bra	u1157
  2619   000ED8  D000               	nop2	
  2620                           
  2621                           ;LibLCDXC8.h: 299: break;
  2622   000EDA  0012               	return	
  2623   000EDC                     l1061:
  2624   000EDC  0E42               	movlw	66
  2625   000EDE                     u1167:
  2626   000EDE  2EE8               	decfsz	wreg,f,c
  2627   000EE0  D7FE               	bra	u1167
  2628   000EE2  D000               	nop2	
  2629                           
  2630                           ;LibLCDXC8.h: 302: break;
  2631   000EE4  0012               	return	
  2632   000EE6                     l1065:
  2633   000EE6  5004               	movf	RetardoLCD@a^0,w,c
  2634                           
  2635                           ; Switch size 1, requested type "simple"
  2636                           ; Number of cases is 4, Range of values is 1 to 4
  2637                           ; switch strategies available:
  2638                           ; Name         Instructions Cycles
  2639                           ; simple_byte           13     7 (average)
  2640                           ;	Chosen strategy is simple_byte
  2641   000EE8  0A01               	xorlw	1	; case 1
  2642   000EEA  B4D8               	btfsc	status,2,c
  2643   000EEC  D7D9               	goto	l1055
  2644   000EEE  0A03               	xorlw	3	; case 2
  2645   000EF0  B4D8               	btfsc	status,2,c
  2646   000EF2  D7DE               	goto	l1057
  2647   000EF4  0A01               	xorlw	1	; case 3
  2648   000EF6  B4D8               	btfsc	status,2,c
  2649   000EF8  D7EC               	goto	l1059
  2650   000EFA  0A07               	xorlw	7	; case 4
  2651   000EFC  A4D8               	btfss	status,2,c
  2652   000EFE  0012               	return	
  2653   000F00  D7ED               	goto	l1061
  2654   000F02                     __end_of_RetardoLCD:
  2655                           	callstack 0
  2656                           
  2657 ;; *************** function _HabilitaLCD *****************
  2658 ;; Defined at:
  2659 ;;		line 107 in file "LibLCDXC8.h"
  2660 ;; Parameters:    Size  Location     Type
  2661 ;;		None
  2662 ;; Auto vars:     Size  Location     Type
  2663 ;;		None
  2664 ;; Return value:  Size  Location     Type
  2665 ;;                  1    wreg      void 
  2666 ;; Registers used:
  2667 ;;		wreg
  2668 ;; Tracked objects:
  2669 ;;		On entry : 0/0
  2670 ;;		On exit  : 0/0
  2671 ;;		Unchanged: 0/0
  2672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2673 ;;      Params:         0       0       0       0       0       0       0       0       0
  2674 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2675 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2676 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2677 ;;Total ram usage:        0 bytes
  2678 ;; Hardware stack levels used: 1
  2679 ;; Hardware stack levels required when called: 2
  2680 ;; This function calls:
  2681 ;;		Nothing
  2682 ;; This function is called by:
  2683 ;;		_EnviaDato
  2684 ;;		_InicializaLCD
  2685 ;;		_BorraLCD
  2686 ;;		_EscribeLCD_c
  2687 ;;		_DireccionaLCD
  2688 ;; This function uses a non-reentrant model
  2689 ;;
  2690                           
  2691                           	psect	text21
  2692   001204                     __ptext21:
  2693                           	callstack 0
  2694   001204                     _HabilitaLCD:
  2695                           	callstack 25
  2696                           
  2697                           ;LibLCDXC8.h: 109: LATE2=1;
  2698                           
  2699                           ;incstack = 0
  2700   001204  848D               	bsf	3981,2,c	;volatile
  2701                           
  2702                           ;LibLCDXC8.h: 110: _delay((unsigned long)((40)*(20000000/4000000.0)));
  2703   001206  0E42               	movlw	66
  2704   001208                     u1177:
  2705   001208  2EE8               	decfsz	wreg,f,c
  2706   00120A  D7FE               	bra	u1177
  2707   00120C  D000               	nop2	
  2708                           
  2709                           ;LibLCDXC8.h: 112: LATE2=0;
  2710   00120E  948D               	bcf	3981,2,c	;volatile
  2711   001210  0012               	return		;funcret
  2712   001212                     __end_of_HabilitaLCD:
  2713                           	callstack 0
  2714                           
  2715 ;; *************** function _GuardarDatoEnEEPROM *****************
  2716 ;; Defined at:
  2717 ;;		line 269 in file "Laboratorio5.c"
  2718 ;; Parameters:    Size  Location     Type
  2719 ;;  dir             2    2[COMRAM] unsigned int 
  2720 ;;  dato            1    4[COMRAM] unsigned char 
  2721 ;; Auto vars:     Size  Location     Type
  2722 ;;		None
  2723 ;; Return value:  Size  Location     Type
  2724 ;;                  1    wreg      void 
  2725 ;; Registers used:
  2726 ;;		wreg, status,2
  2727 ;; Tracked objects:
  2728 ;;		On entry : 0/0
  2729 ;;		On exit  : 0/0
  2730 ;;		Unchanged: 0/0
  2731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2732 ;;      Params:         3       0       0       0       0       0       0       0       0
  2733 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2734 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2735 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2736 ;;Total ram usage:        3 bytes
  2737 ;; Hardware stack levels used: 1
  2738 ;; Hardware stack levels required when called: 2
  2739 ;; This function calls:
  2740 ;;		Nothing
  2741 ;; This function is called by:
  2742 ;;		_main
  2743 ;; This function uses a non-reentrant model
  2744 ;;
  2745                           
  2746                           	psect	text22
  2747   00115A                     __ptext22:
  2748                           	callstack 0
  2749   00115A                     _GuardarDatoEnEEPROM:
  2750                           	callstack 28
  2751                           
  2752                           ;Laboratorio5.c: 270: EEADR = dir;
  2753                           
  2754                           ;incstack = 0
  2755   00115A  C003  FFA9         	movff	GuardarDatoEnEEPROM@dir,4009	;volatile
  2756                           
  2757                           ;Laboratorio5.c: 271: EEDATA = dato;
  2758   00115E  C005  FFA8         	movff	GuardarDatoEnEEPROM@dato,4008	;volatile
  2759                           
  2760                           ;Laboratorio5.c: 273: EEPGD = 0;
  2761   001162  9EA6               	bcf	4006,7,c	;volsfr
  2762                           
  2763                           ;Laboratorio5.c: 274: CFGS = 0;
  2764   001164  9CA6               	bcf	4006,6,c	;volsfr
  2765                           
  2766                           ;Laboratorio5.c: 275: WREN = 1;
  2767   001166  84A6               	bsf	4006,2,c	;volsfr
  2768                           
  2769                           ;Laboratorio5.c: 277: GIE = 0;
  2770   001168  9EF2               	bcf	4082,7,c	;volatile
  2771                           
  2772                           ;Laboratorio5.c: 279: EECON2 = 0x55;
  2773   00116A  0E55               	movlw	85
  2774   00116C  6EA7               	movwf	167,c	;volsfr
  2775                           
  2776                           ;Laboratorio5.c: 280: EECON2 = 0xAA;
  2777   00116E  0EAA               	movlw	170
  2778   001170  6EA7               	movwf	167,c	;volsfr
  2779                           
  2780                           ;Laboratorio5.c: 281: WR = 1;
  2781   001172  82A6               	bsf	4006,1,c	;volsfr
  2782                           
  2783                           ;Laboratorio5.c: 282: GIE = 1;
  2784   001174  8EF2               	bsf	4082,7,c	;volatile
  2785   001176                     l273:
  2786   001176  A8A1               	btfss	4001,4,c	;volatile
  2787   001178  D7FE               	goto	l273
  2788                           
  2789                           ;Laboratorio5.c: 284: EEIF = 0;
  2790   00117A  98A1               	bcf	4001,4,c	;volatile
  2791                           
  2792                           ;Laboratorio5.c: 285: WREN = 0;
  2793   00117C  94A6               	bcf	4006,2,c	;volsfr
  2794   00117E  0012               	return		;funcret
  2795   001180                     __end_of_GuardarDatoEnEEPROM:
  2796                           	callstack 0
  2797                           
  2798 ;; *************** function _Conversion *****************
  2799 ;; Defined at:
  2800 ;;		line 262 in file "Laboratorio5.c"
  2801 ;; Parameters:    Size  Location     Type
  2802 ;;  canal           1    wreg     unsigned char 
  2803 ;; Auto vars:     Size  Location     Type
  2804 ;;  canal           1    2[COMRAM] unsigned char 
  2805 ;; Return value:  Size  Location     Type
  2806 ;;                  2   78[None  ] unsigned int 
  2807 ;; Registers used:
  2808 ;;		wreg, status,2, status,0
  2809 ;; Tracked objects:
  2810 ;;		On entry : 0/0
  2811 ;;		On exit  : 0/0
  2812 ;;		Unchanged: 0/0
  2813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2814 ;;      Params:         0       0       0       0       0       0       0       0       0
  2815 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2816 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2817 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2818 ;;Total ram usage:        1 bytes
  2819 ;; Hardware stack levels used: 1
  2820 ;; Hardware stack levels required when called: 2
  2821 ;; This function calls:
  2822 ;;		Nothing
  2823 ;; This function is called by:
  2824 ;;		_main
  2825 ;; This function uses a non-reentrant model
  2826 ;;
  2827                           
  2828                           	psect	text23
  2829   0011E2                     __ptext23:
  2830                           	callstack 0
  2831   0011E2                     _Conversion:
  2832                           	callstack 28
  2833                           
  2834                           ;incstack = 0
  2835                           ;Conversion@canal stored from wreg
  2836   0011E2  6E03               	movwf	Conversion@canal^0,c
  2837                           
  2838                           ;Laboratorio5.c: 263: ADCON0 = 0b00000001 | (canal << 2);
  2839   0011E4  4403               	rlncf	Conversion@canal^0,w,c
  2840   0011E6  46E8               	rlncf	wreg,f,c
  2841   0011E8  0BFC               	andlw	252
  2842   0011EA  0901               	iorlw	1
  2843   0011EC  6EC2               	movwf	194,c	;volatile
  2844                           
  2845                           ;Laboratorio5.c: 264: GO = 1;
  2846   0011EE  82C2               	bsf	4034,1,c	;volatile
  2847   0011F0                     l267:
  2848   0011F0  A2C2               	btfss	4034,1,c	;volatile
  2849   0011F2  0012               	return	
  2850   0011F4  D7FD               	goto	l267
  2851   0011F6                     __end_of_Conversion:
  2852                           	callstack 0
  2853                           
  2854 ;; *************** function _ColorRGB *****************
  2855 ;; Defined at:
  2856 ;;		line 226 in file "Laboratorio5.c"
  2857 ;; Parameters:    Size  Location     Type
  2858 ;;  val             2    2[COMRAM] unsigned int 
  2859 ;; Auto vars:     Size  Location     Type
  2860 ;;		None
  2861 ;; Return value:  Size  Location     Type
  2862 ;;                  1    wreg      void 
  2863 ;; Registers used:
  2864 ;;		wreg, status,2, status,0
  2865 ;; Tracked objects:
  2866 ;;		On entry : 0/0
  2867 ;;		On exit  : 0/0
  2868 ;;		Unchanged: 0/0
  2869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2870 ;;      Params:         2       0       0       0       0       0       0       0       0
  2871 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2872 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2873 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2874 ;;Total ram usage:        2 bytes
  2875 ;; Hardware stack levels used: 1
  2876 ;; Hardware stack levels required when called: 2
  2877 ;; This function calls:
  2878 ;;		Nothing
  2879 ;; This function is called by:
  2880 ;;		_main
  2881 ;; This function uses a non-reentrant model
  2882 ;;
  2883                           
  2884                           	psect	text24
  2885   000CA6                     __ptext24:
  2886                           	callstack 0
  2887   000CA6                     _ColorRGB:
  2888                           	callstack 28
  2889                           
  2890                           ;Laboratorio5.c: 227: if (val < 22) {
  2891                           
  2892                           ;incstack = 0
  2893   000CA6  5004               	movf	(ColorRGB@val+1)^0,w,c
  2894   000CA8  E108               	bnz	l1789
  2895   000CAA  0E16               	movlw	22
  2896   000CAC  5C03               	subwf	ColorRGB@val^0,w,c
  2897   000CAE  B0D8               	btfsc	status,0,c
  2898   000CB0  D004               	goto	l1789
  2899                           
  2900                           ;Laboratorio5.c: 228: RB0 = 0;
  2901   000CB2  9081               	bcf	3969,0,c	;volatile
  2902                           
  2903                           ;Laboratorio5.c: 229: RB1 = 0;
  2904   000CB4  9281               	bcf	3969,1,c	;volatile
  2905                           
  2906                           ;Laboratorio5.c: 230: RB2 = 0;
  2907   000CB6  9481               	bcf	3969,2,c	;volatile
  2908                           
  2909                           ;Laboratorio5.c: 231: } else if (val >= 22 && val < 25) {
  2910   000CB8  0012               	return	
  2911   000CBA                     l1789:
  2912   000CBA  5004               	movf	(ColorRGB@val+1)^0,w,c
  2913   000CBC  E104               	bnz	u770
  2914   000CBE  0E16               	movlw	22
  2915   000CC0  5C03               	subwf	ColorRGB@val^0,w,c
  2916   000CC2  A0D8               	btfss	status,0,c
  2917   000CC4  D00A               	goto	l1795
  2918   000CC6                     u770:
  2919   000CC6  5004               	movf	(ColorRGB@val+1)^0,w,c
  2920   000CC8  E108               	bnz	l1795
  2921   000CCA  0E19               	movlw	25
  2922   000CCC  5C03               	subwf	ColorRGB@val^0,w,c
  2923   000CCE  B0D8               	btfsc	status,0,c
  2924   000CD0  D004               	goto	l1795
  2925                           
  2926                           ;Laboratorio5.c: 232: RB0 = 1;
  2927   000CD2  8081               	bsf	3969,0,c	;volatile
  2928                           
  2929                           ;Laboratorio5.c: 233: RB1 = 0;
  2930   000CD4  9281               	bcf	3969,1,c	;volatile
  2931                           
  2932                           ;Laboratorio5.c: 234: RB2 = 1;
  2933   000CD6  8481               	bsf	3969,2,c	;volatile
  2934                           
  2935                           ;Laboratorio5.c: 235: } else if (val >= 25 && val < 28) {
  2936   000CD8  0012               	return	
  2937   000CDA                     l1795:
  2938   000CDA  5004               	movf	(ColorRGB@val+1)^0,w,c
  2939   000CDC  E104               	bnz	u790
  2940   000CDE  0E19               	movlw	25
  2941   000CE0  5C03               	subwf	ColorRGB@val^0,w,c
  2942   000CE2  A0D8               	btfss	status,0,c
  2943   000CE4  D00A               	goto	l1801
  2944   000CE6                     u790:
  2945   000CE6  5004               	movf	(ColorRGB@val+1)^0,w,c
  2946   000CE8  E108               	bnz	l1801
  2947   000CEA  0E1C               	movlw	28
  2948   000CEC  5C03               	subwf	ColorRGB@val^0,w,c
  2949   000CEE  B0D8               	btfsc	status,0,c
  2950   000CF0  D004               	goto	l1801
  2951                           
  2952                           ;Laboratorio5.c: 236: RB0 = 0;
  2953   000CF2  9081               	bcf	3969,0,c	;volatile
  2954                           
  2955                           ;Laboratorio5.c: 237: RB1 = 0;
  2956   000CF4  9281               	bcf	3969,1,c	;volatile
  2957                           
  2958                           ;Laboratorio5.c: 238: RB2 = 1;
  2959   000CF6  8481               	bsf	3969,2,c	;volatile
  2960                           
  2961                           ;Laboratorio5.c: 239: } else if (val >= 28 && val < 31) {
  2962   000CF8  0012               	return	
  2963   000CFA                     l1801:
  2964   000CFA  5004               	movf	(ColorRGB@val+1)^0,w,c
  2965   000CFC  E104               	bnz	u810
  2966   000CFE  0E1C               	movlw	28
  2967   000D00  5C03               	subwf	ColorRGB@val^0,w,c
  2968   000D02  A0D8               	btfss	status,0,c
  2969   000D04  D00A               	goto	l1807
  2970   000D06                     u810:
  2971   000D06  5004               	movf	(ColorRGB@val+1)^0,w,c
  2972   000D08  E108               	bnz	l1807
  2973   000D0A  0E1F               	movlw	31
  2974   000D0C  5C03               	subwf	ColorRGB@val^0,w,c
  2975   000D0E  B0D8               	btfsc	status,0,c
  2976   000D10  D004               	goto	l1807
  2977                           
  2978                           ;Laboratorio5.c: 240: RB0 = 0;
  2979   000D12  9081               	bcf	3969,0,c	;volatile
  2980                           
  2981                           ;Laboratorio5.c: 241: RB1 = 1;
  2982   000D14  8281               	bsf	3969,1,c	;volatile
  2983                           
  2984                           ;Laboratorio5.c: 242: RB2 = 1;
  2985   000D16  8481               	bsf	3969,2,c	;volatile
  2986                           
  2987                           ;Laboratorio5.c: 243: } else if (val >= 31 && val < 34) {
  2988   000D18  0012               	return	
  2989   000D1A                     l1807:
  2990   000D1A  5004               	movf	(ColorRGB@val+1)^0,w,c
  2991   000D1C  E104               	bnz	u830
  2992   000D1E  0E1F               	movlw	31
  2993   000D20  5C03               	subwf	ColorRGB@val^0,w,c
  2994   000D22  A0D8               	btfss	status,0,c
  2995   000D24  D00A               	goto	l1813
  2996   000D26                     u830:
  2997   000D26  5004               	movf	(ColorRGB@val+1)^0,w,c
  2998   000D28  E108               	bnz	l1813
  2999   000D2A  0E22               	movlw	34
  3000   000D2C  5C03               	subwf	ColorRGB@val^0,w,c
  3001   000D2E  B0D8               	btfsc	status,0,c
  3002   000D30  D004               	goto	l1813
  3003                           
  3004                           ;Laboratorio5.c: 244: RB0 = 0;
  3005   000D32  9081               	bcf	3969,0,c	;volatile
  3006                           
  3007                           ;Laboratorio5.c: 245: RB1 = 1;
  3008   000D34  8281               	bsf	3969,1,c	;volatile
  3009                           
  3010                           ;Laboratorio5.c: 246: RB2 = 0;
  3011   000D36  9481               	bcf	3969,2,c	;volatile
  3012                           
  3013                           ;Laboratorio5.c: 247: } else if (val >= 34 && val < 37) {
  3014   000D38  0012               	return	
  3015   000D3A                     l1813:
  3016   000D3A  5004               	movf	(ColorRGB@val+1)^0,w,c
  3017   000D3C  E104               	bnz	u850
  3018   000D3E  0E22               	movlw	34
  3019   000D40  5C03               	subwf	ColorRGB@val^0,w,c
  3020   000D42  A0D8               	btfss	status,0,c
  3021   000D44  D00A               	goto	l1819
  3022   000D46                     u850:
  3023   000D46  5004               	movf	(ColorRGB@val+1)^0,w,c
  3024   000D48  E108               	bnz	l1819
  3025   000D4A  0E25               	movlw	37
  3026   000D4C  5C03               	subwf	ColorRGB@val^0,w,c
  3027   000D4E  B0D8               	btfsc	status,0,c
  3028   000D50  D004               	goto	l1819
  3029                           
  3030                           ;Laboratorio5.c: 248: RB0 = 1;
  3031   000D52  8081               	bsf	3969,0,c	;volatile
  3032                           
  3033                           ;Laboratorio5.c: 249: RB1 = 1;
  3034   000D54  8281               	bsf	3969,1,c	;volatile
  3035                           
  3036                           ;Laboratorio5.c: 250: RB2 = 0;
  3037   000D56  9481               	bcf	3969,2,c	;volatile
  3038                           
  3039                           ;Laboratorio5.c: 251: } else if (val >= 37 && val < 40) {
  3040   000D58  0012               	return	
  3041   000D5A                     l1819:
  3042   000D5A  5004               	movf	(ColorRGB@val+1)^0,w,c
  3043   000D5C  E104               	bnz	u870
  3044   000D5E  0E25               	movlw	37
  3045   000D60  5C03               	subwf	ColorRGB@val^0,w,c
  3046   000D62  A0D8               	btfss	status,0,c
  3047   000D64  D00A               	goto	l1825
  3048   000D66                     u870:
  3049   000D66  5004               	movf	(ColorRGB@val+1)^0,w,c
  3050   000D68  E108               	bnz	l1825
  3051   000D6A  0E28               	movlw	40
  3052   000D6C  5C03               	subwf	ColorRGB@val^0,w,c
  3053   000D6E  B0D8               	btfsc	status,0,c
  3054   000D70  D004               	goto	l1825
  3055                           
  3056                           ;Laboratorio5.c: 252: RB0 = 1;
  3057   000D72  8081               	bsf	3969,0,c	;volatile
  3058                           
  3059                           ;Laboratorio5.c: 253: RB1 = 0;
  3060   000D74  9281               	bcf	3969,1,c	;volatile
  3061                           
  3062                           ;Laboratorio5.c: 254: RB2 = 0;
  3063   000D76  9481               	bcf	3969,2,c	;volatile
  3064                           
  3065                           ;Laboratorio5.c: 255: } else if (val >= 40) {
  3066   000D78  0012               	return	
  3067   000D7A                     l1825:
  3068   000D7A  5004               	movf	(ColorRGB@val+1)^0,w,c
  3069   000D7C  E104               	bnz	u890
  3070   000D7E  0E28               	movlw	40
  3071   000D80  5C03               	subwf	ColorRGB@val^0,w,c
  3072   000D82  A0D8               	btfss	status,0,c
  3073   000D84  0012               	return	
  3074   000D86                     u890:
  3075                           
  3076                           ;Laboratorio5.c: 256: RB0 = 1;
  3077   000D86  8081               	bsf	3969,0,c	;volatile
  3078                           
  3079                           ;Laboratorio5.c: 257: RB1 = 1;
  3080   000D88  8281               	bsf	3969,1,c	;volatile
  3081                           
  3082                           ;Laboratorio5.c: 258: RB2 = 1;
  3083   000D8A  8481               	bsf	3969,2,c	;volatile
  3084   000D8C  0012               	return	
  3085   000D8E                     __end_of_ColorRGB:
  3086                           	callstack 0
  3087                           
  3088 ;; *************** function _ISR *****************
  3089 ;; Defined at:
  3090 ;;		line 298 in file "Laboratorio5.c"
  3091 ;; Parameters:    Size  Location     Type
  3092 ;;		None
  3093 ;; Auto vars:     Size  Location     Type
  3094 ;;		None
  3095 ;; Return value:  Size  Location     Type
  3096 ;;                  1    wreg      void 
  3097 ;; Registers used:
  3098 ;;		wreg, status,2, status,0, cstack
  3099 ;; Tracked objects:
  3100 ;;		On entry : 0/0
  3101 ;;		On exit  : 0/0
  3102 ;;		Unchanged: 0/0
  3103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3104 ;;      Params:         0       0       0       0       0       0       0       0       0
  3105 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3106 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3107 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3108 ;;Total ram usage:        2 bytes
  3109 ;; Hardware stack levels used: 1
  3110 ;; Hardware stack levels required when called: 1
  3111 ;; This function calls:
  3112 ;;		_Recibir
  3113 ;; This function is called by:
  3114 ;;		Interrupt level 2
  3115 ;; This function uses a non-reentrant model
  3116 ;;
  3117                           
  3118                           	psect	intcode
  3119   000008                     __pintcode:
  3120                           	callstack 0
  3121   000008                     _ISR:
  3122                           	callstack 24
  3123                           
  3124                           ;incstack = 0
  3125   000008  8221               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3126   00000A  EDC7  F006         	call	int_func,f	;refresh shadow registers
  3127                           
  3128                           	psect	intcode_body
  3129   000D8E                     __pintcode_body:
  3130                           	callstack 24
  3131   000D8E                     int_func:
  3132                           	callstack 24
  3133   000D8E  0006               	pop		; remove dummy address from shadow register refresh
  3134                           
  3135                           ;Laboratorio5.c: 299: if(TMR0IF){
  3136   000D90  A4F2               	btfss	4082,2,c	;volatile
  3137   000D92  D00A               	goto	i2l1601
  3138                           
  3139                           ;Laboratorio5.c: 300: TMR0IF=0;
  3140   000D94  94F2               	bcf	4082,2,c	;volatile
  3141                           
  3142                           ;Laboratorio5.c: 301: RE0 = !RE0;
  3143   000D96  B084               	btfsc	3972,0,c	;volatile
  3144   000D98  D002               	goto	i2u54_40
  3145   000D9A  8084               	bsf	3972,0,c	;volatile
  3146   000D9C  D001               	goto	i2u55_45
  3147   000D9E                     i2u54_40:
  3148   000D9E  9084               	bcf	3972,0,c	;volatile
  3149   000DA0                     i2u55_45:
  3150                           
  3151                           ;Laboratorio5.c: 302: TMR0 = 3036;
  3152   000DA0  0E0B               	movlw	11
  3153   000DA2  6ED7               	movwf	215,c	;volatile
  3154   000DA4  0EDC               	movlw	220
  3155   000DA6  6ED6               	movwf	214,c	;volatile
  3156   000DA8                     i2l1601:
  3157                           
  3158                           ;Laboratorio5.c: 304: };Laboratorio5.c: 305: if(RCIF){
  3159   000DA8  BA9E               	btfsc	3998,5,c	;volatile
  3160   000DAA  D01A               	goto	i2l1615
  3161   000DAC  D033               	goto	i2l293
  3162   000DAE                     i2l1605:
  3163                           
  3164                           ;Laboratorio5.c: 308: A=0;
  3165   000DAE  0E00               	movlw	0
  3166   000DB0  6E1C               	movwf	(_A+1)^0,c
  3167   000DB2  0E00               	movlw	0
  3168   000DB4  6E1B               	movwf	_A^0,c
  3169                           
  3170                           ;Laboratorio5.c: 309: B=0;
  3171   000DB6  0E00               	movlw	0
  3172   000DB8  6E1A               	movwf	(_B+1)^0,c
  3173   000DBA  0E00               	movlw	0
  3174   000DBC  D00F               	goto	L6
  3175   000DBE                     i2l1607:
  3176                           
  3177                           ;Laboratorio5.c: 312: A=0;
  3178   000DBE  0E00               	movlw	0
  3179   000DC0  6E1C               	movwf	(_A+1)^0,c
  3180   000DC2  0E00               	movlw	0
  3181   000DC4  D007               	goto	L8
  3182   000DC6                     i2l1609:
  3183                           
  3184                           ;Laboratorio5.c: 316: A=1;
  3185   000DC6  0E00               	movlw	0
  3186   000DC8  6E1C               	movwf	(_A+1)^0,c
  3187   000DCA  0E01               	movlw	1
  3188   000DCC  D7F3               	goto	L7
  3189   000DCE                     i2l1611:
  3190                           
  3191                           ;Laboratorio5.c: 320: A=1;
  3192   000DCE  0E00               	movlw	0
  3193   000DD0  6E1C               	movwf	(_A+1)^0,c
  3194   000DD2  0E01               	movlw	1
  3195   000DD4                     L8:
  3196   000DD4  6E1B               	movwf	_A^0,c
  3197                           
  3198                           ;Laboratorio5.c: 321: B=1;
  3199   000DD6  0E00               	movlw	0
  3200   000DD8  6E1A               	movwf	(_B+1)^0,c
  3201   000DDA  0E01               	movlw	1
  3202   000DDC                     L6:
  3203   000DDC  6E19               	movwf	_B^0,c
  3204                           
  3205                           ;Laboratorio5.c: 322: break;
  3206   000DDE  D00E               	goto	i2l1617
  3207   000DE0                     i2l1615:
  3208   000DE0  EC13  F009         	call	_Recibir	;wreg free
  3209                           
  3210                           ; Switch size 1, requested type "simple"
  3211                           ; Number of cases is 4, Range of values is 67 to 82
  3212                           ; switch strategies available:
  3213                           ; Name         Instructions Cycles
  3214                           ; simple_byte           13     7 (average)
  3215                           ;	Chosen strategy is simple_byte
  3216   000DE4  0A43               	xorlw	67	; case 67
  3217   000DE6  B4D8               	btfsc	status,2,c
  3218   000DE8  D7E2               	goto	i2l1605
  3219   000DEA  0A05               	xorlw	5	; case 70
  3220   000DEC  B4D8               	btfsc	status,2,c
  3221   000DEE  D7EF               	goto	i2l1611
  3222   000DF0  0A0D               	xorlw	13	; case 75
  3223   000DF2  B4D8               	btfsc	status,2,c
  3224   000DF4  D7E4               	goto	i2l1607
  3225   000DF6  0A19               	xorlw	25	; case 82
  3226   000DF8  B4D8               	btfsc	status,2,c
  3227   000DFA  D7E5               	goto	i2l1609
  3228   000DFC                     i2l1617:
  3229                           
  3230                           ;Laboratorio5.c: 326: _delay((unsigned long)((100)*(8000000/4000.0)));
  3231   000DFC  0E02               	movlw	2
  3232   000DFE  6E02               	movwf	(??_ISR+1)^0,c
  3233   000E00  0E04               	movlw	4
  3234   000E02  6E01               	movwf	??_ISR^0,c
  3235   000E04  0EBA               	movlw	186
  3236   000E06                     i2u118_47:
  3237   000E06  2EE8               	decfsz	wreg,f,c
  3238   000E08  D7FE               	bra	i2u118_47
  3239   000E0A  2E01               	decfsz	??_ISR^0,f,c
  3240   000E0C  D7FC               	bra	i2u118_47
  3241   000E0E  2E02               	decfsz	(??_ISR+1)^0,f,c
  3242   000E10  D7FA               	bra	i2u118_47
  3243   000E12  D000               	nop2	
  3244   000E14                     i2l293:
  3245   000E14  9221               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3246   000E16  0011               	retfie		f
  3247   000E18                     __end_of_ISR:
  3248                           	callstack 0
  3249                           
  3250 ;; *************** function _Recibir *****************
  3251 ;; Defined at:
  3252 ;;		line 157 in file "Laboratorio5.c"
  3253 ;; Parameters:    Size  Location     Type
  3254 ;;		None
  3255 ;; Auto vars:     Size  Location     Type
  3256 ;;		None
  3257 ;; Return value:  Size  Location     Type
  3258 ;;                  1    wreg      unsigned char 
  3259 ;; Registers used:
  3260 ;;		wreg, status,2
  3261 ;; Tracked objects:
  3262 ;;		On entry : 0/0
  3263 ;;		On exit  : 0/0
  3264 ;;		Unchanged: 0/0
  3265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3266 ;;      Params:         0       0       0       0       0       0       0       0       0
  3267 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3268 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3269 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3270 ;;Total ram usage:        0 bytes
  3271 ;; Hardware stack levels used: 1
  3272 ;; This function calls:
  3273 ;;		Nothing
  3274 ;; This function is called by:
  3275 ;;		_ISR
  3276 ;; This function uses a non-reentrant model
  3277 ;;
  3278                           
  3279                           	psect	text26
  3280   001226                     __ptext26:
  3281                           	callstack 0
  3282   001226                     _Recibir:
  3283                           	callstack 24
  3284                           
  3285                           ;Laboratorio5.c: 158: while(RCIF==0);
  3286                           
  3287                           ;incstack = 0
  3288   001226  AA9E               	btfss	3998,5,c	;volatile
  3289   001228  D7FE               	goto	__ptext26
  3290                           
  3291                           ;Laboratorio5.c: 159: return RCREG;
  3292   00122A  50AE               	movf	174,w,c	;volatile
  3293   00122C  0012               	return		;funcret
  3294   00122E                     __end_of_Recibir:
  3295                           	callstack 0
  3296                           
  3297                           	psect	rparam
  3298   000000                     
  3299                           	psect	temp
  3300   000021                     btemp:
  3301                           	callstack 0
  3302   000021                     	ds	1
  3303   000000                     int$flags	set	btemp
  3304   000000                     wtemp8	set	btemp+1
  3305   000000                     ttemp5	set	btemp+1
  3306   000000                     ttemp6	set	btemp+4
  3307   000000                     ttemp7	set	btemp+8
  3308                           
  3309                           	psect	idloc
  3310                           
  3311                           ;Config register IDLOC0 @ 0x200000
  3312                           ;	unspecified, using default values
  3313   200000                     	org	2097152
  3314   200000  FF                 	db	255
  3315                           
  3316                           ;Config register IDLOC1 @ 0x200001
  3317                           ;	unspecified, using default values
  3318   200001                     	org	2097153
  3319   200001  FF                 	db	255
  3320                           
  3321                           ;Config register IDLOC2 @ 0x200002
  3322                           ;	unspecified, using default values
  3323   200002                     	org	2097154
  3324   200002  FF                 	db	255
  3325                           
  3326                           ;Config register IDLOC3 @ 0x200003
  3327                           ;	unspecified, using default values
  3328   200003                     	org	2097155
  3329   200003  FF                 	db	255
  3330                           
  3331                           ;Config register IDLOC4 @ 0x200004
  3332                           ;	unspecified, using default values
  3333   200004                     	org	2097156
  3334   200004  FF                 	db	255
  3335                           
  3336                           ;Config register IDLOC5 @ 0x200005
  3337                           ;	unspecified, using default values
  3338   200005                     	org	2097157
  3339   200005  FF                 	db	255
  3340                           
  3341                           ;Config register IDLOC6 @ 0x200006
  3342                           ;	unspecified, using default values
  3343   200006                     	org	2097158
  3344   200006  FF                 	db	255
  3345                           
  3346                           ;Config register IDLOC7 @ 0x200007
  3347                           ;	unspecified, using default values
  3348   200007                     	org	2097159
  3349   200007  FF                 	db	255
  3350                           
  3351                           	psect	config
  3352                           
  3353                           ;Config register CONFIG1L @ 0x300000
  3354                           ;	unspecified, using default values
  3355                           ;	PLL Prescaler Selection bits
  3356                           ;	PLLDIV = 0x0, unprogrammed default
  3357                           ;	System Clock Postscaler Selection bits
  3358                           ;	CPUDIV = 0x0, unprogrammed default
  3359                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3360                           ;	USBDIV = 0x0, unprogrammed default
  3361   300000                     	org	3145728
  3362   300000  00                 	db	0
  3363                           
  3364                           ;Config register CONFIG1H @ 0x300001
  3365                           ;	Oscillator Selection bits
  3366                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  3367                           ;	Fail-Safe Clock Monitor Enable bit
  3368                           ;	FCMEN = 0x0, unprogrammed default
  3369                           ;	Internal/External Oscillator Switchover bit
  3370                           ;	IESO = 0x0, unprogrammed default
  3371   300001                     	org	3145729
  3372   300001  09                 	db	9
  3373                           
  3374                           ;Config register CONFIG2L @ 0x300002
  3375                           ;	unspecified, using default values
  3376                           ;	Power-up Timer Enable bit
  3377                           ;	PWRT = 0x1, unprogrammed default
  3378                           ;	Brown-out Reset Enable bits
  3379                           ;	BOR = 0x3, unprogrammed default
  3380                           ;	Brown-out Reset Voltage bits
  3381                           ;	BORV = 0x3, unprogrammed default
  3382                           ;	USB Voltage Regulator Enable bit
  3383                           ;	VREGEN = 0x0, unprogrammed default
  3384   300002                     	org	3145730
  3385   300002  1F                 	db	31
  3386                           
  3387                           ;Config register CONFIG2H @ 0x300003
  3388                           ;	Watchdog Timer Enable bit
  3389                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3390                           ;	Watchdog Timer Postscale Select bits
  3391                           ;	WDTPS = 0xF, unprogrammed default
  3392   300003                     	org	3145731
  3393   300003  1E                 	db	30
  3394                           
  3395                           ; Padding undefined space
  3396   300004                     	org	3145732
  3397   300004  FF                 	db	255
  3398                           
  3399                           ;Config register CONFIG3H @ 0x300005
  3400                           ;	CCP2 MUX bit
  3401                           ;	CCP2MX = 0x1, unprogrammed default
  3402                           ;	PORTB A/D Enable bit
  3403                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3404                           ;	Low-Power Timer 1 Oscillator Enable bit
  3405                           ;	LPT1OSC = 0x0, unprogrammed default
  3406                           ;	MCLR Pin Enable bit
  3407                           ;	MCLRE = 0x1, unprogrammed default
  3408   300005                     	org	3145733
  3409   300005  81                 	db	129
  3410                           
  3411                           ;Config register CONFIG4L @ 0x300006
  3412                           ;	unspecified, using default values
  3413                           ;	Stack Full/Underflow Reset Enable bit
  3414                           ;	STVREN = 0x1, unprogrammed default
  3415                           ;	Single-Supply ICSP Enable bit
  3416                           ;	LVP = 0x1, unprogrammed default
  3417                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  3418                           ;	ICPRT = 0x0, unprogrammed default
  3419                           ;	Extended Instruction Set Enable bit
  3420                           ;	XINST = 0x0, unprogrammed default
  3421                           ;	Background Debugger Enable bit
  3422                           ;	DEBUG = 0x1, unprogrammed default
  3423   300006                     	org	3145734
  3424   300006  85                 	db	133
  3425                           
  3426                           ; Padding undefined space
  3427   300007                     	org	3145735
  3428   300007  FF                 	db	255
  3429                           
  3430                           ;Config register CONFIG5L @ 0x300008
  3431                           ;	unspecified, using default values
  3432                           ;	Code Protection bit
  3433                           ;	CP0 = 0x1, unprogrammed default
  3434                           ;	Code Protection bit
  3435                           ;	CP1 = 0x1, unprogrammed default
  3436                           ;	Code Protection bit
  3437                           ;	CP2 = 0x1, unprogrammed default
  3438                           ;	Code Protection bit
  3439                           ;	CP3 = 0x1, unprogrammed default
  3440   300008                     	org	3145736
  3441   300008  0F                 	db	15
  3442                           
  3443                           ;Config register CONFIG5H @ 0x300009
  3444                           ;	unspecified, using default values
  3445                           ;	Boot Block Code Protection bit
  3446                           ;	CPB = 0x1, unprogrammed default
  3447                           ;	Data EEPROM Code Protection bit
  3448                           ;	CPD = 0x1, unprogrammed default
  3449   300009                     	org	3145737
  3450   300009  C0                 	db	192
  3451                           
  3452                           ;Config register CONFIG6L @ 0x30000A
  3453                           ;	unspecified, using default values
  3454                           ;	Write Protection bit
  3455                           ;	WRT0 = 0x1, unprogrammed default
  3456                           ;	Write Protection bit
  3457                           ;	WRT1 = 0x1, unprogrammed default
  3458                           ;	Write Protection bit
  3459                           ;	WRT2 = 0x1, unprogrammed default
  3460                           ;	Write Protection bit
  3461                           ;	WRT3 = 0x1, unprogrammed default
  3462   30000A                     	org	3145738
  3463   30000A  0F                 	db	15
  3464                           
  3465                           ;Config register CONFIG6H @ 0x30000B
  3466                           ;	unspecified, using default values
  3467                           ;	Configuration Register Write Protection bit
  3468                           ;	WRTC = 0x1, unprogrammed default
  3469                           ;	Boot Block Write Protection bit
  3470                           ;	WRTB = 0x1, unprogrammed default
  3471                           ;	Data EEPROM Write Protection bit
  3472                           ;	WRTD = 0x1, unprogrammed default
  3473   30000B                     	org	3145739
  3474   30000B  E0                 	db	224
  3475                           
  3476                           ;Config register CONFIG7L @ 0x30000C
  3477                           ;	unspecified, using default values
  3478                           ;	Table Read Protection bit
  3479                           ;	EBTR0 = 0x1, unprogrammed default
  3480                           ;	Table Read Protection bit
  3481                           ;	EBTR1 = 0x1, unprogrammed default
  3482                           ;	Table Read Protection bit
  3483                           ;	EBTR2 = 0x1, unprogrammed default
  3484                           ;	Table Read Protection bit
  3485                           ;	EBTR3 = 0x1, unprogrammed default
  3486   30000C                     	org	3145740
  3487   30000C  0F                 	db	15
  3488                           
  3489                           ;Config register CONFIG7H @ 0x30000D
  3490                           ;	unspecified, using default values
  3491                           ;	Boot Block Table Read Protection bit
  3492                           ;	EBTRB = 0x1, unprogrammed default
  3493   30000D                     	org	3145741
  3494   30000D  40                 	db	64
  3495                           tosu	equ	0xFFF
  3496                           tosh	equ	0xFFE
  3497                           tosl	equ	0xFFD
  3498                           stkptr	equ	0xFFC
  3499                           pclatu	equ	0xFFB
  3500                           pclath	equ	0xFFA
  3501                           pcl	equ	0xFF9
  3502                           tblptru	equ	0xFF8
  3503                           tblptrh	equ	0xFF7
  3504                           tblptrl	equ	0xFF6
  3505                           tablat	equ	0xFF5
  3506                           prodh	equ	0xFF4
  3507                           prodl	equ	0xFF3
  3508                           indf0	equ	0xFEF
  3509                           postinc0	equ	0xFEE
  3510                           postdec0	equ	0xFED
  3511                           preinc0	equ	0xFEC
  3512                           plusw0	equ	0xFEB
  3513                           fsr0h	equ	0xFEA
  3514                           fsr0l	equ	0xFE9
  3515                           wreg	equ	0xFE8
  3516                           indf1	equ	0xFE7
  3517                           postinc1	equ	0xFE6
  3518                           postdec1	equ	0xFE5
  3519                           preinc1	equ	0xFE4
  3520                           plusw1	equ	0xFE3
  3521                           fsr1h	equ	0xFE2
  3522                           fsr1l	equ	0xFE1
  3523                           bsr	equ	0xFE0
  3524                           indf2	equ	0xFDF
  3525                           postinc2	equ	0xFDE
  3526                           postdec2	equ	0xFDD
  3527                           preinc2	equ	0xFDC
  3528                           plusw2	equ	0xFDB
  3529                           fsr2h	equ	0xFDA
  3530                           fsr2l	equ	0xFD9
  3531                           status	equ	0xFD8

Data Sizes:
    Strings     34
    Constant    0
    Data        1
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     24      32
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_4(CODE[5]), STR_3(CODE[6]), STR_2(CODE[10]), STR_1(CODE[13]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_4(CODE[5]), STR_3(CODE[6]), STR_2(CODE[10]), STR_1(CODE[13]), 

    MensajeLCD_Word@a	PTR unsigned char  size(1) Largest target is 13
		 -> STR_4(CODE[5]), STR_3(CODE[6]), STR_2(CODE[10]), STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _main->_TransmitirDatos
    _TransmitirDatos->_MensajeLCD_Word
    _TransmitirDatos->___awdiv
    _MensajeLCD_Word->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _LeerHT11->_LeerByte
    _LeerByte->_LeerBit
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    7352
                                             22 COMRAM     2     2      0
                           _BorraLCD
                           _ColorRGB
                         _Conversion
                      _DireccionaLCD
                       _EscribeLCD_c
                _GuardarDatoEnEEPROM
                      _InicializaLCD
                           _LeerHT11
                    _MensajeLCD_Word
                    _TransmitirDatos
                            ___lbdiv
                            ___lbmod
                   _leerDatoEnEEPROM
 ---------------------------------------------------------------------------------
 (1) _leerDatoEnEEPROM                                     2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TransmitirDatos                                     14    10      4    4752
                                             10 COMRAM    12     8      4
                           _BorraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
                    _MensajeLCD_Word
                         _Transmitir
                            ___awdiv
                            ___lbdiv
                            ___lbmod
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     615
                                              2 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     922
                                              2 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___lbmod                                              4     3      1     387
                                              2 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) ___lbdiv                                              4     3      1     390
                                              2 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Transmitir                                           1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MensajeLCD_Word                                      4     3      1     650
                                              6 COMRAM     4     3      1
                       _EscribeLCD_c
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               3     1      2     166
                                              2 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _EscribeLCD_c                                         1     1      0      90
                                              5 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _DireccionaLCD                                        1     1      0      90
                                              5 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _LeerHT11                                             1     1      0      75
                                              6 COMRAM     1     1      0
                           _LeerByte
 ---------------------------------------------------------------------------------
 (2) _LeerByte                                             3     3      0      75
                                              3 COMRAM     3     3      0
                            _LeerBit
 ---------------------------------------------------------------------------------
 (3) _LeerBit                                              1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     150
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0      75
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _EnviaDato                                            1     1      0      60
                                              4 COMRAM     1     1      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _RetardoLCD                                           2     2      0      15
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GuardarDatoEnEEPROM                                  3     0      3     196
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _Conversion                                           1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ColorRGB                                             2     0      2     384
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  2     2      0       0
                                              0 COMRAM     2     2      0
                            _Recibir
 ---------------------------------------------------------------------------------
 (7) _Recibir                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _ColorRGB
   _Conversion
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _GuardarDatoEnEEPROM
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerHT11
     _LeerByte
       _LeerBit
   _MensajeLCD_Word
     _EscribeLCD_c
     _strlen
   _TransmitirDatos
     _BorraLCD
     _DireccionaLCD
     _EscribeLCD_c
     _MensajeLCD_Word
     _Transmitir
     ___awdiv
     ___lbdiv
     ___lbmod
     ___lwdiv
     ___lwmod
     ___wmul
   ___lbdiv
   ___lbmod
   _leerDatoEnEEPROM

 _ISR (ROOT)
   _Recibir

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      36        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     18      20       1       34.0%
BITBIGSFRhhhl       1A      0       0      21        0.0%
BITBIGSFRlhhl       11      0       0      32        0.0%
BITBIGSFRhlhhh       E      0       0      23        0.0%
BITBIGSFRhhhh        D      0       0      20        0.0%
BITBIGSFRll          D      0       0      34        0.0%
BITBIGSFRhlhlh       8      0       0      25        0.0%
BITBIGSFRhllhl       7      0       0      29        0.0%
BITBIGSFRhlhhl       7      0       0      24        0.0%
BITBIGSFRlhhh        6      0       0      31        0.0%
BITBIGSFRhllhhl      4      0       0      27        0.0%
BITBIGSFRhllll       4      0       0      30        0.0%
BITBIGSFRhllhhl      2      0       0      28        0.0%
BITBIGSFRhllhhh      1      0       0      26        0.0%
BITBIGSFRlhl         1      0       0      33        0.0%
BITBIGSFRhhl         1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      20      35        0.0%
DATA                 0      0      20       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed May 24 18:44:05 2023

                          _A 001B                            _B 0019            Transmitir@BufferT 0003  
                         _GO 007E11                           _RD 007D30                           u50 10B2  
                         _WR 007D31                 ___awdiv@sign 0008                   EnviaDato@a 0005  
        ___wmul@multiplicand 0005                          l202 105E                          l221 10AE  
                        l205 1068                _InicializaLCD 0F96                          l216 108A  
                        l240 0858                          l245 099A                          l273 1176  
                        l267 11F0                          l775 0F4A                          l785 0F8C  
                        _GIE 007F97                          _RB0 007C08                          _RB1 007C09  
                        _RC0 007C10                          _RB2 007C0A                          _RC1 007C11  
                        _RC2 007C12                          _RE0 007C20                          _RC4 007C14  
                        _RD3 007C1B                          u620 0E5E                          u700 0F24  
                        _ISR 0008                          u810 0D06                          u730 0F6E  
                        u660 0FF4                          u830 0D26                          u850 0D46  
                        u770 0CC6                          u930 0C5E                          u940 0C60  
                        u870 0D66                          u790 0CE6                          u950 0C6C  
                        u960 0C6E                          u890 0D86                          u970 0CA2  
                        u997 0ABE                          _Hum 001E             TransmitirDatos@n 0011  
                        wreg 000FE8                         ?_ISR 0001                         l1103 109E  
                       l2011 0C78                         l1061 0EDC                         l2013 0C8C  
                       l1055 0EA0                         l1057 0EB0                         l1065 0EE6  
                       l1059 0ED2                         l1139 1188                         l1149 1214  
                       l1701 0FF0                         l1801 0CFA                         l1625 1112  
                       l1713 100E                         l1627 1114                         l1635 101C  
                       l1813 0D3A                         l1661 0E3C                         l1709 1006  
                       l1741 0F20                         l1807 0D1A                         l1639 1036  
                       l1655 0E2C                         l1727 1104                         l1719 10EC  
                       l1751 0F40                         l1825 0D7A                         l1761 0F6A  
                       l1841 0866                         l1819 0D5A                         l1667 0E52  
                       l1683 0E84                         l1739 0F18                         l1669 0E5A  
                       l1845 087A                         l1687 0E92                         l1679 0E7A  
                       l1767 0F82                         l1759 0F62                         l1855 08D4  
                       l1697 0FEA                         l1849 08A6                         l1857 08FE  
                       l1795 0CDA                         l1789 0CBA                         l1983 0B7C  
                       l1997 0C08                         _CFGS 007D36                         _EEIF 007D0C  
                       STR_1 0801                         STR_2 080E                         STR_3 0818  
                       STR_4 081E                         u1007 0B6A                         u1017 0B8E  
                       u1107 1090                         u1027 0BAA                         u1117 10A0  
                       u1037 0BC6                         u1127 0EA6                         u1047 0BE2  
                       u1137 0EB6                         u1057 0BFC                         u1147 0EC6  
                       u1067 0C12                         u1157 0ED4                         u1077 0C28  
                       u1167 0EDE                         u1087 1054                         _LATD 000F8C  
                       u1177 1208                         u1097 1064                         _RCIF 007CF5  
                       _TMR0 000FD6                         _TRMT 007D61                         _WREN 007D32  
             ??_EscribeLCD_c 0006                         _Temp 001F          _GuardarDatoEnEEPROM 115A  
                       _main 0AB4                         btemp 0021                         prodh 000FF4  
                       prodl 000FF3                         start 000E              __end_of_LeerBit 10B6  
               ___param_bank 000000                        ??_ISR 0001              __end_of_Recibir 122E  
       ?_GuardarDatoEnEEPROM 0003               ?_InicializaLCD 0001                        ?_main 0001  
            __end_of___awdiv 0E9C              __end_of___lbdiv 1012                        _ADRES 000FC3  
                      _EEADR 000FA9                EscribeLCD_c@a 0006              __end_of___lbmod 110C  
                      _EEPGD 007D37                        _T0CON 000FD5              ___awdiv@divisor 0005  
                      _LATC2 007C5A                        _LATE1 007C69                        _LATE2 007C6A  
            __end_of___lwdiv 0F54              __end_of___lwmod 0F96                        i2l293 0E14  
            ___awdiv@counter 0007                        _RCREG 000FAE                        _RCSTA 000FAB  
                      _SPBRG 000FAF                        _USBEN 007B6B                        _TRISA 000F92  
                      _TRISB 000F93                        _TRISC 000F94                        _TRISD 000F95  
                      _TRISE 000F96                        _TXREG 000FAD                        _TXSTA 000FAC  
     GuardarDatoEnEEPROM@dir 0003                        tablat 000FF5                   _Conversion 11E2  
                _HabilitaLCD 1204                        ttemp5 0022                        ttemp6 0025  
                      ttemp7 0029                        status 000FD8                        wtemp8 0022  
            ___lbdiv@divisor 0003              ___lbdiv@counter 0005             __end_of_BorraLCD 11E2  
           __end_of_LeerHT11 1086             __end_of_ColorRGB 0D8E              __initialization 10B6  
           __end_of_LeerByte 11A2                 __end_of_main 0CA6     __end_of_leerDatoEnEEPROM 1204  
      ??_GuardarDatoEnEEPROM 0006                       ??_main 0017                __activetblptr 000002  
                 _TempEEPROM 001D                       _ADCON0 000FC2                       _ADCON1 000FC1  
                     _ADCON2 000FC0                       _EEDATA 000FA8               DireccionaLCD@a 0006  
                     _EECON2 000FA7             ___awdiv@dividend 0003                       i2l1601 0DA8  
                     i2l1611 0DCE                       i2l1605 0DAE                       i2l1607 0DBE  
                     i2l1615 0DE0                       i2l1609 0DC6                       i2l1617 0DFC  
                     _OSCCON 000FD3                       _TMR0IE 007F95                       _TMR0IF 007F92  
                     _TMR0ON 007EAF                       _TRISC2 007CA2                    ??_LeerBit 0003  
      __end_of_DireccionaLCD 11CE                       _UTRDIS 007B7B                   _RetardoLCD 0E9C  
                  ??_Recibir 0001          TransmitirDatos@Ent1 000B          TransmitirDatos@Ent2 000D  
        TransmitirDatos@Simb 0013                       ___wmul 1134                    ??___awdiv 0007  
                  ??___lbdiv 0004                    ??___lbmod 0004                    ??___lwdiv 0007  
                  ??___lwmod 0007              ??_InicializaLCD 0006                       clear_0 10CE  
           ___awdiv@quotient 0009      GuardarDatoEnEEPROM@dato 0005                       isa$std 000001  
       __end_of_EscribeLCD_c 11B8                       _strlen 110C                 __pdataCOMRAM 0020  
               __mediumconst 0000                       tblptrh 000FF7                       tblptrl 000FF6  
                     tblptru 000FF8                   _Transmitir 1212             ___lbdiv@dividend 0004  
                ?_Conversion 0001              ___lbmod@divisor 0003                   __accesstop 0060  
    __end_of__initialization 10D4              ___lbmod@counter 0005                ___rparam_used 000001  
             __pcstackCOMRAM 0001            __end_of_EnviaDato 1226             ___lbdiv@quotient 0006  
                  ?_BorraLCD 0001                    ?_LeerHT11 0001                    ?_ColorRGB 0003  
                  ?_LeerByte 0001                  ?_RetardoLCD 0001                  RetardoLCD@a 0004  
                    ?___wmul 0003                      _BAUDCON 000FB8                      ?_strlen 0003  
                    i2u54_40 0D9E                      i2u55_45 0DA0                   ??_BorraLCD 0006  
                 ??_LeerHT11 0007                   ??_ColorRGB 0005                  ?_Transmitir 0001  
          ??_MensajeLCD_Word 0008                   ??_LeerByte 0004                 ?_HabilitaLCD 0001  
                    _LeerBit 1086                      _Recibir 1226                      __Hparam 0000  
                    __Lparam 0000         TransmitirDatos@TempC 0015                      ___awdiv 0E18  
                    ___lbdiv 0FD8                      ___lbmod 10E2                      ___lwdiv 0F02  
                    ___lwmod 0F54            ?_leerDatoEnEEPROM 0003                 __psmallconst 0800  
                    __pcinit 10B6                      __ramtop 0800                      __ptext0 0AB4  
                    __ptext1 11F6                      __ptext2 0824                      __ptext3 1134  
                    __ptext4 0F54                      __ptext5 0F02                      __ptext6 10E2  
         ??_leerDatoEnEEPROM 0005                      __ptext7 0FD8                      __ptext8 0E18  
                    __ptext9 1212               __pintcode_body 0D8E         end_of_initialization 10D4  
            Conversion@canal 0003                __Lmediumconst 0000                      int_func 0D8E  
               _EscribeLCD_c 11A2  __end_of_GuardarDatoEnEEPROM 1180            ??_TransmitirDatos 000F  
                    postinc0 000FEE                      strlen@s 0003             ___lbmod@dividend 0004  
                  LeerByte@i 0006                 ??_Conversion 0003                  ___lbmod@rem 0006  
             __end_of___wmul 115A                __pidataCOMRAM 122E        __end_of_InicializaLCD 0FD8  
         __end_of_Conversion 11F6                    _EnviaDato 121E               __end_of_strlen 1134  
        start_initialization 10B6                  __end_of_ISR 0E18                 ??_RetardoLCD 0003  
                   ??___wmul 0007              _MensajeLCD_Word 1012                     ??_strlen 0005  
                 ?_EnviaDato 0001                  __pbssCOMRAM 0019           __end_of_RetardoLCD 0F02  
           MensajeLCD_Word@a 0007             MensajeLCD_Word@i 0009                 ??_Transmitir 0003  
                   ?_LeerBit 0001                _DireccionaLCD 11B8                     ?_Recibir 0001  
           ___lwdiv@dividend 0003                    __pintcode 0008                     ?___awdiv 0003  
                   ?___lbdiv 0003                     ?___lbmod 0003                     ?___lwdiv 0003  
                   ?___lwmod 0003           __end_of_Transmitir 121E                  __smallconst 0800  
           ___lwdiv@quotient 0007              _TransmitirDatos 0824               ___wmul@product 0007  
             ?_DireccionaLCD 0001                     i2u118_47 0E06      __end_of_MensajeLCD_Word 104C  
          ___wmul@multiplier 0003                  ??_EnviaDato 0005                     _BorraLCD 11CE  
                   _LeerHT11 104C                     _ColorRGB 0CA6                     _LeerByte 1180  
        leerDatoEnEEPROM@dir 0003                     __Hrparam 0000                     __Lrparam 0000  
    __end_of_TransmitirDatos 0AB4              ___lwdiv@divisor 0005              ___lwdiv@counter 0009  
                   __ptext10 1012                     __ptext11 110C                     __ptext20 0E9C  
                   __ptext12 11A2                     __ptext21 1204                     __ptext13 11B8  
                   __ptext22 115A                     __ptext14 104C                     __ptext23 11E2  
                   __ptext15 1180                     __ptext24 0CA6                     __ptext16 1086  
                   __ptext17 0F96                     __ptext26 1226                     __ptext18 11CE  
                   __ptext19 121E              ??_DireccionaLCD 0006                     _interfaz 0020  
                   isa$xinst 000000             ?_MensajeLCD_Word 0007                     int$flags 0021  
           _leerDatoEnEEPROM 11F6                     intlevel2 0000                ??_HabilitaLCD 0003  
           ___lwmod@dividend 0003                  ColorRGB@val 0003              ___lwmod@divisor 0005  
                   strlen@cp 0005              ___lwmod@counter 0007             ?_TransmitirDatos 000B  
              ?_EscribeLCD_c 0001                   LeerBit@res 0003          __end_of_HabilitaLCD 1212  
                LeerByte@res 0005  
