

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed May 24 15:15:53 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    41                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    43   000000                     
    44                           ; Version 2.40
    45                           ; Generated 04/07/2022 GMT
    46                           ; 
    47                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution. Publication is not required when
    61                           ;        this file is used in an embedded application.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F4550 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79   000000                     
    80                           	psect	idataCOMRAM
    81   001208                     __pidataCOMRAM:
    82                           	callstack 0
    83                           
    84                           ;initializer for _interfaz
    85   001208  08                 	db	8
    86   000000                     _EECON2	set	4007
    87   000000                     _RCREG	set	4014
    88   000000                     _TXREG	set	4013
    89   000000                     _TRISC	set	3988
    90   000000                     _TRISD	set	3989
    91   000000                     _SPBRG	set	4015
    92   000000                     _BAUDCON	set	4024
    93   000000                     _RC0	set	31760
    94   000000                     _RD	set	32048
    95   000000                     _WR	set	32049
    96   000000                     _WREN	set	32050
    97   000000                     _CFGS	set	32054
    98   000000                     _GO	set	32273
    99   000000                     _LATB5	set	31829
   100   000000                     _LATB6	set	31830
   101   000000                     _TRMT	set	32097
   102   000000                     _RC2	set	31762
   103   000000                     _TRISC2	set	31906
   104   000000                     _RC5	set	31765
   105   000000                     _RC4	set	31764
   106   000000                     _TMR0ON	set	32431
   107   000000                     _GIE	set	32663
   108   000000                     _TMR0IE	set	32661
   109   000000                     _LATE2	set	31850
   110   000000                     _LATD	set	3980
   111   000000                     _USBEN	set	31595
   112   000000                     _TRISA	set	3986
   113   000000                     _TRISB	set	3987
   114   000000                     _RCSTA	set	4011
   115   000000                     _TXSTA	set	4012
   116   000000                     _OSCCON	set	4051
   117   000000                     _LATE0	set	31848
   118   000000                     _T0CON	set	4053
   119   000000                     _RBPU	set	32655
   120   000000                     _ADCON2	set	4032
   121   000000                     _ADCON1	set	4033
   122   000000                     _ADCON0	set	4034
   123   000000                     _ADRES	set	4035
   124   000000                     _TRISE	set	3990
   125   000000                     _RCIF	set	31989
   126   000000                     _UTRDIS	set	31611
   127   000000                     _RB0	set	31752
   128   000000                     _RC1	set	31761
   129   000000                     _LATC2	set	31834
   130   000000                     _TMR0IF	set	32658
   131   000000                     _TMR0	set	4054
   132   000000                     _LATB7	set	31831
   133   000000                     _EEDATA	set	4008
   134   000000                     _EEADR	set	4009
   135   000000                     _EEIF	set	32012
   136   000000                     _EEPGD	set	32055
   137                           
   138                           	psect	smallconst
   139   000800                     __psmallconst:
   140                           	callstack 0
   141   000800  00                 	db	0
   142   000801                     STR_1:
   143   000801  55                 	db	85	;'U'
   144   000802  6C                 	db	108	;'l'
   145   000803  74                 	db	116	;'t'
   146   000804  69                 	db	105	;'i'
   147   000805  6D                 	db	109	;'m'
   148   000806  61                 	db	97	;'a'
   149   000807  20                 	db	32
   150   000808  74                 	db	116	;'t'
   151   000809  65                 	db	101	;'e'
   152   00080A  6D                 	db	109	;'m'
   153   00080B  70                 	db	112	;'p'
   154   00080C  3A                 	db	58	;':'
   155   00080D  00                 	db	0
   156   00080E                     STR_2:
   157   00080E  49                 	db	73	;'I'
   158   00080F  6E                 	db	110	;'n'
   159   000810  69                 	db	105	;'i'
   160   000811  63                 	db	99	;'c'
   161   000812  69                 	db	105	;'i'
   162   000813  61                 	db	97	;'a'
   163   000814  6E                 	db	110	;'n'
   164   000815  64                 	db	100	;'d'
   165   000816  6F                 	db	111	;'o'
   166   000817  00                 	db	0
   167   000818                     STR_3:
   168   000818  54                 	db	84	;'T'
   169   000819  65                 	db	101	;'e'
   170   00081A  6D                 	db	109	;'m'
   171   00081B  70                 	db	112	;'p'
   172   00081C  3A                 	db	58	;':'
   173   00081D  00                 	db	0
   174   00081E                     STR_4:
   175   00081E  48                 	db	72	;'H'
   176   00081F  75                 	db	117	;'u'
   177   000820  6D                 	db	109	;'m'
   178   000821  3A                 	db	58	;':'
   179   000822  00                 	db	0
   180   000823  00                 	db	0	; dummy byte at the end
   181   000000                     
   182                           ; #config settings
   183                           
   184                           	psect	cinit
   185   0010B8                     __pcinit:
   186                           	callstack 0
   187   0010B8                     start_initialization:
   188                           	callstack 0
   189   0010B8                     __initialization:
   190                           	callstack 0
   191                           
   192                           ; Initialize objects allocated to COMRAM (1 bytes)
   193                           ; load TBLPTR registers with __pidataCOMRAM
   194   0010B8  0E08               	movlw	low __pidataCOMRAM
   195   0010BA  6EF6               	movwf	tblptrl,c
   196   0010BC  0E12               	movlw	high __pidataCOMRAM
   197   0010BE  6EF7               	movwf	tblptrh,c
   198   0010C0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   199   0010C2  6EF8               	movwf	tblptru,c
   200   0010C4  0009               	tblrd		*+	;fetch initializer
   201   0010C6  CFF5 F021          	movff	tablat,__pdataCOMRAM
   202                           
   203                           ; Clear objects allocated to COMRAM (8 bytes)
   204   0010CA  EE00  F019         	lfsr	0,__pbssCOMRAM
   205   0010CE  0E08               	movlw	8
   206   0010D0                     clear_0:
   207   0010D0  6AEE               	clrf	postinc0,c
   208   0010D2  06E8               	decf	wreg,f,c
   209   0010D4  E1FD               	bnz	clear_0
   210   0010D6                     end_of_initialization:
   211                           	callstack 0
   212   0010D6                     __end_of__initialization:
   213                           	callstack 0
   214   0010D6  9022               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   215   0010D8  9222               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   216   0010DA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   217   0010DC  6EF8               	movwf	tblptru,c
   218   0010DE  0100               	movlb	0
   219   0010E0  EF5A  F005         	goto	_main	;jump to C main() function
   220                           
   221                           	psect	bssCOMRAM
   222   000019                     __pbssCOMRAM:
   223                           	callstack 0
   224   000019                     _B:
   225                           	callstack 0
   226   000019                     	ds	2
   227   00001B                     _A:
   228                           	callstack 0
   229   00001B                     	ds	2
   230   00001D                     _TempEEPROM:
   231                           	callstack 0
   232   00001D                     	ds	1
   233   00001E                     _Che:
   234                           	callstack 0
   235   00001E                     	ds	1
   236   00001F                     _Hum:
   237                           	callstack 0
   238   00001F                     	ds	1
   239   000020                     _Temp:
   240                           	callstack 0
   241   000020                     	ds	1
   242                           
   243                           	psect	dataCOMRAM
   244   000021                     __pdataCOMRAM:
   245                           	callstack 0
   246   000021                     _interfaz:
   247                           	callstack 0
   248   000021                     	ds	1
   249                           
   250                           	psect	cstackCOMRAM
   251   000001                     __pcstackCOMRAM:
   252                           	callstack 0
   253   000001                     ??_ISR:
   254   000001                     
   255                           ; 2 bytes @ 0x0
   256   000001                     	ds	2
   257   000003                     ??_RetardoLCD:
   258   000003                     ?___wmul:
   259                           	callstack 0
   260   000003                     ?___awdiv:
   261                           	callstack 0
   262   000003                     ?___lwdiv:
   263                           	callstack 0
   264   000003                     ?___lwmod:
   265                           	callstack 0
   266   000003                     LeerBit@res:
   267                           	callstack 0
   268   000003                     Transmitir@BufferT:
   269                           	callstack 0
   270   000003                     Conversion@canal:
   271                           	callstack 0
   272   000003                     ___lbdiv@divisor:
   273                           	callstack 0
   274   000003                     ___lbmod@divisor:
   275                           	callstack 0
   276   000003                     ColorRGB@val:
   277                           	callstack 0
   278   000003                     GuardarDatoEnEEPROM@dir:
   279                           	callstack 0
   280   000003                     leerDatoEnEEPROM@dir:
   281                           	callstack 0
   282   000003                     ___wmul@multiplier:
   283                           	callstack 0
   284   000003                     ___awdiv@dividend:
   285                           	callstack 0
   286   000003                     ___lwdiv@dividend:
   287                           	callstack 0
   288   000003                     ___lwmod@dividend:
   289                           	callstack 0
   290                           
   291                           ; 2 bytes @ 0x2
   292   000003                     	ds	1
   293   000004                     ??_LeerByte:
   294   000004                     RetardoLCD@a:
   295                           	callstack 0
   296   000004                     ___lbdiv@dividend:
   297                           	callstack 0
   298   000004                     ___lbmod@dividend:
   299                           	callstack 0
   300                           
   301                           ; 1 bytes @ 0x3
   302   000004                     	ds	1
   303   000005                     EnviaDato@a:
   304                           	callstack 0
   305   000005                     LeerByte@res:
   306                           	callstack 0
   307   000005                     GuardarDatoEnEEPROM@dato:
   308                           	callstack 0
   309   000005                     ___lbdiv@counter:
   310                           	callstack 0
   311   000005                     ___lbmod@counter:
   312                           	callstack 0
   313   000005                     ___wmul@multiplicand:
   314                           	callstack 0
   315   000005                     ___awdiv@divisor:
   316                           	callstack 0
   317   000005                     ___lwdiv@divisor:
   318                           	callstack 0
   319   000005                     ___lwmod@divisor:
   320                           	callstack 0
   321                           
   322                           ; 2 bytes @ 0x4
   323   000005                     	ds	1
   324   000006                     EscribeLCD_c@a:
   325                           	callstack 0
   326   000006                     DireccionaLCD@a:
   327                           	callstack 0
   328   000006                     LeerByte@i:
   329                           	callstack 0
   330   000006                     ___lbdiv@quotient:
   331                           	callstack 0
   332   000006                     ___lbmod@rem:
   333                           	callstack 0
   334                           
   335                           ; 1 bytes @ 0x5
   336   000006                     	ds	1
   337   000007                     ??_LeerHT11:
   338   000007                     MensajeLCD_Word@a:
   339                           	callstack 0
   340   000007                     ___awdiv@counter:
   341                           	callstack 0
   342   000007                     ___lwmod@counter:
   343                           	callstack 0
   344   000007                     ___wmul@product:
   345                           	callstack 0
   346   000007                     ___lwdiv@quotient:
   347                           	callstack 0
   348                           
   349                           ; 2 bytes @ 0x6
   350   000007                     	ds	1
   351   000008                     ??_MensajeLCD_Word:
   352   000008                     ___awdiv@sign:
   353                           	callstack 0
   354                           
   355                           ; 1 bytes @ 0x7
   356   000008                     	ds	1
   357   000009                     ___lwdiv@counter:
   358                           	callstack 0
   359   000009                     MensajeLCD_Word@i:
   360                           	callstack 0
   361   000009                     ___awdiv@quotient:
   362                           	callstack 0
   363                           
   364                           ; 2 bytes @ 0x8
   365   000009                     	ds	2
   366   00000B                     TransmitirDatos@Ent1:
   367                           	callstack 0
   368                           
   369                           ; 2 bytes @ 0xA
   370   00000B                     	ds	2
   371   00000D                     TransmitirDatos@Ent2:
   372                           	callstack 0
   373                           
   374                           ; 2 bytes @ 0xC
   375   00000D                     	ds	2
   376   00000F                     ??_TransmitirDatos:
   377                           
   378                           ; 1 bytes @ 0xE
   379   00000F                     	ds	2
   380   000011                     TransmitirDatos@n:
   381                           	callstack 0
   382                           
   383                           ; 2 bytes @ 0x10
   384   000011                     	ds	2
   385   000013                     TransmitirDatos@Simb:
   386                           	callstack 0
   387                           
   388                           ; 2 bytes @ 0x12
   389   000013                     	ds	2
   390   000015                     TransmitirDatos@TempC:
   391                           	callstack 0
   392                           
   393                           ; 2 bytes @ 0x14
   394   000015                     	ds	2
   395   000017                     ??_main:
   396                           
   397                           ; 1 bytes @ 0x16
   398   000017                     	ds	2
   399                           
   400 ;;
   401 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   402 ;;
   403 ;; *************** function _main *****************
   404 ;; Defined at:
   405 ;;		line 37 in file "Laboratorio5.c"
   406 ;; Parameters:    Size  Location     Type
   407 ;;		None
   408 ;; Auto vars:     Size  Location     Type
   409 ;;		None
   410 ;; Return value:  Size  Location     Type
   411 ;;                  1    wreg      void 
   412 ;; Registers used:
   413 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   414 ;; Tracked objects:
   415 ;;		On entry : 0/0
   416 ;;		On exit  : 0/0
   417 ;;		Unchanged: 0/0
   418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   419 ;;      Params:         0       0       0       0       0       0       0       0       0
   420 ;;      Locals:         0       0       0       0       0       0       0       0       0
   421 ;;      Temps:          2       0       0       0       0       0       0       0       0
   422 ;;      Totals:         2       0       0       0       0       0       0       0       0
   423 ;;Total ram usage:        2 bytes
   424 ;; Hardware stack levels required when called: 7
   425 ;; This function calls:
   426 ;;		_BorraLCD
   427 ;;		_ColorRGB
   428 ;;		_Conversion
   429 ;;		_DireccionaLCD
   430 ;;		_EscribeLCD_c
   431 ;;		_GuardarDatoEnEEPROM
   432 ;;		_InicializaLCD
   433 ;;		_LeerHT11
   434 ;;		_MensajeLCD_Word
   435 ;;		_TransmitirDatos
   436 ;;		___lbdiv
   437 ;;		___lbmod
   438 ;;		_leerDatoEnEEPROM
   439 ;; This function is called by:
   440 ;;		Startup code after reset
   441 ;; This function uses a non-reentrant model
   442 ;;
   443                           
   444                           	psect	text0
   445   000AB4                     __ptext0:
   446                           	callstack 0
   447   000AB4                     _main:
   448                           	callstack 24
   449                           
   450                           ;Laboratorio5.c: 40: OSCCON = 0b01110000;
   451                           
   452                           ;incstack = 0
   453   000AB4  0E70               	movlw	112
   454   000AB6  6ED3               	movwf	211,c	;volatile
   455                           
   456                           ;Laboratorio5.c: 41: _delay((unsigned long)((1)*(8000000/4000.0)));
   457   000AB8  0E03               	movlw	3
   458   000ABA  6E17               	movwf	??_main^0,c
   459   000ABC  0E98               	movlw	152
   460   000ABE                     u997:
   461   000ABE  2EE8               	decfsz	wreg,f,c
   462   000AC0  D7FE               	bra	u997
   463   000AC2  2E17               	decfsz	??_main^0,f,c
   464   000AC4  D7FC               	bra	u997
   465                           
   466                           ;Laboratorio5.c: 43: TXSTA = 0b00100000;
   467   000AC6  0E20               	movlw	32
   468   000AC8  6EAC               	movwf	172,c	;volatile
   469                           
   470                           ;Laboratorio5.c: 44: RCSTA = 0b10010000;
   471   000ACA  0E90               	movlw	144
   472   000ACC  6EAB               	movwf	171,c	;volatile
   473                           
   474                           ;Laboratorio5.c: 45: BAUDCON = 0b00000000;
   475   000ACE  0E00               	movlw	0
   476   000AD0  6EB8               	movwf	184,c	;volatile
   477                           
   478                           ;Laboratorio5.c: 47: SPBRG = 12;
   479   000AD2  0E0C               	movlw	12
   480   000AD4  6EAF               	movwf	175,c	;volatile
   481                           
   482                           ;Laboratorio5.c: 49: ADCON0 = 0b00000001;
   483   000AD6  0E01               	movlw	1
   484   000AD8  6EC2               	movwf	194,c	;volatile
   485                           
   486                           ;Laboratorio5.c: 50: ADCON1 = 13;
   487   000ADA  0E0D               	movlw	13
   488   000ADC  6EC1               	movwf	193,c	;volatile
   489                           
   490                           ;Laboratorio5.c: 51: ADCON2 = 0b10001000;
   491   000ADE  0E88               	movlw	136
   492   000AE0  6EC0               	movwf	192,c	;volatile
   493                           
   494                           ;Laboratorio5.c: 54: TRISB = 0;
   495   000AE2  0E00               	movlw	0
   496   000AE4  6E93               	movwf	147,c	;volatile
   497                           
   498                           ;Laboratorio5.c: 55: TRISD = 0;
   499   000AE6  0E00               	movlw	0
   500   000AE8  6E95               	movwf	149,c	;volatile
   501                           
   502                           ;Laboratorio5.c: 56: TRISA = 0b00000001;
   503   000AEA  0E01               	movlw	1
   504   000AEC  6E92               	movwf	146,c	;volatile
   505                           
   506                           ;Laboratorio5.c: 57: TRISE=0;
   507   000AEE  0E00               	movlw	0
   508   000AF0  6E96               	movwf	150,c	;volatile
   509                           
   510                           ;Laboratorio5.c: 58: USBEN = 0;
   511   000AF2  966D               	bcf	3949,3,c	;volatile
   512                           
   513                           ;Laboratorio5.c: 59: UTRDIS = 1;
   514   000AF4  866F               	bsf	3951,3,c	;volatile
   515                           
   516                           ;Laboratorio5.c: 60: TRISC = 0b11110110;
   517   000AF6  0EF6               	movlw	246
   518   000AF8  6E94               	movwf	148,c	;volatile
   519                           
   520                           ;Laboratorio5.c: 61: RBPU = 0;
   521   000AFA  9EF1               	bcf	4081,7,c	;volatile
   522                           
   523                           ;Laboratorio5.c: 62: LATC2 = 0;
   524   000AFC  948B               	bcf	3979,2,c	;volatile
   525                           
   526                           ;Laboratorio5.c: 63: TempEEPROM = leerDatoEnEEPROM(0);
   527   000AFE  0E00               	movlw	0
   528   000B00  6E04               	movwf	(leerDatoEnEEPROM@dir+1)^0,c
   529   000B02  0E00               	movlw	0
   530   000B04  6E03               	movwf	leerDatoEnEEPROM@dir^0,c
   531   000B06  ECE8  F008         	call	_leerDatoEnEEPROM	;wreg free
   532   000B0A  6E1D               	movwf	_TempEEPROM^0,c
   533                           
   534                           ;Laboratorio5.c: 66: InicializaLCD();
   535   000B0C  ECE8  F007         	call	_InicializaLCD	;wreg free
   536                           
   537                           ;Laboratorio5.c: 69: T0CON=0b10000011;
   538   000B10  0E83               	movlw	131
   539   000B12  6ED5               	movwf	213,c	;volatile
   540                           
   541                           ;Laboratorio5.c: 70: TMR0IF=0;
   542   000B14  94F2               	bcf	4082,2,c	;volatile
   543                           
   544                           ;Laboratorio5.c: 71: TMR0=3036;
   545   000B16  0E0B               	movlw	11
   546   000B18  6ED7               	movwf	215,c	;volatile
   547   000B1A  0EDC               	movlw	220
   548   000B1C  6ED6               	movwf	214,c	;volatile
   549                           
   550                           ;Laboratorio5.c: 72: TMR0IE=1;
   551   000B1E  8AF2               	bsf	4082,5,c	;volatile
   552                           
   553                           ;Laboratorio5.c: 73: GIE=1;
   554   000B20  8EF2               	bsf	4082,7,c	;volatile
   555                           
   556                           ;Laboratorio5.c: 74: TMR0ON=1;
   557   000B22  8ED5               	bsf	4053,7,c	;volatile
   558                           
   559                           ;Laboratorio5.c: 77: BorraLCD();
   560   000B24  ECD4  F008         	call	_BorraLCD	;wreg free
   561                           
   562                           ;Laboratorio5.c: 79: if (TempEEPROM != 0xFF) {
   563   000B28  281D               	incf	_TempEEPROM^0,w,c
   564   000B2A  B4D8               	btfsc	status,2,c
   565   000B2C  D028               	goto	l1988
   566                           
   567                           ;Laboratorio5.c: 80: MensajeLCD_Word("Ultima temp:");
   568   000B2E  0E01               	movlw	low STR_1
   569   000B30  6E07               	movwf	MensajeLCD_Word@a^0,c
   570   000B32  ECA0  F007         	call	_MensajeLCD_Word	;wreg free
   571                           
   572                           ;Laboratorio5.c: 81: DireccionaLCD(192);
   573   000B36  0EC0               	movlw	192
   574   000B38  ECC9  F008         	call	_DireccionaLCD
   575                           
   576                           ;Laboratorio5.c: 82: EscribeLCD_c(TempEEPROM / 10 + 48);
   577   000B3C  0E0A               	movlw	10
   578   000B3E  6E03               	movwf	___lbdiv@divisor^0,c
   579   000B40  501D               	movf	_TempEEPROM^0,w,c
   580   000B42  EC27  F008         	call	___lbdiv
   581   000B46  0F30               	addlw	48
   582   000B48  ECBE  F008         	call	_EscribeLCD_c
   583                           
   584                           ;Laboratorio5.c: 83: EscribeLCD_c(TempEEPROM % 10 + 48);
   585   000B4C  0E0A               	movlw	10
   586   000B4E  6E03               	movwf	___lbmod@divisor^0,c
   587   000B50  501D               	movf	_TempEEPROM^0,w,c
   588   000B52  EC72  F008         	call	___lbmod
   589   000B56  0F30               	addlw	48
   590   000B58  ECBE  F008         	call	_EscribeLCD_c
   591                           
   592                           ;Laboratorio5.c: 84: EscribeLCD_c('C');
   593   000B5C  0E43               	movlw	67
   594   000B5E  ECBE  F008         	call	_EscribeLCD_c
   595                           
   596                           ;Laboratorio5.c: 85: _delay((unsigned long)((2000)*(8000000/4000.0)));
   597   000B62  0E15               	movlw	21
   598   000B64  6E18               	movwf	(??_main+1)^0,c
   599   000B66  0E4B               	movlw	75
   600   000B68  6E17               	movwf	??_main^0,c
   601   000B6A  0EBE               	movlw	190
   602   000B6C                     u1007:
   603   000B6C  2EE8               	decfsz	wreg,f,c
   604   000B6E  D7FE               	bra	u1007
   605   000B70  2E17               	decfsz	??_main^0,f,c
   606   000B72  D7FC               	bra	u1007
   607   000B74  2E18               	decfsz	(??_main+1)^0,f,c
   608   000B76  D7FA               	bra	u1007
   609   000B78  D000               	nop2	
   610                           
   611                           ;Laboratorio5.c: 86: BorraLCD();
   612   000B7A  ECD4  F008         	call	_BorraLCD	;wreg free
   613   000B7E                     l1988:
   614                           
   615                           ;Laboratorio5.c: 87: };Laboratorio5.c: 89: MensajeLCD_Word("Iniciando");
   616   000B7E  0E0E               	movlw	low STR_2
   617   000B80  6E07               	movwf	MensajeLCD_Word@a^0,c
   618   000B82  ECA0  F007         	call	_MensajeLCD_Word	;wreg free
   619                           
   620                           ;Laboratorio5.c: 90: _delay((unsigned long)((500)*(8000000/4000.0)));
   621   000B86  0E06               	movlw	6
   622   000B88  6E18               	movwf	(??_main+1)^0,c
   623   000B8A  0E13               	movlw	19
   624   000B8C  6E17               	movwf	??_main^0,c
   625   000B8E  0EAE               	movlw	174
   626   000B90                     u1017:
   627   000B90  2EE8               	decfsz	wreg,f,c
   628   000B92  D7FE               	bra	u1017
   629   000B94  2E17               	decfsz	??_main^0,f,c
   630   000B96  D7FC               	bra	u1017
   631   000B98  2E18               	decfsz	(??_main+1)^0,f,c
   632   000B9A  D7FA               	bra	u1017
   633                           
   634                           ;Laboratorio5.c: 91: EscribeLCD_c(46);
   635   000B9C  0E2E               	movlw	46
   636   000B9E  ECBE  F008         	call	_EscribeLCD_c
   637                           
   638                           ;Laboratorio5.c: 92: _delay((unsigned long)((500)*(8000000/4000.0)));
   639   000BA2  0E06               	movlw	6
   640   000BA4  6E18               	movwf	(??_main+1)^0,c
   641   000BA6  0E13               	movlw	19
   642   000BA8  6E17               	movwf	??_main^0,c
   643   000BAA  0EAE               	movlw	174
   644   000BAC                     u1027:
   645   000BAC  2EE8               	decfsz	wreg,f,c
   646   000BAE  D7FE               	bra	u1027
   647   000BB0  2E17               	decfsz	??_main^0,f,c
   648   000BB2  D7FC               	bra	u1027
   649   000BB4  2E18               	decfsz	(??_main+1)^0,f,c
   650   000BB6  D7FA               	bra	u1027
   651                           
   652                           ;Laboratorio5.c: 93: EscribeLCD_c(46);
   653   000BB8  0E2E               	movlw	46
   654   000BBA  ECBE  F008         	call	_EscribeLCD_c
   655                           
   656                           ;Laboratorio5.c: 94: _delay((unsigned long)((500)*(8000000/4000.0)));
   657   000BBE  0E06               	movlw	6
   658   000BC0  6E18               	movwf	(??_main+1)^0,c
   659   000BC2  0E13               	movlw	19
   660   000BC4  6E17               	movwf	??_main^0,c
   661   000BC6  0EAE               	movlw	174
   662   000BC8                     u1037:
   663   000BC8  2EE8               	decfsz	wreg,f,c
   664   000BCA  D7FE               	bra	u1037
   665   000BCC  2E17               	decfsz	??_main^0,f,c
   666   000BCE  D7FC               	bra	u1037
   667   000BD0  2E18               	decfsz	(??_main+1)^0,f,c
   668   000BD2  D7FA               	bra	u1037
   669                           
   670                           ;Laboratorio5.c: 95: EscribeLCD_c(46);
   671   000BD4  0E2E               	movlw	46
   672   000BD6  ECBE  F008         	call	_EscribeLCD_c
   673                           
   674                           ;Laboratorio5.c: 96: _delay((unsigned long)((500)*(8000000/4000.0)));
   675   000BDA  0E06               	movlw	6
   676   000BDC  6E18               	movwf	(??_main+1)^0,c
   677   000BDE  0E13               	movlw	19
   678   000BE0  6E17               	movwf	??_main^0,c
   679   000BE2  0EAE               	movlw	174
   680   000BE4                     u1047:
   681   000BE4  2EE8               	decfsz	wreg,f,c
   682   000BE6  D7FE               	bra	u1047
   683   000BE8  2E17               	decfsz	??_main^0,f,c
   684   000BEA  D7FC               	bra	u1047
   685   000BEC  2E18               	decfsz	(??_main+1)^0,f,c
   686   000BEE  D7FA               	bra	u1047
   687                           
   688                           ;Laboratorio5.c: 97: BorraLCD();
   689   000BF0  ECD4  F008         	call	_BorraLCD	;wreg free
   690   000BF4                     l2000:
   691                           
   692                           ;Laboratorio5.c: 101: _delay((unsigned long)((500)*(8000000/4000.0)));
   693   000BF4  0E06               	movlw	6
   694   000BF6  6E18               	movwf	(??_main+1)^0,c
   695   000BF8  0E13               	movlw	19
   696   000BFA  6E17               	movwf	??_main^0,c
   697   000BFC  0EAE               	movlw	174
   698   000BFE                     u1057:
   699   000BFE  2EE8               	decfsz	wreg,f,c
   700   000C00  D7FE               	bra	u1057
   701   000C02  2E17               	decfsz	??_main^0,f,c
   702   000C04  D7FC               	bra	u1057
   703   000C06  2E18               	decfsz	(??_main+1)^0,f,c
   704   000C08  D7FA               	bra	u1057
   705                           
   706                           ;Laboratorio5.c: 103: _delay((unsigned long)((500)*(8000000/4000.0)));
   707   000C0A  0E06               	movlw	6
   708   000C0C  6E18               	movwf	(??_main+1)^0,c
   709   000C0E  0E13               	movlw	19
   710   000C10  6E17               	movwf	??_main^0,c
   711   000C12  0EAE               	movlw	174
   712   000C14                     u1067:
   713   000C14  2EE8               	decfsz	wreg,f,c
   714   000C16  D7FE               	bra	u1067
   715   000C18  2E17               	decfsz	??_main^0,f,c
   716   000C1A  D7FC               	bra	u1067
   717   000C1C  2E18               	decfsz	(??_main+1)^0,f,c
   718   000C1E  D7FA               	bra	u1067
   719                           
   720                           ;Laboratorio5.c: 105: LeerHT11();
   721   000C20  EC09  F008         	call	_LeerHT11	;wreg free
   722                           
   723                           ;Laboratorio5.c: 107: GuardarDatoEnEEPROM(0, Temp);
   724   000C24  0E00               	movlw	0
   725   000C26  6E04               	movwf	(GuardarDatoEnEEPROM@dir+1)^0,c
   726   000C28  0E00               	movlw	0
   727   000C2A  6E03               	movwf	GuardarDatoEnEEPROM@dir^0,c
   728   000C2C  C020  F005         	movff	_Temp,GuardarDatoEnEEPROM@dato
   729   000C30  EC9A  F008         	call	_GuardarDatoEnEEPROM	;wreg free
   730                           
   731                           ;Laboratorio5.c: 108: ColorRGB(Temp);
   732   000C34  C020  F003         	movff	_Temp,ColorRGB@val
   733   000C38  6A04               	clrf	(ColorRGB@val+1)^0,c
   734   000C3A  EC49  F006         	call	_ColorRGB	;wreg free
   735                           
   736                           ;Laboratorio5.c: 111: if(!RC1) TransmitirDatos(RC4, RC5);
   737   000C3E  B282               	btfsc	3970,1,c	;volatile
   738   000C40  D011               	goto	l2012
   739   000C42  A882               	btfss	3970,4,c	;volatile
   740   000C44  D002               	goto	u930
   741   000C46  0E01               	movlw	1
   742   000C48  D001               	goto	u940
   743   000C4A                     u930:
   744   000C4A  0E00               	movlw	0
   745   000C4C                     u940:
   746   000C4C  6E0B               	movwf	TransmitirDatos@Ent1^0,c
   747   000C4E  6A0C               	clrf	(TransmitirDatos@Ent1+1)^0,c
   748   000C50  AA82               	btfss	3970,5,c	;volatile
   749   000C52  D002               	goto	u950
   750   000C54  0E01               	movlw	1
   751   000C56  D001               	goto	u960
   752   000C58                     u950:
   753   000C58  0E00               	movlw	0
   754   000C5A                     u960:
   755   000C5A  6E0D               	movwf	TransmitirDatos@Ent2^0,c
   756   000C5C  6A0E               	clrf	(TransmitirDatos@Ent2+1)^0,c
   757   000C5E  EC12  F004         	call	_TransmitirDatos	;wreg free
   758   000C62  D00A               	goto	l2014
   759   000C64                     l2012:
   760                           
   761                           ;Laboratorio5.c: 112: else TransmitirDatos(A, B);
   762   000C64  C01B  F00B         	movff	_A,TransmitirDatos@Ent1
   763   000C68  C01C  F00C         	movff	_A+1,TransmitirDatos@Ent1+1
   764   000C6C  C019  F00D         	movff	_B,TransmitirDatos@Ent2
   765   000C70  C01A  F00E         	movff	_B+1,TransmitirDatos@Ent2+1
   766   000C74  EC12  F004         	call	_TransmitirDatos	;wreg free
   767   000C78                     l2014:
   768                           
   769                           ;Laboratorio5.c: 113: Conversion(0);
   770   000C78  0E00               	movlw	0
   771   000C7A  ECDE  F008         	call	_Conversion
   772                           
   773                           ;Laboratorio5.c: 114: RB0 = (ADRES <= 511) ? 0 : 1;
   774   000C7E  0E00               	movlw	0
   775   000C80  5CC3               	subwf	195,w,c	;volatile
   776   000C82  0E02               	movlw	2
   777   000C84  58C4               	subwfb	196,w,c	;volatile
   778   000C86  A0D8               	btfss	status,0,c
   779   000C88  D002               	goto	u970
   780   000C8A  8081               	bsf	3969,0,c	;volatile
   781   000C8C  D7B3               	goto	l2000
   782   000C8E                     u970:
   783   000C8E  9081               	bcf	3969,0,c	;volatile
   784   000C90  D7B1               	goto	l2000
   785   000C92                     __end_of_main:
   786                           	callstack 0
   787                           
   788 ;; *************** function _leerDatoEnEEPROM *****************
   789 ;; Defined at:
   790 ;;		line 308 in file "Laboratorio5.c"
   791 ;; Parameters:    Size  Location     Type
   792 ;;  dir             2    2[COMRAM] unsigned int 
   793 ;; Auto vars:     Size  Location     Type
   794 ;;		None
   795 ;; Return value:  Size  Location     Type
   796 ;;                  1    wreg      unsigned char 
   797 ;; Registers used:
   798 ;;		wreg, status,2
   799 ;; Tracked objects:
   800 ;;		On entry : 0/0
   801 ;;		On exit  : 0/0
   802 ;;		Unchanged: 0/0
   803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   804 ;;      Params:         2       0       0       0       0       0       0       0       0
   805 ;;      Locals:         0       0       0       0       0       0       0       0       0
   806 ;;      Temps:          0       0       0       0       0       0       0       0       0
   807 ;;      Totals:         2       0       0       0       0       0       0       0       0
   808 ;;Total ram usage:        2 bytes
   809 ;; Hardware stack levels used: 1
   810 ;; Hardware stack levels required when called: 2
   811 ;; This function calls:
   812 ;;		Nothing
   813 ;; This function is called by:
   814 ;;		_main
   815 ;; This function uses a non-reentrant model
   816 ;;
   817                           
   818                           	psect	text1
   819   0011D0                     __ptext1:
   820                           	callstack 0
   821   0011D0                     _leerDatoEnEEPROM:
   822                           	callstack 28
   823                           
   824                           ;Laboratorio5.c: 309: EEADR = dir;
   825                           
   826                           ;incstack = 0
   827   0011D0  C003  FFA9         	movff	leerDatoEnEEPROM@dir,4009	;volatile
   828                           
   829                           ;Laboratorio5.c: 310: EEPGD = 0;
   830   0011D4  9EA6               	bcf	4006,7,c	;volsfr
   831                           
   832                           ;Laboratorio5.c: 311: CFGS = 0;
   833   0011D6  9CA6               	bcf	4006,6,c	;volsfr
   834                           
   835                           ;Laboratorio5.c: 312: RD = 1;
   836   0011D8  80A6               	bsf	4006,0,c	;volsfr
   837                           
   838                           ;Laboratorio5.c: 314: return EEDATA;
   839   0011DA  50A8               	movf	168,w,c	;volatile
   840   0011DC  0012               	return		;funcret
   841   0011DE                     __end_of_leerDatoEnEEPROM:
   842                           	callstack 0
   843                           
   844 ;; *************** function _TransmitirDatos *****************
   845 ;; Defined at:
   846 ;;		line 175 in file "Laboratorio5.c"
   847 ;; Parameters:    Size  Location     Type
   848 ;;  Ent1            2   10[COMRAM] unsigned int 
   849 ;;  Ent2            2   12[COMRAM] unsigned int 
   850 ;; Auto vars:     Size  Location     Type
   851 ;;  TempC           2   20[COMRAM] unsigned int 
   852 ;;  Simb            2   18[COMRAM] unsigned int 
   853 ;;  n               2   16[COMRAM] unsigned int 
   854 ;;  HumC            2    0        unsigned int 
   855 ;; Return value:  Size  Location     Type
   856 ;;                  1    wreg      void 
   857 ;; Registers used:
   858 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   859 ;; Tracked objects:
   860 ;;		On entry : 0/0
   861 ;;		On exit  : 0/0
   862 ;;		Unchanged: 0/0
   863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   864 ;;      Params:         4       0       0       0       0       0       0       0       0
   865 ;;      Locals:         6       0       0       0       0       0       0       0       0
   866 ;;      Temps:          2       0       0       0       0       0       0       0       0
   867 ;;      Totals:        12       0       0       0       0       0       0       0       0
   868 ;;Total ram usage:       12 bytes
   869 ;; Hardware stack levels used: 1
   870 ;; Hardware stack levels required when called: 6
   871 ;; This function calls:
   872 ;;		_BorraLCD
   873 ;;		_DireccionaLCD
   874 ;;		_EscribeLCD_c
   875 ;;		_MensajeLCD_Word
   876 ;;		_Transmitir
   877 ;;		___awdiv
   878 ;;		___lbdiv
   879 ;;		___lbmod
   880 ;;		___lwdiv
   881 ;;		___lwmod
   882 ;;		___wmul
   883 ;; This function is called by:
   884 ;;		_main
   885 ;; This function uses a non-reentrant model
   886 ;;
   887                           
   888                           	psect	text2
   889   000824                     __ptext2:
   890                           	callstack 0
   891   000824                     _TransmitirDatos:
   892                           	callstack 24
   893                           
   894                           ;Laboratorio5.c: 176: unsigned int n = Ent1 * 10 + Ent2, TempC = Temp, HumC = Hum;
   895                           
   896                           ;incstack = 0
   897   000824  C00B  F003         	movff	TransmitirDatos@Ent1,___wmul@multiplier
   898   000828  C00C  F004         	movff	TransmitirDatos@Ent1+1,___wmul@multiplier+1
   899   00082C  0E00               	movlw	0
   900   00082E  6E06               	movwf	(___wmul@multiplicand+1)^0,c
   901   000830  0E0A               	movlw	10
   902   000832  6E05               	movwf	___wmul@multiplicand^0,c
   903   000834  EC87  F008         	call	___wmul	;wreg free
   904   000838  500D               	movf	TransmitirDatos@Ent2^0,w,c
   905   00083A  2403               	addwf	?___wmul^0,w,c
   906   00083C  6E11               	movwf	TransmitirDatos@n^0,c
   907   00083E  500E               	movf	(TransmitirDatos@Ent2+1)^0,w,c
   908   000840  2004               	addwfc	(?___wmul+1)^0,w,c
   909   000842  6E12               	movwf	(TransmitirDatos@n+1)^0,c
   910   000844  C020  F015         	movff	_Temp,TransmitirDatos@TempC
   911   000848  6A16               	clrf	(TransmitirDatos@TempC+1)^0,c
   912                           
   913                           ;Laboratorio5.c: 177: unsigned int Simb = 67;
   914   00084A  0E00               	movlw	0
   915   00084C  6E14               	movwf	(TransmitirDatos@Simb+1)^0,c
   916   00084E  0E43               	movlw	67
   917   000850  6E13               	movwf	TransmitirDatos@Simb^0,c
   918                           
   919                           ;Laboratorio5.c: 178: BorraLCD();
   920   000852  ECD4  F008         	call	_BorraLCD	;wreg free
   921                           
   922                           ;Laboratorio5.c: 179: switch (n) {
   923   000856  D03E               	goto	l1858
   924   000858                     l255:
   925                           
   926                           ;Laboratorio5.c: 181: TempC = Temp;
   927   000858  C020  F015         	movff	_Temp,TransmitirDatos@TempC
   928   00085C  6A16               	clrf	(TransmitirDatos@TempC+1)^0,c
   929                           
   930                           ;Laboratorio5.c: 182: Simb = 67;
   931   00085E  0E00               	movlw	0
   932   000860  6E14               	movwf	(TransmitirDatos@Simb+1)^0,c
   933   000862  0E43               	movlw	67
   934   000864  D035               	goto	L3
   935   000866                     l1844:
   936                           
   937                           ;Laboratorio5.c: 185: TempC = Temp + 273;
   938   000866  0E11               	movlw	17
   939   000868  2420               	addwf	_Temp^0,w,c
   940   00086A  6E15               	movwf	TransmitirDatos@TempC^0,c
   941   00086C  6A16               	clrf	(TransmitirDatos@TempC+1)^0,c
   942   00086E  0E01               	movlw	1
   943   000870  2216               	addwfc	(TransmitirDatos@TempC+1)^0,f,c
   944                           
   945                           ;Laboratorio5.c: 186: Simb = 75;
   946   000872  0E00               	movlw	0
   947   000874  6E14               	movwf	(TransmitirDatos@Simb+1)^0,c
   948   000876  0E4B               	movlw	75
   949   000878  D02B               	goto	L3
   950   00087A                     l1848:
   951                           
   952                           ;Laboratorio5.c: 189: TempC = Temp * 9 / 5 + 492;
   953   00087A  5020               	movf	_Temp^0,w,c
   954   00087C  0D09               	mullw	9
   955   00087E  CFF3 F003          	movff	prodl,___awdiv@dividend
   956   000882  CFF4 F004          	movff	prodh,___awdiv@dividend+1
   957   000886  0E00               	movlw	0
   958   000888  6E06               	movwf	(___awdiv@divisor+1)^0,c
   959   00088A  0E05               	movlw	5
   960   00088C  6E05               	movwf	___awdiv@divisor^0,c
   961   00088E  EC02  F007         	call	___awdiv	;wreg free
   962   000892  0EEC               	movlw	236
   963   000894  2403               	addwf	?___awdiv^0,w,c
   964   000896  6E15               	movwf	TransmitirDatos@TempC^0,c
   965   000898  0E01               	movlw	1
   966   00089A  2004               	addwfc	(?___awdiv+1)^0,w,c
   967   00089C  6E16               	movwf	(TransmitirDatos@TempC+1)^0,c
   968                           
   969                           ;Laboratorio5.c: 190: Simb = 82;
   970   00089E  0E00               	movlw	0
   971   0008A0  6E14               	movwf	(TransmitirDatos@Simb+1)^0,c
   972   0008A2  0E52               	movlw	82
   973   0008A4  D015               	goto	L3
   974   0008A6                     l1852:
   975                           
   976                           ;Laboratorio5.c: 193: TempC = Temp * 9 / 5 + 32;
   977   0008A6  5020               	movf	_Temp^0,w,c
   978   0008A8  0D09               	mullw	9
   979   0008AA  CFF3 F003          	movff	prodl,___awdiv@dividend
   980   0008AE  CFF4 F004          	movff	prodh,___awdiv@dividend+1
   981   0008B2  0E00               	movlw	0
   982   0008B4  6E06               	movwf	(___awdiv@divisor+1)^0,c
   983   0008B6  0E05               	movlw	5
   984   0008B8  6E05               	movwf	___awdiv@divisor^0,c
   985   0008BA  EC02  F007         	call	___awdiv	;wreg free
   986   0008BE  0E20               	movlw	32
   987   0008C0  2403               	addwf	?___awdiv^0,w,c
   988   0008C2  6E15               	movwf	TransmitirDatos@TempC^0,c
   989   0008C4  0E00               	movlw	0
   990   0008C6  2004               	addwfc	(?___awdiv+1)^0,w,c
   991   0008C8  6E16               	movwf	(TransmitirDatos@TempC+1)^0,c
   992                           
   993                           ;Laboratorio5.c: 194: Simb = 70;
   994   0008CA  0E00               	movlw	0
   995   0008CC  6E14               	movwf	(TransmitirDatos@Simb+1)^0,c
   996   0008CE  0E46               	movlw	70
   997   0008D0                     L3:
   998   0008D0  6E13               	movwf	TransmitirDatos@Simb^0,c
   999                           
  1000                           ;Laboratorio5.c: 195: break;
  1001   0008D2  D015               	goto	l1860
  1002   0008D4                     l1858:
  1003   0008D4  C011  F00F         	movff	TransmitirDatos@n,??_TransmitirDatos
  1004   0008D8  C012  F010         	movff	TransmitirDatos@n+1,??_TransmitirDatos+1
  1005                           
  1006                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1007                           ; Switch size 1, requested type "simple"
  1008                           ; Number of cases is 1, Range of values is 0 to 0
  1009                           ; switch strategies available:
  1010                           ; Name         Instructions Cycles
  1011                           ; simple_byte            4     3 (average)
  1012                           ;	Chosen strategy is simple_byte
  1013   0008DC  5010               	movf	(??_TransmitirDatos+1)^0,w,c
  1014   0008DE  0A00               	xorlw	0	; case 0
  1015   0008E0  A4D8               	btfss	status,2,c
  1016   0008E2  D00D               	goto	l1860
  1017                           
  1018                           ; Switch size 1, requested type "simple"
  1019                           ; Number of cases is 4, Range of values is 0 to 11
  1020                           ; switch strategies available:
  1021                           ; Name         Instructions Cycles
  1022                           ; simple_byte           13     7 (average)
  1023                           ;	Chosen strategy is simple_byte
  1024   0008E4  500F               	movf	??_TransmitirDatos^0,w,c
  1025   0008E6  0A00               	xorlw	0	; case 0
  1026   0008E8  B4D8               	btfsc	status,2,c
  1027   0008EA  D7B6               	goto	l255
  1028   0008EC  0A01               	xorlw	1	; case 1
  1029   0008EE  B4D8               	btfsc	status,2,c
  1030   0008F0  D7BA               	goto	l1844
  1031   0008F2  0A0B               	xorlw	11	; case 10
  1032   0008F4  B4D8               	btfsc	status,2,c
  1033   0008F6  D7C1               	goto	l1848
  1034   0008F8  0A01               	xorlw	1	; case 11
  1035   0008FA  B4D8               	btfsc	status,2,c
  1036   0008FC  D7D4               	goto	l1852
  1037   0008FE                     l1860:
  1038                           
  1039                           ;Laboratorio5.c: 197: Transmitir('T');
  1040   0008FE  0E54               	movlw	84
  1041   000900  ECF6  F008         	call	_Transmitir
  1042                           
  1043                           ;Laboratorio5.c: 198: Transmitir('e');
  1044   000904  0E65               	movlw	101
  1045   000906  ECF6  F008         	call	_Transmitir
  1046                           
  1047                           ;Laboratorio5.c: 199: Transmitir('m');
  1048   00090A  0E6D               	movlw	109
  1049   00090C  ECF6  F008         	call	_Transmitir
  1050                           
  1051                           ;Laboratorio5.c: 200: Transmitir('p');
  1052   000910  0E70               	movlw	112
  1053   000912  ECF6  F008         	call	_Transmitir
  1054                           
  1055                           ;Laboratorio5.c: 201: Transmitir(':');
  1056   000916  0E3A               	movlw	58
  1057   000918  ECF6  F008         	call	_Transmitir
  1058                           
  1059                           ;Laboratorio5.c: 202: Transmitir(' ');
  1060   00091C  0E20               	movlw	32
  1061   00091E  ECF6  F008         	call	_Transmitir
  1062                           
  1063                           ;Laboratorio5.c: 204: MensajeLCD_Word("Temp:");
  1064   000922  0E18               	movlw	low STR_3
  1065   000924  6E07               	movwf	MensajeLCD_Word@a^0,c
  1066   000926  ECA0  F007         	call	_MensajeLCD_Word	;wreg free
  1067                           
  1068                           ;Laboratorio5.c: 205: if (TempC / 100 > 0) {
  1069   00092A  C015  F003         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1070   00092E  C016  F004         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1071   000932  0E00               	movlw	0
  1072   000934  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1073   000936  0E64               	movlw	100
  1074   000938  6E05               	movwf	___lwdiv@divisor^0,c
  1075   00093A  EC77  F007         	call	___lwdiv	;wreg free
  1076   00093E  5003               	movf	?___lwdiv^0,w,c
  1077   000940  1004               	iorwf	(?___lwdiv+1)^0,w,c
  1078   000942  B4D8               	btfsc	status,2,c
  1079   000944  D02A               	goto	l260
  1080                           
  1081                           ;Laboratorio5.c: 206: Transmitir(TempC / 100 + 48);
  1082   000946  C015  F003         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1083   00094A  C016  F004         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1084   00094E  0E00               	movlw	0
  1085   000950  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1086   000952  0E64               	movlw	100
  1087   000954  6E05               	movwf	___lwdiv@divisor^0,c
  1088   000956  EC77  F007         	call	___lwdiv	;wreg free
  1089   00095A  5003               	movf	?___lwdiv^0,w,c
  1090   00095C  0F30               	addlw	48
  1091   00095E  ECF6  F008         	call	_Transmitir
  1092                           
  1093                           ;Laboratorio5.c: 207: EscribeLCD_c(TempC / 100 + 48);
  1094   000962  C015  F003         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1095   000966  C016  F004         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1096   00096A  0E00               	movlw	0
  1097   00096C  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1098   00096E  0E64               	movlw	100
  1099   000970  6E05               	movwf	___lwdiv@divisor^0,c
  1100   000972  EC77  F007         	call	___lwdiv	;wreg free
  1101   000976  5003               	movf	?___lwdiv^0,w,c
  1102   000978  0F30               	addlw	48
  1103   00097A  ECBE  F008         	call	_EscribeLCD_c
  1104                           
  1105                           ;Laboratorio5.c: 208: TempC = TempC % 100;
  1106   00097E  C015  F003         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1107   000982  C016  F004         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1108   000986  0E00               	movlw	0
  1109   000988  6E06               	movwf	(___lwmod@divisor+1)^0,c
  1110   00098A  0E64               	movlw	100
  1111   00098C  6E05               	movwf	___lwmod@divisor^0,c
  1112   00098E  ECC7  F007         	call	___lwmod	;wreg free
  1113   000992  C003  F015         	movff	?___lwmod,TransmitirDatos@TempC
  1114   000996  C004  F016         	movff	?___lwmod+1,TransmitirDatos@TempC+1
  1115   00099A                     l260:
  1116                           
  1117                           ;Laboratorio5.c: 209: };Laboratorio5.c: 210: Transmitir(TempC / 10 + 48);
  1118   00099A  C015  F003         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1119   00099E  C016  F004         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1120   0009A2  0E00               	movlw	0
  1121   0009A4  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1122   0009A6  0E0A               	movlw	10
  1123   0009A8  6E05               	movwf	___lwdiv@divisor^0,c
  1124   0009AA  EC77  F007         	call	___lwdiv	;wreg free
  1125   0009AE  5003               	movf	?___lwdiv^0,w,c
  1126   0009B0  0F30               	addlw	48
  1127   0009B2  ECF6  F008         	call	_Transmitir
  1128                           
  1129                           ;Laboratorio5.c: 211: Transmitir(TempC % 10 + 48);
  1130   0009B6  C015  F003         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1131   0009BA  C016  F004         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1132   0009BE  0E00               	movlw	0
  1133   0009C0  6E06               	movwf	(___lwmod@divisor+1)^0,c
  1134   0009C2  0E0A               	movlw	10
  1135   0009C4  6E05               	movwf	___lwmod@divisor^0,c
  1136   0009C6  ECC7  F007         	call	___lwmod	;wreg free
  1137   0009CA  5003               	movf	?___lwmod^0,w,c
  1138   0009CC  0F30               	addlw	48
  1139   0009CE  ECF6  F008         	call	_Transmitir
  1140                           
  1141                           ;Laboratorio5.c: 212: Transmitir(167);
  1142   0009D2  0EA7               	movlw	167
  1143   0009D4  ECF6  F008         	call	_Transmitir
  1144                           
  1145                           ;Laboratorio5.c: 213: Transmitir(Simb);
  1146   0009D8  5013               	movf	TransmitirDatos@Simb^0,w,c
  1147   0009DA  ECF6  F008         	call	_Transmitir
  1148                           
  1149                           ;Laboratorio5.c: 214: Transmitir(' ');
  1150   0009DE  0E20               	movlw	32
  1151   0009E0  ECF6  F008         	call	_Transmitir
  1152                           
  1153                           ;Laboratorio5.c: 215: Transmitir('\n');
  1154   0009E4  0E0A               	movlw	10
  1155   0009E6  ECF6  F008         	call	_Transmitir
  1156                           
  1157                           ;Laboratorio5.c: 216: Transmitir('H');
  1158   0009EA  0E48               	movlw	72
  1159   0009EC  ECF6  F008         	call	_Transmitir
  1160                           
  1161                           ;Laboratorio5.c: 217: Transmitir('u');
  1162   0009F0  0E75               	movlw	117
  1163   0009F2  ECF6  F008         	call	_Transmitir
  1164                           
  1165                           ;Laboratorio5.c: 218: Transmitir('m');
  1166   0009F6  0E6D               	movlw	109
  1167   0009F8  ECF6  F008         	call	_Transmitir
  1168                           
  1169                           ;Laboratorio5.c: 219: Transmitir(':');
  1170   0009FC  0E3A               	movlw	58
  1171   0009FE  ECF6  F008         	call	_Transmitir
  1172                           
  1173                           ;Laboratorio5.c: 220: Transmitir(' ');
  1174   000A02  0E20               	movlw	32
  1175   000A04  ECF6  F008         	call	_Transmitir
  1176                           
  1177                           ;Laboratorio5.c: 221: Transmitir(Hum / 10 + 48);
  1178   000A08  0E0A               	movlw	10
  1179   000A0A  6E03               	movwf	___lbdiv@divisor^0,c
  1180   000A0C  501F               	movf	_Hum^0,w,c
  1181   000A0E  EC27  F008         	call	___lbdiv
  1182   000A12  0F30               	addlw	48
  1183   000A14  ECF6  F008         	call	_Transmitir
  1184                           
  1185                           ;Laboratorio5.c: 222: Transmitir(Hum % 10 + 48);
  1186   000A18  0E0A               	movlw	10
  1187   000A1A  6E03               	movwf	___lbmod@divisor^0,c
  1188   000A1C  501F               	movf	_Hum^0,w,c
  1189   000A1E  EC72  F008         	call	___lbmod
  1190   000A22  0F30               	addlw	48
  1191   000A24  ECF6  F008         	call	_Transmitir
  1192                           
  1193                           ;Laboratorio5.c: 223: Transmitir(' ');
  1194   000A28  0E20               	movlw	32
  1195   000A2A  ECF6  F008         	call	_Transmitir
  1196                           
  1197                           ;Laboratorio5.c: 224: Transmitir('%');
  1198   000A2E  0E25               	movlw	37
  1199   000A30  ECF6  F008         	call	_Transmitir
  1200                           
  1201                           ;Laboratorio5.c: 225: Transmitir('\n');
  1202   000A34  0E0A               	movlw	10
  1203   000A36  ECF6  F008         	call	_Transmitir
  1204                           
  1205                           ;Laboratorio5.c: 226: Transmitir(' ');
  1206   000A3A  0E20               	movlw	32
  1207   000A3C  ECF6  F008         	call	_Transmitir
  1208                           
  1209                           ;Laboratorio5.c: 234: EscribeLCD_c(TempC / 10 + 48);
  1210   000A40  C015  F003         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1211   000A44  C016  F004         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1212   000A48  0E00               	movlw	0
  1213   000A4A  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1214   000A4C  0E0A               	movlw	10
  1215   000A4E  6E05               	movwf	___lwdiv@divisor^0,c
  1216   000A50  EC77  F007         	call	___lwdiv	;wreg free
  1217   000A54  5003               	movf	?___lwdiv^0,w,c
  1218   000A56  0F30               	addlw	48
  1219   000A58  ECBE  F008         	call	_EscribeLCD_c
  1220                           
  1221                           ;Laboratorio5.c: 235: EscribeLCD_c(TempC % 10 + 48);
  1222   000A5C  C015  F003         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1223   000A60  C016  F004         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1224   000A64  0E00               	movlw	0
  1225   000A66  6E06               	movwf	(___lwmod@divisor+1)^0,c
  1226   000A68  0E0A               	movlw	10
  1227   000A6A  6E05               	movwf	___lwmod@divisor^0,c
  1228   000A6C  ECC7  F007         	call	___lwmod	;wreg free
  1229   000A70  5003               	movf	?___lwmod^0,w,c
  1230   000A72  0F30               	addlw	48
  1231   000A74  ECBE  F008         	call	_EscribeLCD_c
  1232                           
  1233                           ;Laboratorio5.c: 236: EscribeLCD_c(Simb);
  1234   000A78  5013               	movf	TransmitirDatos@Simb^0,w,c
  1235   000A7A  ECBE  F008         	call	_EscribeLCD_c
  1236                           
  1237                           ;Laboratorio5.c: 237: DireccionaLCD(192);
  1238   000A7E  0EC0               	movlw	192
  1239   000A80  ECC9  F008         	call	_DireccionaLCD
  1240                           
  1241                           ;Laboratorio5.c: 238: MensajeLCD_Word("Hum:");
  1242   000A84  0E1E               	movlw	low STR_4
  1243   000A86  6E07               	movwf	MensajeLCD_Word@a^0,c
  1244   000A88  ECA0  F007         	call	_MensajeLCD_Word	;wreg free
  1245                           
  1246                           ;Laboratorio5.c: 239: EscribeLCD_c(Hum / 10 + 48);
  1247   000A8C  0E0A               	movlw	10
  1248   000A8E  6E03               	movwf	___lbdiv@divisor^0,c
  1249   000A90  501F               	movf	_Hum^0,w,c
  1250   000A92  EC27  F008         	call	___lbdiv
  1251   000A96  0F30               	addlw	48
  1252   000A98  ECBE  F008         	call	_EscribeLCD_c
  1253                           
  1254                           ;Laboratorio5.c: 240: EscribeLCD_c(Hum % 10 + 48);
  1255   000A9C  0E0A               	movlw	10
  1256   000A9E  6E03               	movwf	___lbmod@divisor^0,c
  1257   000AA0  501F               	movf	_Hum^0,w,c
  1258   000AA2  EC72  F008         	call	___lbmod
  1259   000AA6  0F30               	addlw	48
  1260   000AA8  ECBE  F008         	call	_EscribeLCD_c
  1261                           
  1262                           ;Laboratorio5.c: 241: EscribeLCD_c('%');
  1263   000AAC  0E25               	movlw	37
  1264   000AAE  ECBE  F008         	call	_EscribeLCD_c
  1265   000AB2  0012               	return		;funcret
  1266   000AB4                     __end_of_TransmitirDatos:
  1267                           	callstack 0
  1268                           
  1269 ;; *************** function ___wmul *****************
  1270 ;; Defined at:
  1271 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  1272 ;; Parameters:    Size  Location     Type
  1273 ;;  multiplier      2    2[COMRAM] unsigned int 
  1274 ;;  multiplicand    2    4[COMRAM] unsigned int 
  1275 ;; Auto vars:     Size  Location     Type
  1276 ;;  product         2    6[COMRAM] unsigned int 
  1277 ;; Return value:  Size  Location     Type
  1278 ;;                  2    2[COMRAM] unsigned int 
  1279 ;; Registers used:
  1280 ;;		wreg, status,2, status,0, prodl, prodh
  1281 ;; Tracked objects:
  1282 ;;		On entry : 0/0
  1283 ;;		On exit  : 0/0
  1284 ;;		Unchanged: 0/0
  1285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1286 ;;      Params:         4       0       0       0       0       0       0       0       0
  1287 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1288 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1289 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1290 ;;Total ram usage:        6 bytes
  1291 ;; Hardware stack levels used: 1
  1292 ;; Hardware stack levels required when called: 2
  1293 ;; This function calls:
  1294 ;;		Nothing
  1295 ;; This function is called by:
  1296 ;;		_TransmitirDatos
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           
  1300                           	psect	text3
  1301   00110E                     __ptext3:
  1302                           	callstack 0
  1303   00110E                     ___wmul:
  1304                           	callstack 27
  1305                           
  1306                           ;incstack = 0
  1307   00110E  5003               	movf	___wmul@multiplier^0,w,c
  1308   001110  0205               	mulwf	___wmul@multiplicand^0,c
  1309   001112  CFF3 F007          	movff	prodl,___wmul@product
  1310   001116  CFF4 F008          	movff	prodh,___wmul@product+1
  1311   00111A  5003               	movf	___wmul@multiplier^0,w,c
  1312   00111C  0206               	mulwf	(___wmul@multiplicand+1)^0,c
  1313   00111E  50F3               	movf	243,w,c
  1314   001120  2608               	addwf	(___wmul@product+1)^0,f,c
  1315   001122  5004               	movf	(___wmul@multiplier+1)^0,w,c
  1316   001124  0205               	mulwf	___wmul@multiplicand^0,c
  1317   001126  50F3               	movf	243,w,c
  1318   001128  2608               	addwf	(___wmul@product+1)^0,f,c
  1319   00112A  C007  F003         	movff	___wmul@product,?___wmul
  1320   00112E  C008  F004         	movff	___wmul@product+1,?___wmul+1
  1321   001132  0012               	return		;funcret
  1322   001134                     __end_of___wmul:
  1323                           	callstack 0
  1324                           
  1325 ;; *************** function ___lwmod *****************
  1326 ;; Defined at:
  1327 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1328 ;; Parameters:    Size  Location     Type
  1329 ;;  dividend        2    2[COMRAM] unsigned int 
  1330 ;;  divisor         2    4[COMRAM] unsigned int 
  1331 ;; Auto vars:     Size  Location     Type
  1332 ;;  counter         1    6[COMRAM] unsigned char 
  1333 ;; Return value:  Size  Location     Type
  1334 ;;                  2    2[COMRAM] unsigned int 
  1335 ;; Registers used:
  1336 ;;		wreg, status,2, status,0
  1337 ;; Tracked objects:
  1338 ;;		On entry : 0/0
  1339 ;;		On exit  : 0/0
  1340 ;;		Unchanged: 0/0
  1341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1342 ;;      Params:         4       0       0       0       0       0       0       0       0
  1343 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1344 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1345 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1346 ;;Total ram usage:        5 bytes
  1347 ;; Hardware stack levels used: 1
  1348 ;; Hardware stack levels required when called: 2
  1349 ;; This function calls:
  1350 ;;		Nothing
  1351 ;; This function is called by:
  1352 ;;		_TransmitirDatos
  1353 ;; This function uses a non-reentrant model
  1354 ;;
  1355                           
  1356                           	psect	text4
  1357   000F8E                     __ptext4:
  1358                           	callstack 0
  1359   000F8E                     ___lwmod:
  1360                           	callstack 27
  1361                           
  1362                           ;incstack = 0
  1363   000F8E  5005               	movf	___lwmod@divisor^0,w,c
  1364   000F90  1006               	iorwf	(___lwmod@divisor+1)^0,w,c
  1365   000F92  B4D8               	btfsc	status,2,c
  1366   000F94  D018               	goto	l800
  1367   000F96  0E01               	movlw	1
  1368   000F98  6E07               	movwf	___lwmod@counter^0,c
  1369   000F9A  D004               	goto	l1764
  1370   000F9C                     l1762:
  1371   000F9C  90D8               	bcf	status,0,c
  1372   000F9E  3605               	rlcf	___lwmod@divisor^0,f,c
  1373   000FA0  3606               	rlcf	(___lwmod@divisor+1)^0,f,c
  1374   000FA2  2A07               	incf	___lwmod@counter^0,f,c
  1375   000FA4                     l1764:
  1376   000FA4  AE06               	btfss	(___lwmod@divisor+1)^0,7,c
  1377   000FA6  D7FA               	goto	l1762
  1378   000FA8                     u730:
  1379   000FA8  5005               	movf	___lwmod@divisor^0,w,c
  1380   000FAA  5C03               	subwf	___lwmod@dividend^0,w,c
  1381   000FAC  5006               	movf	(___lwmod@divisor+1)^0,w,c
  1382   000FAE  5804               	subwfb	(___lwmod@dividend+1)^0,w,c
  1383   000FB0  A0D8               	btfss	status,0,c
  1384   000FB2  D004               	goto	l1770
  1385   000FB4  5005               	movf	___lwmod@divisor^0,w,c
  1386   000FB6  5E03               	subwf	___lwmod@dividend^0,f,c
  1387   000FB8  5006               	movf	(___lwmod@divisor+1)^0,w,c
  1388   000FBA  5A04               	subwfb	(___lwmod@dividend+1)^0,f,c
  1389   000FBC                     l1770:
  1390   000FBC  90D8               	bcf	status,0,c
  1391   000FBE  3206               	rrcf	(___lwmod@divisor+1)^0,f,c
  1392   000FC0  3205               	rrcf	___lwmod@divisor^0,f,c
  1393   000FC2  2E07               	decfsz	___lwmod@counter^0,f,c
  1394   000FC4  D7F1               	goto	u730
  1395   000FC6                     l800:
  1396   000FC6  C003  F003         	movff	___lwmod@dividend,?___lwmod
  1397   000FCA  C004  F004         	movff	___lwmod@dividend+1,?___lwmod+1
  1398   000FCE  0012               	return		;funcret
  1399   000FD0                     __end_of___lwmod:
  1400                           	callstack 0
  1401                           
  1402 ;; *************** function ___lwdiv *****************
  1403 ;; Defined at:
  1404 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1405 ;; Parameters:    Size  Location     Type
  1406 ;;  dividend        2    2[COMRAM] unsigned int 
  1407 ;;  divisor         2    4[COMRAM] unsigned int 
  1408 ;; Auto vars:     Size  Location     Type
  1409 ;;  quotient        2    6[COMRAM] unsigned int 
  1410 ;;  counter         1    8[COMRAM] unsigned char 
  1411 ;; Return value:  Size  Location     Type
  1412 ;;                  2    2[COMRAM] unsigned int 
  1413 ;; Registers used:
  1414 ;;		wreg, status,2, status,0
  1415 ;; Tracked objects:
  1416 ;;		On entry : 0/0
  1417 ;;		On exit  : 0/0
  1418 ;;		Unchanged: 0/0
  1419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1420 ;;      Params:         4       0       0       0       0       0       0       0       0
  1421 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1422 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1423 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1424 ;;Total ram usage:        7 bytes
  1425 ;; Hardware stack levels used: 1
  1426 ;; Hardware stack levels required when called: 2
  1427 ;; This function calls:
  1428 ;;		Nothing
  1429 ;; This function is called by:
  1430 ;;		_TransmitirDatos
  1431 ;; This function uses a non-reentrant model
  1432 ;;
  1433                           
  1434                           	psect	text5
  1435   000EEE                     __ptext5:
  1436                           	callstack 0
  1437   000EEE                     ___lwdiv:
  1438                           	callstack 27
  1439                           
  1440                           ;incstack = 0
  1441   000EEE  0E00               	movlw	0
  1442   000EF0  6E08               	movwf	(___lwdiv@quotient+1)^0,c
  1443   000EF2  0E00               	movlw	0
  1444   000EF4  6E07               	movwf	___lwdiv@quotient^0,c
  1445   000EF6  5005               	movf	___lwdiv@divisor^0,w,c
  1446   000EF8  1006               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1447   000EFA  B4D8               	btfsc	status,2,c
  1448   000EFC  D01C               	goto	l790
  1449   000EFE  0E01               	movlw	1
  1450   000F00  6E09               	movwf	___lwdiv@counter^0,c
  1451   000F02  D004               	goto	l1744
  1452   000F04                     l1742:
  1453   000F04  90D8               	bcf	status,0,c
  1454   000F06  3605               	rlcf	___lwdiv@divisor^0,f,c
  1455   000F08  3606               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1456   000F0A  2A09               	incf	___lwdiv@counter^0,f,c
  1457   000F0C                     l1744:
  1458   000F0C  AE06               	btfss	(___lwdiv@divisor+1)^0,7,c
  1459   000F0E  D7FA               	goto	l1742
  1460   000F10                     u700:
  1461   000F10  90D8               	bcf	status,0,c
  1462   000F12  3607               	rlcf	___lwdiv@quotient^0,f,c
  1463   000F14  3608               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1464   000F16  5005               	movf	___lwdiv@divisor^0,w,c
  1465   000F18  5C03               	subwf	___lwdiv@dividend^0,w,c
  1466   000F1A  5006               	movf	(___lwdiv@divisor+1)^0,w,c
  1467   000F1C  5804               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1468   000F1E  A0D8               	btfss	status,0,c
  1469   000F20  D005               	goto	l1754
  1470   000F22  5005               	movf	___lwdiv@divisor^0,w,c
  1471   000F24  5E03               	subwf	___lwdiv@dividend^0,f,c
  1472   000F26  5006               	movf	(___lwdiv@divisor+1)^0,w,c
  1473   000F28  5A04               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1474   000F2A  8007               	bsf	___lwdiv@quotient^0,0,c
  1475   000F2C                     l1754:
  1476   000F2C  90D8               	bcf	status,0,c
  1477   000F2E  3206               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1478   000F30  3205               	rrcf	___lwdiv@divisor^0,f,c
  1479   000F32  2E09               	decfsz	___lwdiv@counter^0,f,c
  1480   000F34  D7ED               	goto	u700
  1481   000F36                     l790:
  1482   000F36  C007  F003         	movff	___lwdiv@quotient,?___lwdiv
  1483   000F3A  C008  F004         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1484   000F3E  0012               	return		;funcret
  1485   000F40                     __end_of___lwdiv:
  1486                           	callstack 0
  1487                           
  1488 ;; *************** function ___lbmod *****************
  1489 ;; Defined at:
  1490 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lbmod.c"
  1491 ;; Parameters:    Size  Location     Type
  1492 ;;  dividend        1    wreg     unsigned char 
  1493 ;;  divisor         1    2[COMRAM] unsigned char 
  1494 ;; Auto vars:     Size  Location     Type
  1495 ;;  dividend        1    3[COMRAM] unsigned char 
  1496 ;;  rem             1    5[COMRAM] unsigned char 
  1497 ;;  counter         1    4[COMRAM] unsigned char 
  1498 ;; Return value:  Size  Location     Type
  1499 ;;                  1    wreg      unsigned char 
  1500 ;; Registers used:
  1501 ;;		wreg, status,2, status,0
  1502 ;; Tracked objects:
  1503 ;;		On entry : 0/0
  1504 ;;		On exit  : 0/0
  1505 ;;		Unchanged: 0/0
  1506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1507 ;;      Params:         1       0       0       0       0       0       0       0       0
  1508 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1509 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1510 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1511 ;;Total ram usage:        4 bytes
  1512 ;; Hardware stack levels used: 1
  1513 ;; Hardware stack levels required when called: 2
  1514 ;; This function calls:
  1515 ;;		Nothing
  1516 ;; This function is called by:
  1517 ;;		_main
  1518 ;;		_TransmitirDatos
  1519 ;; This function uses a non-reentrant model
  1520 ;;
  1521                           
  1522                           	psect	text6
  1523   0010E4                     __ptext6:
  1524                           	callstack 0
  1525   0010E4                     ___lbmod:
  1526                           	callstack 28
  1527                           
  1528                           ;incstack = 0
  1529                           ;___lbmod@dividend stored from wreg
  1530   0010E4  6E04               	movwf	___lbmod@dividend^0,c
  1531   0010E6  0E08               	movlw	8
  1532   0010E8  6E05               	movwf	___lbmod@counter^0,c
  1533   0010EA  0E00               	movlw	0
  1534   0010EC  6E06               	movwf	___lbmod@rem^0,c
  1535   0010EE                     l1722:
  1536   0010EE  90D8               	bcf	status,0,c
  1537   0010F0  3404               	rlcf	___lbmod@dividend^0,w,c
  1538   0010F2  3406               	rlcf	___lbmod@rem^0,w,c
  1539   0010F4  6E06               	movwf	___lbmod@rem^0,c
  1540   0010F6  90D8               	bcf	status,0,c
  1541   0010F8  3604               	rlcf	___lbmod@dividend^0,f,c
  1542   0010FA  5003               	movf	___lbmod@divisor^0,w,c
  1543   0010FC  5C06               	subwf	___lbmod@rem^0,w,c
  1544   0010FE  A0D8               	btfss	status,0,c
  1545   001100  D002               	goto	l1730
  1546   001102  5003               	movf	___lbmod@divisor^0,w,c
  1547   001104  5E06               	subwf	___lbmod@rem^0,f,c
  1548   001106                     l1730:
  1549   001106  2E05               	decfsz	___lbmod@counter^0,f,c
  1550   001108  D7F2               	goto	l1722
  1551   00110A  5006               	movf	___lbmod@rem^0,w,c
  1552   00110C  0012               	return		;funcret
  1553   00110E                     __end_of___lbmod:
  1554                           	callstack 0
  1555                           
  1556 ;; *************** function ___lbdiv *****************
  1557 ;; Defined at:
  1558 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lbdiv.c"
  1559 ;; Parameters:    Size  Location     Type
  1560 ;;  dividend        1    wreg     unsigned char 
  1561 ;;  divisor         1    2[COMRAM] unsigned char 
  1562 ;; Auto vars:     Size  Location     Type
  1563 ;;  dividend        1    3[COMRAM] unsigned char 
  1564 ;;  quotient        1    5[COMRAM] unsigned char 
  1565 ;;  counter         1    4[COMRAM] unsigned char 
  1566 ;; Return value:  Size  Location     Type
  1567 ;;                  1    wreg      unsigned char 
  1568 ;; Registers used:
  1569 ;;		wreg, status,2, status,0
  1570 ;; Tracked objects:
  1571 ;;		On entry : 0/0
  1572 ;;		On exit  : 0/0
  1573 ;;		Unchanged: 0/0
  1574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1575 ;;      Params:         1       0       0       0       0       0       0       0       0
  1576 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1577 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1578 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1579 ;;Total ram usage:        4 bytes
  1580 ;; Hardware stack levels used: 1
  1581 ;; Hardware stack levels required when called: 2
  1582 ;; This function calls:
  1583 ;;		Nothing
  1584 ;; This function is called by:
  1585 ;;		_main
  1586 ;;		_TransmitirDatos
  1587 ;; This function uses a non-reentrant model
  1588 ;;
  1589                           
  1590                           	psect	text7
  1591   00104E                     __ptext7:
  1592                           	callstack 0
  1593   00104E                     ___lbdiv:
  1594                           	callstack 28
  1595                           
  1596                           ;incstack = 0
  1597                           ;___lbdiv@dividend stored from wreg
  1598   00104E  6E04               	movwf	___lbdiv@dividend^0,c
  1599   001050  0E00               	movlw	0
  1600   001052  6E06               	movwf	___lbdiv@quotient^0,c
  1601   001054  5003               	movf	___lbdiv@divisor^0,w,c
  1602   001056  B4D8               	btfsc	status,2,c
  1603   001058  D015               	goto	l1716
  1604   00105A  0E01               	movlw	1
  1605   00105C  6E05               	movwf	___lbdiv@counter^0,c
  1606   00105E  D003               	goto	l1704
  1607   001060                     l1700:
  1608   001060  90D8               	bcf	status,0,c
  1609   001062  3603               	rlcf	___lbdiv@divisor^0,f,c
  1610   001064  2A05               	incf	___lbdiv@counter^0,f,c
  1611   001066                     l1704:
  1612   001066  AE03               	btfss	___lbdiv@divisor^0,7,c
  1613   001068  D7FB               	goto	l1700
  1614   00106A                     u660:
  1615   00106A  90D8               	bcf	status,0,c
  1616   00106C  3606               	rlcf	___lbdiv@quotient^0,f,c
  1617   00106E  5003               	movf	___lbdiv@divisor^0,w,c
  1618   001070  5C04               	subwf	___lbdiv@dividend^0,w,c
  1619   001072  A0D8               	btfss	status,0,c
  1620   001074  D003               	goto	l1712
  1621   001076  5003               	movf	___lbdiv@divisor^0,w,c
  1622   001078  5E04               	subwf	___lbdiv@dividend^0,f,c
  1623   00107A  8006               	bsf	___lbdiv@quotient^0,0,c
  1624   00107C                     l1712:
  1625   00107C  90D8               	bcf	status,0,c
  1626   00107E  3203               	rrcf	___lbdiv@divisor^0,f,c
  1627   001080  2E05               	decfsz	___lbdiv@counter^0,f,c
  1628   001082  D7F3               	goto	u660
  1629   001084                     l1716:
  1630   001084  5006               	movf	___lbdiv@quotient^0,w,c
  1631   001086  0012               	return		;funcret
  1632   001088                     __end_of___lbdiv:
  1633                           	callstack 0
  1634                           
  1635 ;; *************** function ___awdiv *****************
  1636 ;; Defined at:
  1637 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  1638 ;; Parameters:    Size  Location     Type
  1639 ;;  dividend        2    2[COMRAM] int 
  1640 ;;  divisor         2    4[COMRAM] int 
  1641 ;; Auto vars:     Size  Location     Type
  1642 ;;  quotient        2    8[COMRAM] int 
  1643 ;;  sign            1    7[COMRAM] unsigned char 
  1644 ;;  counter         1    6[COMRAM] unsigned char 
  1645 ;; Return value:  Size  Location     Type
  1646 ;;                  2    2[COMRAM] int 
  1647 ;; Registers used:
  1648 ;;		wreg, status,2, status,0
  1649 ;; Tracked objects:
  1650 ;;		On entry : 0/0
  1651 ;;		On exit  : 0/0
  1652 ;;		Unchanged: 0/0
  1653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1654 ;;      Params:         4       0       0       0       0       0       0       0       0
  1655 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1656 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1657 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1658 ;;Total ram usage:        8 bytes
  1659 ;; Hardware stack levels used: 1
  1660 ;; Hardware stack levels required when called: 2
  1661 ;; This function calls:
  1662 ;;		Nothing
  1663 ;; This function is called by:
  1664 ;;		_TransmitirDatos
  1665 ;; This function uses a non-reentrant model
  1666 ;;
  1667                           
  1668                           	psect	text8
  1669   000E04                     __ptext8:
  1670                           	callstack 0
  1671   000E04                     ___awdiv:
  1672                           	callstack 27
  1673                           
  1674                           ;incstack = 0
  1675   000E04  0E00               	movlw	0
  1676   000E06  6E08               	movwf	___awdiv@sign^0,c
  1677   000E08  AE06               	btfss	(___awdiv@divisor+1)^0,7,c
  1678   000E0A  D006               	goto	l1658
  1679   000E0C  6C05               	negf	___awdiv@divisor^0,c
  1680   000E0E  1E06               	comf	(___awdiv@divisor+1)^0,f,c
  1681   000E10  B0D8               	btfsc	status,0,c
  1682   000E12  2A06               	incf	(___awdiv@divisor+1)^0,f,c
  1683   000E14  0E01               	movlw	1
  1684   000E16  6E08               	movwf	___awdiv@sign^0,c
  1685   000E18                     l1658:
  1686   000E18  AE04               	btfss	(___awdiv@dividend+1)^0,7,c
  1687   000E1A  D006               	goto	l1664
  1688   000E1C  6C03               	negf	___awdiv@dividend^0,c
  1689   000E1E  1E04               	comf	(___awdiv@dividend+1)^0,f,c
  1690   000E20  B0D8               	btfsc	status,0,c
  1691   000E22  2A04               	incf	(___awdiv@dividend+1)^0,f,c
  1692   000E24  0E01               	movlw	1
  1693   000E26  1A08               	xorwf	___awdiv@sign^0,f,c
  1694   000E28                     l1664:
  1695   000E28  0E00               	movlw	0
  1696   000E2A  6E0A               	movwf	(___awdiv@quotient+1)^0,c
  1697   000E2C  0E00               	movlw	0
  1698   000E2E  6E09               	movwf	___awdiv@quotient^0,c
  1699   000E30  5005               	movf	___awdiv@divisor^0,w,c
  1700   000E32  1006               	iorwf	(___awdiv@divisor+1)^0,w,c
  1701   000E34  B4D8               	btfsc	status,2,c
  1702   000E36  D01C               	goto	l1686
  1703   000E38  0E01               	movlw	1
  1704   000E3A  6E07               	movwf	___awdiv@counter^0,c
  1705   000E3C  D004               	goto	l1672
  1706   000E3E                     l1670:
  1707   000E3E  90D8               	bcf	status,0,c
  1708   000E40  3605               	rlcf	___awdiv@divisor^0,f,c
  1709   000E42  3606               	rlcf	(___awdiv@divisor+1)^0,f,c
  1710   000E44  2A07               	incf	___awdiv@counter^0,f,c
  1711   000E46                     l1672:
  1712   000E46  AE06               	btfss	(___awdiv@divisor+1)^0,7,c
  1713   000E48  D7FA               	goto	l1670
  1714   000E4A                     u620:
  1715   000E4A  90D8               	bcf	status,0,c
  1716   000E4C  3609               	rlcf	___awdiv@quotient^0,f,c
  1717   000E4E  360A               	rlcf	(___awdiv@quotient+1)^0,f,c
  1718   000E50  5005               	movf	___awdiv@divisor^0,w,c
  1719   000E52  5C03               	subwf	___awdiv@dividend^0,w,c
  1720   000E54  5006               	movf	(___awdiv@divisor+1)^0,w,c
  1721   000E56  5804               	subwfb	(___awdiv@dividend+1)^0,w,c
  1722   000E58  A0D8               	btfss	status,0,c
  1723   000E5A  D005               	goto	l1682
  1724   000E5C  5005               	movf	___awdiv@divisor^0,w,c
  1725   000E5E  5E03               	subwf	___awdiv@dividend^0,f,c
  1726   000E60  5006               	movf	(___awdiv@divisor+1)^0,w,c
  1727   000E62  5A04               	subwfb	(___awdiv@dividend+1)^0,f,c
  1728   000E64  8009               	bsf	___awdiv@quotient^0,0,c
  1729   000E66                     l1682:
  1730   000E66  90D8               	bcf	status,0,c
  1731   000E68  3206               	rrcf	(___awdiv@divisor+1)^0,f,c
  1732   000E6A  3205               	rrcf	___awdiv@divisor^0,f,c
  1733   000E6C  2E07               	decfsz	___awdiv@counter^0,f,c
  1734   000E6E  D7ED               	goto	u620
  1735   000E70                     l1686:
  1736   000E70  5008               	movf	___awdiv@sign^0,w,c
  1737   000E72  B4D8               	btfsc	status,2,c
  1738   000E74  D004               	goto	l1690
  1739   000E76  6C09               	negf	___awdiv@quotient^0,c
  1740   000E78  1E0A               	comf	(___awdiv@quotient+1)^0,f,c
  1741   000E7A  B0D8               	btfsc	status,0,c
  1742   000E7C  2A0A               	incf	(___awdiv@quotient+1)^0,f,c
  1743   000E7E                     l1690:
  1744   000E7E  C009  F003         	movff	___awdiv@quotient,?___awdiv
  1745   000E82  C00A  F004         	movff	___awdiv@quotient+1,?___awdiv+1
  1746   000E86  0012               	return		;funcret
  1747   000E88                     __end_of___awdiv:
  1748                           	callstack 0
  1749                           
  1750 ;; *************** function _Transmitir *****************
  1751 ;; Defined at:
  1752 ;;		line 165 in file "Laboratorio5.c"
  1753 ;; Parameters:    Size  Location     Type
  1754 ;;  BufferT         1    wreg     unsigned char 
  1755 ;; Auto vars:     Size  Location     Type
  1756 ;;  BufferT         1    2[COMRAM] unsigned char 
  1757 ;; Return value:  Size  Location     Type
  1758 ;;                  1    wreg      void 
  1759 ;; Registers used:
  1760 ;;		wreg
  1761 ;; Tracked objects:
  1762 ;;		On entry : 0/0
  1763 ;;		On exit  : 0/0
  1764 ;;		Unchanged: 0/0
  1765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1766 ;;      Params:         0       0       0       0       0       0       0       0       0
  1767 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1768 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1769 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1770 ;;Total ram usage:        1 bytes
  1771 ;; Hardware stack levels used: 1
  1772 ;; Hardware stack levels required when called: 2
  1773 ;; This function calls:
  1774 ;;		Nothing
  1775 ;; This function is called by:
  1776 ;;		_TransmitirDatos
  1777 ;; This function uses a non-reentrant model
  1778 ;;
  1779                           
  1780                           	psect	text9
  1781   0011EC                     __ptext9:
  1782                           	callstack 0
  1783   0011EC                     _Transmitir:
  1784                           	callstack 27
  1785                           
  1786                           ;incstack = 0
  1787                           ;Transmitir@BufferT stored from wreg
  1788   0011EC  6E03               	movwf	Transmitir@BufferT^0,c
  1789   0011EE                     
  1790                           ;Laboratorio5.c: 166: while (TRMT == 0);
  1791   0011EE  A2AC               	btfss	4012,1,c	;volatile
  1792   0011F0  D7FE               	goto	l1156
  1793                           
  1794                           ;Laboratorio5.c: 167: TXREG = BufferT;
  1795   0011F2  C003  FFAD         	movff	Transmitir@BufferT,4013	;volatile
  1796   0011F6  0012               	return		;funcret
  1797   0011F8                     __end_of_Transmitir:
  1798                           	callstack 0
  1799                           
  1800 ;; *************** function _MensajeLCD_Word *****************
  1801 ;; Defined at:
  1802 ;;		line 247 in file "LibLCDXC8.h"
  1803 ;; Parameters:    Size  Location     Type
  1804 ;;  a               1    6[COMRAM] PTR unsigned char 
  1805 ;;		 -> STR_4(5), STR_3(6), STR_2(10), STR_1(13), 
  1806 ;; Auto vars:     Size  Location     Type
  1807 ;;  i               2    8[COMRAM] int 
  1808 ;; Return value:  Size  Location     Type
  1809 ;;                  1    wreg      void 
  1810 ;; Registers used:
  1811 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1812 ;; Tracked objects:
  1813 ;;		On entry : 0/0
  1814 ;;		On exit  : 0/0
  1815 ;;		Unchanged: 0/0
  1816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1817 ;;      Params:         1       0       0       0       0       0       0       0       0
  1818 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1819 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1820 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1821 ;;Total ram usage:        4 bytes
  1822 ;; Hardware stack levels used: 1
  1823 ;; Hardware stack levels required when called: 5
  1824 ;; This function calls:
  1825 ;;		_EscribeLCD_c
  1826 ;; This function is called by:
  1827 ;;		_main
  1828 ;;		_TransmitirDatos
  1829 ;; This function uses a non-reentrant model
  1830 ;;
  1831                           
  1832                           	psect	text10
  1833   000F40                     __ptext10:
  1834                           	callstack 0
  1835   000F40                     _MensajeLCD_Word:
  1836                           	callstack 24
  1837                           
  1838                           ;LibLCDXC8.h: 251: for(int i = 0; i<16; i++){
  1839                           
  1840                           ;incstack = 0
  1841   000F40  0E00               	movlw	0
  1842   000F42  6E0A               	movwf	(MensajeLCD_Word@i+1)^0,c
  1843   000F44  0E00               	movlw	0
  1844   000F46  6E09               	movwf	MensajeLCD_Word@i^0,c
  1845   000F48                     l1634:
  1846                           
  1847                           ;LibLCDXC8.h: 252: if(a[i] == (0)){
  1848   000F48  5007               	movf	MensajeLCD_Word@a^0,w,c
  1849   000F4A  2409               	addwf	MensajeLCD_Word@i^0,w,c
  1850   000F4C  6E08               	movwf	??_MensajeLCD_Word^0,c
  1851   000F4E  C008  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  1852   000F52                     	if	1	;There is more than 1 active tblptr byte
  1853   000F52  0E08               	movlw	high __smallconst
  1854   000F54  6EF7               	movwf	tblptrh,c
  1855   000F56                     	endif
  1856   000F56                     	if	0	;tblptru may be non-zero
  1857   000F56                     	endif
  1858   000F56                     	if	0	;tblptru may be non-zero
  1859   000F56                     	endif
  1860   000F56  0008               	tblrd		*
  1861   000F58  50F5               	movf	tablat,w,c
  1862   000F5A  0900               	iorlw	0
  1863   000F5C  B4D8               	btfsc	status,2,c
  1864   000F5E  0012               	return	
  1865                           
  1866                           ;LibLCDXC8.h: 254: };LibLCDXC8.h: 255: EscribeLCD_c(a[i]);
  1867   000F60  5007               	movf	MensajeLCD_Word@a^0,w,c
  1868   000F62  2409               	addwf	MensajeLCD_Word@i^0,w,c
  1869   000F64  6E08               	movwf	??_MensajeLCD_Word^0,c
  1870   000F66  C008  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  1871   000F6A                     	if	1	;There is more than 1 active tblptr byte
  1872   000F6A  0E08               	movlw	high __smallconst
  1873   000F6C  6EF7               	movwf	tblptrh,c
  1874   000F6E                     	endif
  1875   000F6E                     	if	0	;tblptru may be non-zero
  1876   000F6E                     	endif
  1877   000F6E                     	if	0	;tblptru may be non-zero
  1878   000F6E                     	endif
  1879   000F6E  0008               	tblrd		*
  1880   000F70  50F5               	movf	tablat,w,c
  1881   000F72  ECBE  F008         	call	_EscribeLCD_c
  1882   000F76  4A09               	infsnz	MensajeLCD_Word@i^0,f,c
  1883   000F78  2A0A               	incf	(MensajeLCD_Word@i+1)^0,f,c
  1884   000F7A  BE0A               	btfsc	(MensajeLCD_Word@i+1)^0,7,c
  1885   000F7C  D7E5               	goto	l1634
  1886   000F7E  500A               	movf	(MensajeLCD_Word@i+1)^0,w,c
  1887   000F80  E105               	bnz	u580
  1888   000F82  0E10               	movlw	16
  1889   000F84  5C09               	subwf	MensajeLCD_Word@i^0,w,c
  1890   000F86  B0D8               	btfsc	status,0,c
  1891   000F88  0012               	return	
  1892   000F8A  D7DE               	goto	l1634
  1893   000F8C                     u580:
  1894   000F8C  0012               	return		;funcret
  1895   000F8E                     __end_of_MensajeLCD_Word:
  1896                           	callstack 0
  1897                           
  1898 ;; *************** function _EscribeLCD_c *****************
  1899 ;; Defined at:
  1900 ;;		line 148 in file "LibLCDXC8.h"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;  a               1    wreg     unsigned char 
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;  a               1    5[COMRAM] unsigned char 
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  1    wreg      void 
  1907 ;; Registers used:
  1908 ;;		wreg, status,2, status,0, cstack
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1914 ;;      Params:         0       0       0       0       0       0       0       0       0
  1915 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1916 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1917 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1918 ;;Total ram usage:        1 bytes
  1919 ;; Hardware stack levels used: 1
  1920 ;; Hardware stack levels required when called: 4
  1921 ;; This function calls:
  1922 ;;		_EnviaDato
  1923 ;;		_HabilitaLCD
  1924 ;;		_RetardoLCD
  1925 ;; This function is called by:
  1926 ;;		_MensajeLCD_Word
  1927 ;;		_main
  1928 ;;		_TransmitirDatos
  1929 ;; This function uses a non-reentrant model
  1930 ;;
  1931                           
  1932                           	psect	text11
  1933   00117C                     __ptext11:
  1934                           	callstack 0
  1935   00117C                     _EscribeLCD_c:
  1936                           	callstack 24
  1937                           
  1938                           ;incstack = 0
  1939                           ;EscribeLCD_c@a stored from wreg
  1940   00117C  6E06               	movwf	EscribeLCD_c@a^0,c
  1941                           
  1942                           ;LibLCDXC8.h: 152: LATE0=1;
  1943   00117E  808D               	bsf	3981,0,c	;volatile
  1944                           
  1945                           ;LibLCDXC8.h: 153: EnviaDato(a);
  1946   001180  5006               	movf	EscribeLCD_c@a^0,w,c
  1947   001182  ECFC  F008         	call	_EnviaDato
  1948                           
  1949                           ;LibLCDXC8.h: 154: HabilitaLCD();
  1950   001186  ECEF  F008         	call	_HabilitaLCD	;wreg free
  1951                           
  1952                           ;LibLCDXC8.h: 155: RetardoLCD(4);
  1953   00118A  0E04               	movlw	4
  1954   00118C  EC44  F007         	call	_RetardoLCD
  1955   001190  0012               	return		;funcret
  1956   001192                     __end_of_EscribeLCD_c:
  1957                           	callstack 0
  1958                           
  1959 ;; *************** function _DireccionaLCD *****************
  1960 ;; Defined at:
  1961 ;;		line 259 in file "LibLCDXC8.h"
  1962 ;; Parameters:    Size  Location     Type
  1963 ;;  a               1    wreg     unsigned char 
  1964 ;; Auto vars:     Size  Location     Type
  1965 ;;  a               1    5[COMRAM] unsigned char 
  1966 ;; Return value:  Size  Location     Type
  1967 ;;                  1    wreg      void 
  1968 ;; Registers used:
  1969 ;;		wreg, status,2, status,0, cstack
  1970 ;; Tracked objects:
  1971 ;;		On entry : 0/0
  1972 ;;		On exit  : 0/0
  1973 ;;		Unchanged: 0/0
  1974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1975 ;;      Params:         0       0       0       0       0       0       0       0       0
  1976 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1977 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1978 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1979 ;;Total ram usage:        1 bytes
  1980 ;; Hardware stack levels used: 1
  1981 ;; Hardware stack levels required when called: 4
  1982 ;; This function calls:
  1983 ;;		_EnviaDato
  1984 ;;		_HabilitaLCD
  1985 ;;		_RetardoLCD
  1986 ;; This function is called by:
  1987 ;;		_main
  1988 ;;		_TransmitirDatos
  1989 ;; This function uses a non-reentrant model
  1990 ;;
  1991                           
  1992                           	psect	text12
  1993   001192                     __ptext12:
  1994                           	callstack 0
  1995   001192                     _DireccionaLCD:
  1996                           	callstack 25
  1997                           
  1998                           ;incstack = 0
  1999                           ;DireccionaLCD@a stored from wreg
  2000   001192  6E06               	movwf	DireccionaLCD@a^0,c
  2001                           
  2002                           ;LibLCDXC8.h: 262: LATE0=0;
  2003   001194  908D               	bcf	3981,0,c	;volatile
  2004                           
  2005                           ;LibLCDXC8.h: 263: EnviaDato(a);
  2006   001196  5006               	movf	DireccionaLCD@a^0,w,c
  2007   001198  ECFC  F008         	call	_EnviaDato
  2008                           
  2009                           ;LibLCDXC8.h: 264: HabilitaLCD();
  2010   00119C  ECEF  F008         	call	_HabilitaLCD	;wreg free
  2011                           
  2012                           ;LibLCDXC8.h: 265: RetardoLCD(4);
  2013   0011A0  0E04               	movlw	4
  2014   0011A2  EC44  F007         	call	_RetardoLCD
  2015   0011A6  0012               	return		;funcret
  2016   0011A8                     __end_of_DireccionaLCD:
  2017                           	callstack 0
  2018                           
  2019 ;; *************** function _LeerHT11 *****************
  2020 ;; Defined at:
  2021 ;;		line 118 in file "Laboratorio5.c"
  2022 ;; Parameters:    Size  Location     Type
  2023 ;;		None
  2024 ;; Auto vars:     Size  Location     Type
  2025 ;;		None
  2026 ;; Return value:  Size  Location     Type
  2027 ;;                  1    wreg      void 
  2028 ;; Registers used:
  2029 ;;		wreg, status,2, status,0, cstack
  2030 ;; Tracked objects:
  2031 ;;		On entry : 0/0
  2032 ;;		On exit  : 0/0
  2033 ;;		Unchanged: 0/0
  2034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2035 ;;      Params:         0       0       0       0       0       0       0       0       0
  2036 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2037 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2038 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2039 ;;Total ram usage:        1 bytes
  2040 ;; Hardware stack levels used: 1
  2041 ;; Hardware stack levels required when called: 4
  2042 ;; This function calls:
  2043 ;;		_LeerByte
  2044 ;; This function is called by:
  2045 ;;		_main
  2046 ;; This function uses a non-reentrant model
  2047 ;;
  2048                           
  2049                           	psect	text13
  2050   001012                     __ptext13:
  2051                           	callstack 0
  2052   001012                     _LeerHT11:
  2053                           	callstack 26
  2054                           
  2055                           ;Laboratorio5.c: 120: TRISC2 = 0;
  2056                           
  2057                           ;incstack = 0
  2058   001012  9494               	bcf	3988,2,c	;volatile
  2059                           
  2060                           ;Laboratorio5.c: 121: _delay((unsigned long)((18)*(8000000/4000.0)));
  2061   001014  0E2F               	movlw	47
  2062   001016  6E07               	movwf	??_LeerHT11^0,c
  2063   001018  0EC0               	movlw	192
  2064   00101A                     u1077:
  2065   00101A  2EE8               	decfsz	wreg,f,c
  2066   00101C  D7FE               	bra	u1077
  2067   00101E  2E07               	decfsz	??_LeerHT11^0,f,c
  2068   001020  D7FC               	bra	u1077
  2069                           
  2070                           ;Laboratorio5.c: 122: TRISC2 = 1;
  2071   001022  8494               	bsf	3988,2,c	;volatile
  2072   001024                     l213:
  2073   001024  B482               	btfsc	3970,2,c	;volatile
  2074   001026  D7FE               	goto	l213
  2075                           
  2076                           ;Laboratorio5.c: 125: _delay((unsigned long)((120)*(8000000/4000000.0)));
  2077   001028  0E50               	movlw	80
  2078   00102A                     u1087:
  2079   00102A  2EE8               	decfsz	wreg,f,c
  2080   00102C  D7FE               	bra	u1087
  2081   00102E                     l216:
  2082   00102E  B482               	btfsc	3970,2,c	;volatile
  2083   001030  D7FE               	goto	l216
  2084                           
  2085                           ;Laboratorio5.c: 128: Hum = LeerByte();
  2086   001032  ECAD  F008         	call	_LeerByte	;wreg free
  2087   001036  6E1F               	movwf	_Hum^0,c
  2088                           
  2089                           ;Laboratorio5.c: 129: LeerByte();
  2090   001038  ECAD  F008         	call	_LeerByte	;wreg free
  2091                           
  2092                           ;Laboratorio5.c: 130: Temp = LeerByte();
  2093   00103C  ECAD  F008         	call	_LeerByte	;wreg free
  2094   001040  6E20               	movwf	_Temp^0,c
  2095                           
  2096                           ;Laboratorio5.c: 131: LeerByte();
  2097   001042  ECAD  F008         	call	_LeerByte	;wreg free
  2098                           
  2099                           ;Laboratorio5.c: 132: Che = LeerByte();
  2100   001046  ECAD  F008         	call	_LeerByte	;wreg free
  2101   00104A  6E1E               	movwf	_Che^0,c
  2102   00104C  0012               	return		;funcret
  2103   00104E                     __end_of_LeerHT11:
  2104                           	callstack 0
  2105                           
  2106 ;; *************** function _LeerByte *****************
  2107 ;; Defined at:
  2108 ;;		line 137 in file "Laboratorio5.c"
  2109 ;; Parameters:    Size  Location     Type
  2110 ;;		None
  2111 ;; Auto vars:     Size  Location     Type
  2112 ;;  i               1    5[COMRAM] unsigned char 
  2113 ;;  res             1    4[COMRAM] unsigned char 
  2114 ;; Return value:  Size  Location     Type
  2115 ;;                  1    wreg      unsigned char 
  2116 ;; Registers used:
  2117 ;;		wreg, status,2, status,0, cstack
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2123 ;;      Params:         0       0       0       0       0       0       0       0       0
  2124 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2125 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2126 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2127 ;;Total ram usage:        3 bytes
  2128 ;; Hardware stack levels used: 1
  2129 ;; Hardware stack levels required when called: 3
  2130 ;; This function calls:
  2131 ;;		_LeerBit
  2132 ;; This function is called by:
  2133 ;;		_LeerHT11
  2134 ;; This function uses a non-reentrant model
  2135 ;;
  2136                           
  2137                           	psect	text14
  2138   00115A                     __ptext14:
  2139                           	callstack 0
  2140   00115A                     _LeerByte:
  2141                           	callstack 26
  2142                           
  2143                           ;Laboratorio5.c: 138: unsigned char res = 0, i;
  2144                           
  2145                           ;incstack = 0
  2146   00115A  0E00               	movlw	0
  2147   00115C  6E05               	movwf	LeerByte@res^0,c
  2148                           
  2149                           ;Laboratorio5.c: 139: for (i = 8; i > 0; i--) {
  2150   00115E  0E08               	movlw	8
  2151   001160  6E06               	movwf	LeerByte@i^0,c
  2152   001162                     l1146:
  2153                           
  2154                           ;Laboratorio5.c: 140: res = (res << 1) | LeerBit();
  2155   001162  EC44  F008         	call	_LeerBit	;wreg free
  2156   001166  6E04               	movwf	??_LeerByte^0,c
  2157   001168  5005               	movf	LeerByte@res^0,w,c
  2158   00116A  2405               	addwf	LeerByte@res^0,w,c
  2159   00116C  1004               	iorwf	??_LeerByte^0,w,c
  2160   00116E  6E05               	movwf	LeerByte@res^0,c
  2161   001170  0606               	decf	LeerByte@i^0,f,c
  2162   001172  5006               	movf	LeerByte@i^0,w,c
  2163   001174  A4D8               	btfss	status,2,c
  2164   001176  D7F5               	goto	l1146
  2165                           
  2166                           ;Laboratorio5.c: 141: };Laboratorio5.c: 142: return res;
  2167   001178  5005               	movf	LeerByte@res^0,w,c
  2168   00117A  0012               	return		;funcret
  2169   00117C                     __end_of_LeerByte:
  2170                           	callstack 0
  2171                           
  2172 ;; *************** function _LeerBit *****************
  2173 ;; Defined at:
  2174 ;;		line 145 in file "Laboratorio5.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;		None
  2177 ;; Auto vars:     Size  Location     Type
  2178 ;;  res             1    2[COMRAM] unsigned char 
  2179 ;; Return value:  Size  Location     Type
  2180 ;;                  1    wreg      unsigned char 
  2181 ;; Registers used:
  2182 ;;		wreg, status,2
  2183 ;; Tracked objects:
  2184 ;;		On entry : 0/0
  2185 ;;		On exit  : 0/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2188 ;;      Params:         0       0       0       0       0       0       0       0       0
  2189 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2190 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2191 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2192 ;;Total ram usage:        1 bytes
  2193 ;; Hardware stack levels used: 1
  2194 ;; Hardware stack levels required when called: 2
  2195 ;; This function calls:
  2196 ;;		Nothing
  2197 ;; This function is called by:
  2198 ;;		_LeerByte
  2199 ;; This function uses a non-reentrant model
  2200 ;;
  2201                           
  2202                           	psect	text15
  2203   001088                     __ptext15:
  2204                           	callstack 0
  2205   001088                     _LeerBit:
  2206                           	callstack 26
  2207                           
  2208                           ;Laboratorio5.c: 146: unsigned char res = 0;
  2209                           
  2210                           ;incstack = 0
  2211   001088  0E00               	movlw	0
  2212   00108A  6E03               	movwf	LeerBit@res^0,c
  2213   00108C                     l227:
  2214   00108C  A482               	btfss	3970,2,c	;volatile
  2215   00108E  D7FE               	goto	l227
  2216                           
  2217                           ;Laboratorio5.c: 148: _delay((unsigned long)((13)*(8000000/4000000.0)));
  2218   001090  0E08               	movlw	8
  2219   001092                     u1097:
  2220   001092  2EE8               	decfsz	wreg,f,c
  2221   001094  D7FE               	bra	u1097
  2222   001096  D000               	nop2	
  2223                           
  2224                           ;Laboratorio5.c: 149: if (RC2 == 1) res = 0;
  2225   001098  A482               	btfss	3970,2,c	;volatile
  2226   00109A  D002               	goto	l1102
  2227   00109C  0E00               	movlw	0
  2228   00109E  6E03               	movwf	LeerBit@res^0,c
  2229   0010A0                     l1102:
  2230                           
  2231                           ;Laboratorio5.c: 150: _delay((unsigned long)((22)*(8000000/4000000.0)));
  2232   0010A0  0E0E               	movlw	14
  2233   0010A2                     u1107:
  2234   0010A2  2EE8               	decfsz	wreg,f,c
  2235   0010A4  D7FE               	bra	u1107
  2236   0010A6  D000               	nop2	
  2237                           
  2238                           ;Laboratorio5.c: 151: if (RC2 == 1) {
  2239   0010A8  A482               	btfss	3970,2,c	;volatile
  2240   0010AA  D004               	goto	u40
  2241                           
  2242                           ;Laboratorio5.c: 152: res = 1;
  2243   0010AC  0E01               	movlw	1
  2244   0010AE  6E03               	movwf	LeerBit@res^0,c
  2245   0010B0                     l232:
  2246   0010B0  B482               	btfsc	3970,2,c	;volatile
  2247   0010B2  D7FE               	goto	l232
  2248   0010B4                     u40:
  2249                           
  2250                           ;Laboratorio5.c: 154: };Laboratorio5.c: 155: return res;
  2251   0010B4  5003               	movf	LeerBit@res^0,w,c
  2252   0010B6  0012               	return		;funcret
  2253   0010B8                     __end_of_LeerBit:
  2254                           	callstack 0
  2255                           
  2256 ;; *************** function _InicializaLCD *****************
  2257 ;; Defined at:
  2258 ;;		line 70 in file "LibLCDXC8.h"
  2259 ;; Parameters:    Size  Location     Type
  2260 ;;		None
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;		None
  2263 ;; Return value:  Size  Location     Type
  2264 ;;                  1    wreg      void 
  2265 ;; Registers used:
  2266 ;;		wreg, status,2, status,0, cstack
  2267 ;; Tracked objects:
  2268 ;;		On entry : 0/0
  2269 ;;		On exit  : 0/0
  2270 ;;		Unchanged: 0/0
  2271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2272 ;;      Params:         0       0       0       0       0       0       0       0       0
  2273 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2274 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2275 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2276 ;;Total ram usage:        0 bytes
  2277 ;; Hardware stack levels used: 1
  2278 ;; Hardware stack levels required when called: 5
  2279 ;; This function calls:
  2280 ;;		_BorraLCD
  2281 ;;		_EnviaDato
  2282 ;;		_HabilitaLCD
  2283 ;;		_RetardoLCD
  2284 ;; This function is called by:
  2285 ;;		_main
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289                           	psect	text16
  2290   000FD0                     __ptext16:
  2291                           	callstack 0
  2292   000FD0                     _InicializaLCD:
  2293                           	callstack 25
  2294                           
  2295                           ;LibLCDXC8.h: 72: LATE0=0;
  2296                           
  2297                           ;incstack = 0
  2298   000FD0  908D               	bcf	3981,0,c	;volatile
  2299                           
  2300                           ;LibLCDXC8.h: 75: else;LibLCDXC8.h: 76: LATD=0x3F;
  2301                           
  2302                           ;LibLCDXC8.h: 73: if(interfaz==4)
  2303   000FD2  0E3F               	movlw	63
  2304   000FD4  6E8C               	movwf	140,c	;volatile
  2305                           
  2306                           ;LibLCDXC8.h: 77: HabilitaLCD();
  2307   000FD6  ECEF  F008         	call	_HabilitaLCD	;wreg free
  2308                           
  2309                           ;LibLCDXC8.h: 78: RetardoLCD(1);
  2310   000FDA  0E01               	movlw	1
  2311   000FDC  EC44  F007         	call	_RetardoLCD
  2312                           
  2313                           ;LibLCDXC8.h: 81: else;LibLCDXC8.h: 82: LATD=0x3F;
  2314                           
  2315                           ;LibLCDXC8.h: 79: if(interfaz==4)
  2316   000FE0  0E3F               	movlw	63
  2317   000FE2  6E8C               	movwf	140,c	;volatile
  2318                           
  2319                           ;LibLCDXC8.h: 83: HabilitaLCD();
  2320   000FE4  ECEF  F008         	call	_HabilitaLCD	;wreg free
  2321                           
  2322                           ;LibLCDXC8.h: 84: RetardoLCD(3);
  2323   000FE8  0E03               	movlw	3
  2324   000FEA  EC44  F007         	call	_RetardoLCD
  2325                           
  2326                           ;LibLCDXC8.h: 87: else;LibLCDXC8.h: 88: LATD=0x3F;
  2327                           
  2328                           ;LibLCDXC8.h: 85: if(interfaz==4)
  2329   000FEE  0E3F               	movlw	63
  2330   000FF0  6E8C               	movwf	140,c	;volatile
  2331                           
  2332                           ;LibLCDXC8.h: 89: HabilitaLCD();
  2333   000FF2  ECEF  F008         	call	_HabilitaLCD	;wreg free
  2334                           
  2335                           ;LibLCDXC8.h: 90: RetardoLCD(4);
  2336   000FF6  0E04               	movlw	4
  2337   000FF8  EC44  F007         	call	_RetardoLCD
  2338                           
  2339                           ;LibLCDXC8.h: 98: };LibLCDXC8.h: 99: BorraLCD();
  2340                           
  2341                           ;LibLCDXC8.h: 91: if(interfaz==4){
  2342   000FFC  ECD4  F008         	call	_BorraLCD	;wreg free
  2343                           
  2344                           ;LibLCDXC8.h: 100: EnviaDato(0xF);
  2345   001000  0E0F               	movlw	15
  2346   001002  ECFC  F008         	call	_EnviaDato
  2347                           
  2348                           ;LibLCDXC8.h: 101: HabilitaLCD();
  2349   001006  ECEF  F008         	call	_HabilitaLCD	;wreg free
  2350                           
  2351                           ;LibLCDXC8.h: 102: RetardoLCD(4);
  2352   00100A  0E04               	movlw	4
  2353   00100C  EC44  F007         	call	_RetardoLCD
  2354   001010  0012               	return		;funcret
  2355   001012                     __end_of_InicializaLCD:
  2356                           	callstack 0
  2357                           
  2358 ;; *************** function _BorraLCD *****************
  2359 ;; Defined at:
  2360 ;;		line 111 in file "LibLCDXC8.h"
  2361 ;; Parameters:    Size  Location     Type
  2362 ;;		None
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;		None
  2365 ;; Return value:  Size  Location     Type
  2366 ;;                  1    wreg      void 
  2367 ;; Registers used:
  2368 ;;		wreg, status,2, status,0, cstack
  2369 ;; Tracked objects:
  2370 ;;		On entry : 0/0
  2371 ;;		On exit  : 0/0
  2372 ;;		Unchanged: 0/0
  2373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2374 ;;      Params:         0       0       0       0       0       0       0       0       0
  2375 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2376 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2377 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2378 ;;Total ram usage:        0 bytes
  2379 ;; Hardware stack levels used: 1
  2380 ;; Hardware stack levels required when called: 4
  2381 ;; This function calls:
  2382 ;;		_EnviaDato
  2383 ;;		_HabilitaLCD
  2384 ;;		_RetardoLCD
  2385 ;; This function is called by:
  2386 ;;		_InicializaLCD
  2387 ;;		_main
  2388 ;;		_TransmitirDatos
  2389 ;; This function uses a non-reentrant model
  2390 ;;
  2391                           
  2392                           	psect	text17
  2393   0011A8                     __ptext17:
  2394                           	callstack 0
  2395   0011A8                     _BorraLCD:
  2396                           	callstack 25
  2397                           
  2398                           ;LibLCDXC8.h: 113: LATE0=0;
  2399                           
  2400                           ;incstack = 0
  2401   0011A8  908D               	bcf	3981,0,c	;volatile
  2402                           
  2403                           ;LibLCDXC8.h: 114: EnviaDato(0x01);
  2404   0011AA  0E01               	movlw	1
  2405   0011AC  ECFC  F008         	call	_EnviaDato
  2406                           
  2407                           ;LibLCDXC8.h: 115: HabilitaLCD();
  2408   0011B0  ECEF  F008         	call	_HabilitaLCD	;wreg free
  2409                           
  2410                           ;LibLCDXC8.h: 116: RetardoLCD(2);
  2411   0011B4  0E02               	movlw	2
  2412   0011B6  EC44  F007         	call	_RetardoLCD
  2413   0011BA  0012               	return		;funcret
  2414   0011BC                     __end_of_BorraLCD:
  2415                           	callstack 0
  2416                           
  2417 ;; *************** function _EnviaDato *****************
  2418 ;; Defined at:
  2419 ;;		line 58 in file "LibLCDXC8.h"
  2420 ;; Parameters:    Size  Location     Type
  2421 ;;  a               1    wreg     unsigned char 
  2422 ;; Auto vars:     Size  Location     Type
  2423 ;;  a               1    4[COMRAM] unsigned char 
  2424 ;; Return value:  Size  Location     Type
  2425 ;;                  1    wreg      void 
  2426 ;; Registers used:
  2427 ;;		wreg
  2428 ;; Tracked objects:
  2429 ;;		On entry : 0/0
  2430 ;;		On exit  : 0/0
  2431 ;;		Unchanged: 0/0
  2432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2433 ;;      Params:         0       0       0       0       0       0       0       0       0
  2434 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2435 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2436 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2437 ;;Total ram usage:        1 bytes
  2438 ;; Hardware stack levels used: 1
  2439 ;; Hardware stack levels required when called: 3
  2440 ;; This function calls:
  2441 ;;		_HabilitaLCD
  2442 ;;		_RetardoLCD
  2443 ;; This function is called by:
  2444 ;;		_InicializaLCD
  2445 ;;		_BorraLCD
  2446 ;;		_EscribeLCD_c
  2447 ;;		_DireccionaLCD
  2448 ;; This function uses a non-reentrant model
  2449 ;;
  2450                           
  2451                           	psect	text18
  2452   0011F8                     __ptext18:
  2453                           	callstack 0
  2454   0011F8                     _EnviaDato:
  2455                           	callstack 24
  2456                           
  2457                           ;incstack = 0
  2458                           ;EnviaDato@a stored from wreg
  2459   0011F8  6E05               	movwf	EnviaDato@a^0,c
  2460                           
  2461                           ;LibLCDXC8.h: 67: LATD=a;
  2462                           
  2463                           ;LibLCDXC8.h: 59: if(interfaz==4){
  2464   0011FA  C005  FF8C         	movff	EnviaDato@a,3980	;volatile
  2465   0011FE  0012               	return		;funcret
  2466   001200                     __end_of_EnviaDato:
  2467                           	callstack 0
  2468                           
  2469 ;; *************** function _RetardoLCD *****************
  2470 ;; Defined at:
  2471 ;;		line 295 in file "LibLCDXC8.h"
  2472 ;; Parameters:    Size  Location     Type
  2473 ;;  a               1    wreg     unsigned char 
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;  a               1    3[COMRAM] unsigned char 
  2476 ;; Return value:  Size  Location     Type
  2477 ;;                  1    wreg      void 
  2478 ;; Registers used:
  2479 ;;		wreg, status,2, status,0
  2480 ;; Tracked objects:
  2481 ;;		On entry : 0/0
  2482 ;;		On exit  : 0/0
  2483 ;;		Unchanged: 0/0
  2484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2485 ;;      Params:         0       0       0       0       0       0       0       0       0
  2486 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2487 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2488 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2489 ;;Total ram usage:        2 bytes
  2490 ;; Hardware stack levels used: 1
  2491 ;; Hardware stack levels required when called: 2
  2492 ;; This function calls:
  2493 ;;		Nothing
  2494 ;; This function is called by:
  2495 ;;		_EnviaDato
  2496 ;;		_InicializaLCD
  2497 ;;		_BorraLCD
  2498 ;;		_EscribeLCD_c
  2499 ;;		_DireccionaLCD
  2500 ;; This function uses a non-reentrant model
  2501 ;;
  2502                           
  2503                           	psect	text19
  2504   000E88                     __ptext19:
  2505                           	callstack 0
  2506   000E88                     _RetardoLCD:
  2507                           	callstack 25
  2508                           
  2509                           ;incstack = 0
  2510                           ;RetardoLCD@a stored from wreg
  2511   000E88  6E04               	movwf	RetardoLCD@a^0,c
  2512                           
  2513                           ;LibLCDXC8.h: 296: switch(a){
  2514   000E8A  D023               	goto	l1074
  2515   000E8C                     l1064:
  2516   000E8C  0E62               	movlw	98
  2517   000E8E  6E03               	movwf	??_RetardoLCD^0,c
  2518   000E90  0E66               	movlw	102
  2519   000E92                     u1117:
  2520   000E92  2EE8               	decfsz	wreg,f,c
  2521   000E94  D7FE               	bra	u1117
  2522   000E96  2E03               	decfsz	??_RetardoLCD^0,f,c
  2523   000E98  D7FC               	bra	u1117
  2524                           
  2525                           ;LibLCDXC8.h: 299: break;
  2526   000E9A  0012               	return	
  2527   000E9C                     l1066:
  2528   000E9C  0E07               	movlw	7
  2529   000E9E  6E03               	movwf	??_RetardoLCD^0,c
  2530   000EA0  0E7D               	movlw	125
  2531   000EA2                     u1127:
  2532   000EA2  2EE8               	decfsz	wreg,f,c
  2533   000EA4  D7FE               	bra	u1127
  2534   000EA6  2E03               	decfsz	??_RetardoLCD^0,f,c
  2535   000EA8  D7FC               	bra	u1127
  2536   000EAA  F000               	nop	
  2537                           
  2538                           ;LibLCDXC8.h: 301: _delay((unsigned long)((640)*(20000000/4000000.0)));
  2539   000EAC  0E05               	movlw	5
  2540   000EAE  6E03               	movwf	??_RetardoLCD^0,c
  2541   000EB0  0E26               	movlw	38
  2542   000EB2                     u1137:
  2543   000EB2  2EE8               	decfsz	wreg,f,c
  2544   000EB4  D7FE               	bra	u1137
  2545   000EB6  2E03               	decfsz	??_RetardoLCD^0,f,c
  2546   000EB8  D7FC               	bra	u1137
  2547   000EBA  D000               	nop2	
  2548                           
  2549                           ;LibLCDXC8.h: 303: break;
  2550   000EBC  0012               	return	
  2551   000EBE                     l1068:
  2552   000EBE  0EA6               	movlw	166
  2553   000EC0                     u1147:
  2554   000EC0  2EE8               	decfsz	wreg,f,c
  2555   000EC2  D7FE               	bra	u1147
  2556   000EC4  D000               	nop2	
  2557                           
  2558                           ;LibLCDXC8.h: 306: break;
  2559   000EC6  0012               	return	
  2560   000EC8                     l1070:
  2561   000EC8  0E42               	movlw	66
  2562   000ECA                     u1157:
  2563   000ECA  2EE8               	decfsz	wreg,f,c
  2564   000ECC  D7FE               	bra	u1157
  2565   000ECE  D000               	nop2	
  2566                           
  2567                           ;LibLCDXC8.h: 309: break;
  2568   000ED0  0012               	return	
  2569   000ED2                     l1074:
  2570   000ED2  5004               	movf	RetardoLCD@a^0,w,c
  2571                           
  2572                           ; Switch size 1, requested type "simple"
  2573                           ; Number of cases is 4, Range of values is 1 to 4
  2574                           ; switch strategies available:
  2575                           ; Name         Instructions Cycles
  2576                           ; simple_byte           13     7 (average)
  2577                           ;	Chosen strategy is simple_byte
  2578   000ED4  0A01               	xorlw	1	; case 1
  2579   000ED6  B4D8               	btfsc	status,2,c
  2580   000ED8  D7D9               	goto	l1064
  2581   000EDA  0A03               	xorlw	3	; case 2
  2582   000EDC  B4D8               	btfsc	status,2,c
  2583   000EDE  D7DE               	goto	l1066
  2584   000EE0  0A01               	xorlw	1	; case 3
  2585   000EE2  B4D8               	btfsc	status,2,c
  2586   000EE4  D7EC               	goto	l1068
  2587   000EE6  0A07               	xorlw	7	; case 4
  2588   000EE8  A4D8               	btfss	status,2,c
  2589   000EEA  0012               	return	
  2590   000EEC  D7ED               	goto	l1070
  2591   000EEE                     __end_of_RetardoLCD:
  2592                           	callstack 0
  2593                           
  2594 ;; *************** function _HabilitaLCD *****************
  2595 ;; Defined at:
  2596 ;;		line 104 in file "LibLCDXC8.h"
  2597 ;; Parameters:    Size  Location     Type
  2598 ;;		None
  2599 ;; Auto vars:     Size  Location     Type
  2600 ;;		None
  2601 ;; Return value:  Size  Location     Type
  2602 ;;                  1    wreg      void 
  2603 ;; Registers used:
  2604 ;;		wreg
  2605 ;; Tracked objects:
  2606 ;;		On entry : 0/0
  2607 ;;		On exit  : 0/0
  2608 ;;		Unchanged: 0/0
  2609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2610 ;;      Params:         0       0       0       0       0       0       0       0       0
  2611 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2612 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2613 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2614 ;;Total ram usage:        0 bytes
  2615 ;; Hardware stack levels used: 1
  2616 ;; Hardware stack levels required when called: 2
  2617 ;; This function calls:
  2618 ;;		Nothing
  2619 ;; This function is called by:
  2620 ;;		_EnviaDato
  2621 ;;		_InicializaLCD
  2622 ;;		_BorraLCD
  2623 ;;		_EscribeLCD_c
  2624 ;;		_DireccionaLCD
  2625 ;; This function uses a non-reentrant model
  2626 ;;
  2627                           
  2628                           	psect	text20
  2629   0011DE                     __ptext20:
  2630                           	callstack 0
  2631   0011DE                     _HabilitaLCD:
  2632                           	callstack 25
  2633                           
  2634                           ;LibLCDXC8.h: 106: LATE2=1;
  2635                           
  2636                           ;incstack = 0
  2637   0011DE  848D               	bsf	3981,2,c	;volatile
  2638                           
  2639                           ;LibLCDXC8.h: 107: _delay((unsigned long)((40)*(20000000/4000000.0)));
  2640   0011E0  0E42               	movlw	66
  2641   0011E2                     u1167:
  2642   0011E2  2EE8               	decfsz	wreg,f,c
  2643   0011E4  D7FE               	bra	u1167
  2644   0011E6  D000               	nop2	
  2645                           
  2646                           ;LibLCDXC8.h: 109: LATE2=0;
  2647   0011E8  948D               	bcf	3981,2,c	;volatile
  2648   0011EA  0012               	return		;funcret
  2649   0011EC                     __end_of_HabilitaLCD:
  2650                           	callstack 0
  2651                           
  2652 ;; *************** function _GuardarDatoEnEEPROM *****************
  2653 ;; Defined at:
  2654 ;;		line 288 in file "Laboratorio5.c"
  2655 ;; Parameters:    Size  Location     Type
  2656 ;;  dir             2    2[COMRAM] unsigned int 
  2657 ;;  dato            1    4[COMRAM] unsigned char 
  2658 ;; Auto vars:     Size  Location     Type
  2659 ;;		None
  2660 ;; Return value:  Size  Location     Type
  2661 ;;                  1    wreg      void 
  2662 ;; Registers used:
  2663 ;;		wreg, status,2
  2664 ;; Tracked objects:
  2665 ;;		On entry : 0/0
  2666 ;;		On exit  : 0/0
  2667 ;;		Unchanged: 0/0
  2668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2669 ;;      Params:         3       0       0       0       0       0       0       0       0
  2670 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2671 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2672 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2673 ;;Total ram usage:        3 bytes
  2674 ;; Hardware stack levels used: 1
  2675 ;; Hardware stack levels required when called: 2
  2676 ;; This function calls:
  2677 ;;		Nothing
  2678 ;; This function is called by:
  2679 ;;		_main
  2680 ;; This function uses a non-reentrant model
  2681 ;;
  2682                           
  2683                           	psect	text21
  2684   001134                     __ptext21:
  2685                           	callstack 0
  2686   001134                     _GuardarDatoEnEEPROM:
  2687                           	callstack 28
  2688                           
  2689                           ;Laboratorio5.c: 289: EEADR = dir;
  2690                           
  2691                           ;incstack = 0
  2692   001134  C003  FFA9         	movff	GuardarDatoEnEEPROM@dir,4009	;volatile
  2693                           
  2694                           ;Laboratorio5.c: 290: EEDATA = dato;
  2695   001138  C005  FFA8         	movff	GuardarDatoEnEEPROM@dato,4008	;volatile
  2696                           
  2697                           ;Laboratorio5.c: 292: EEPGD = 0;
  2698   00113C  9EA6               	bcf	4006,7,c	;volsfr
  2699                           
  2700                           ;Laboratorio5.c: 293: CFGS = 0;
  2701   00113E  9CA6               	bcf	4006,6,c	;volsfr
  2702                           
  2703                           ;Laboratorio5.c: 294: WREN = 1;
  2704   001140  84A6               	bsf	4006,2,c	;volsfr
  2705                           
  2706                           ;Laboratorio5.c: 296: GIE = 0;
  2707   001142  9EF2               	bcf	4082,7,c	;volatile
  2708                           
  2709                           ;Laboratorio5.c: 298: EECON2 = 0x55;
  2710   001144  0E55               	movlw	85
  2711   001146  6EA7               	movwf	167,c	;volsfr
  2712                           
  2713                           ;Laboratorio5.c: 299: EECON2 = 0xAA;
  2714   001148  0EAA               	movlw	170
  2715   00114A  6EA7               	movwf	167,c	;volsfr
  2716                           
  2717                           ;Laboratorio5.c: 300: WR = 1;
  2718   00114C  82A6               	bsf	4006,1,c	;volsfr
  2719                           
  2720                           ;Laboratorio5.c: 301: GIE = 1;
  2721   00114E  8EF2               	bsf	4082,7,c	;volatile
  2722   001150                     l288:
  2723   001150  A8A1               	btfss	4001,4,c	;volatile
  2724   001152  D7FE               	goto	l288
  2725                           
  2726                           ;Laboratorio5.c: 303: EEIF = 0;
  2727   001154  98A1               	bcf	4001,4,c	;volatile
  2728                           
  2729                           ;Laboratorio5.c: 304: WREN = 0;
  2730   001156  94A6               	bcf	4006,2,c	;volsfr
  2731   001158  0012               	return		;funcret
  2732   00115A                     __end_of_GuardarDatoEnEEPROM:
  2733                           	callstack 0
  2734                           
  2735 ;; *************** function _Conversion *****************
  2736 ;; Defined at:
  2737 ;;		line 281 in file "Laboratorio5.c"
  2738 ;; Parameters:    Size  Location     Type
  2739 ;;  canal           1    wreg     unsigned char 
  2740 ;; Auto vars:     Size  Location     Type
  2741 ;;  canal           1    2[COMRAM] unsigned char 
  2742 ;; Return value:  Size  Location     Type
  2743 ;;                  2   82[None  ] unsigned int 
  2744 ;; Registers used:
  2745 ;;		wreg, status,2, status,0
  2746 ;; Tracked objects:
  2747 ;;		On entry : 0/0
  2748 ;;		On exit  : 0/0
  2749 ;;		Unchanged: 0/0
  2750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2751 ;;      Params:         0       0       0       0       0       0       0       0       0
  2752 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2753 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2754 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2755 ;;Total ram usage:        1 bytes
  2756 ;; Hardware stack levels used: 1
  2757 ;; Hardware stack levels required when called: 2
  2758 ;; This function calls:
  2759 ;;		Nothing
  2760 ;; This function is called by:
  2761 ;;		_main
  2762 ;; This function uses a non-reentrant model
  2763 ;;
  2764                           
  2765                           	psect	text22
  2766   0011BC                     __ptext22:
  2767                           	callstack 0
  2768   0011BC                     _Conversion:
  2769                           	callstack 28
  2770                           
  2771                           ;incstack = 0
  2772                           ;Conversion@canal stored from wreg
  2773   0011BC  6E03               	movwf	Conversion@canal^0,c
  2774                           
  2775                           ;Laboratorio5.c: 282: ADCON0 = 0b00000001 | (canal << 2);
  2776   0011BE  4403               	rlncf	Conversion@canal^0,w,c
  2777   0011C0  46E8               	rlncf	wreg,f,c
  2778   0011C2  0BFC               	andlw	252
  2779   0011C4  0901               	iorlw	1
  2780   0011C6  6EC2               	movwf	194,c	;volatile
  2781                           
  2782                           ;Laboratorio5.c: 283: GO = 1;
  2783   0011C8  82C2               	bsf	4034,1,c	;volatile
  2784   0011CA                     l282:
  2785   0011CA  A2C2               	btfss	4034,1,c	;volatile
  2786   0011CC  0012               	return	
  2787   0011CE  D7FD               	goto	l282
  2788   0011D0                     __end_of_Conversion:
  2789                           	callstack 0
  2790                           
  2791 ;; *************** function _ColorRGB *****************
  2792 ;; Defined at:
  2793 ;;		line 245 in file "Laboratorio5.c"
  2794 ;; Parameters:    Size  Location     Type
  2795 ;;  val             2    2[COMRAM] unsigned int 
  2796 ;; Auto vars:     Size  Location     Type
  2797 ;;		None
  2798 ;; Return value:  Size  Location     Type
  2799 ;;                  1    wreg      void 
  2800 ;; Registers used:
  2801 ;;		wreg, status,2, status,0
  2802 ;; Tracked objects:
  2803 ;;		On entry : 0/0
  2804 ;;		On exit  : 0/0
  2805 ;;		Unchanged: 0/0
  2806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2807 ;;      Params:         2       0       0       0       0       0       0       0       0
  2808 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2809 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2810 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2811 ;;Total ram usage:        2 bytes
  2812 ;; Hardware stack levels used: 1
  2813 ;; Hardware stack levels required when called: 2
  2814 ;; This function calls:
  2815 ;;		Nothing
  2816 ;; This function is called by:
  2817 ;;		_main
  2818 ;; This function uses a non-reentrant model
  2819 ;;
  2820                           
  2821                           	psect	text23
  2822   000C92                     __ptext23:
  2823                           	callstack 0
  2824   000C92                     _ColorRGB:
  2825                           	callstack 28
  2826                           
  2827                           ;Laboratorio5.c: 246: if (val < 22) {
  2828                           
  2829                           ;incstack = 0
  2830   000C92  5004               	movf	(ColorRGB@val+1)^0,w,c
  2831   000C94  E108               	bnz	l1792
  2832   000C96  0E16               	movlw	22
  2833   000C98  5C03               	subwf	ColorRGB@val^0,w,c
  2834   000C9A  B0D8               	btfsc	status,0,c
  2835   000C9C  D004               	goto	l1792
  2836                           
  2837                           ;Laboratorio5.c: 247: LATB7 = 0;
  2838   000C9E  9E8A               	bcf	3978,7,c	;volatile
  2839                           
  2840                           ;Laboratorio5.c: 248: LATB6 = 0;
  2841   000CA0  9C8A               	bcf	3978,6,c	;volatile
  2842                           
  2843                           ;Laboratorio5.c: 249: LATB5 = 0;
  2844   000CA2  9A8A               	bcf	3978,5,c	;volatile
  2845                           
  2846                           ;Laboratorio5.c: 250: } else if (val >= 22 && val < 25) {
  2847   000CA4  0012               	return	
  2848   000CA6                     l1792:
  2849   000CA6  5004               	movf	(ColorRGB@val+1)^0,w,c
  2850   000CA8  E104               	bnz	u770
  2851   000CAA  0E16               	movlw	22
  2852   000CAC  5C03               	subwf	ColorRGB@val^0,w,c
  2853   000CAE  A0D8               	btfss	status,0,c
  2854   000CB0  D00A               	goto	l1798
  2855   000CB2                     u770:
  2856   000CB2  5004               	movf	(ColorRGB@val+1)^0,w,c
  2857   000CB4  E108               	bnz	l1798
  2858   000CB6  0E19               	movlw	25
  2859   000CB8  5C03               	subwf	ColorRGB@val^0,w,c
  2860   000CBA  B0D8               	btfsc	status,0,c
  2861   000CBC  D004               	goto	l1798
  2862                           
  2863                           ;Laboratorio5.c: 251: LATB7 = 1;
  2864   000CBE  8E8A               	bsf	3978,7,c	;volatile
  2865                           
  2866                           ;Laboratorio5.c: 252: LATB6 = 0;
  2867   000CC0  9C8A               	bcf	3978,6,c	;volatile
  2868                           
  2869                           ;Laboratorio5.c: 253: LATB5 = 1;
  2870   000CC2  8A8A               	bsf	3978,5,c	;volatile
  2871                           
  2872                           ;Laboratorio5.c: 254: } else if (val >= 25 && val < 28) {
  2873   000CC4  0012               	return	
  2874   000CC6                     l1798:
  2875   000CC6  5004               	movf	(ColorRGB@val+1)^0,w,c
  2876   000CC8  E104               	bnz	u790
  2877   000CCA  0E19               	movlw	25
  2878   000CCC  5C03               	subwf	ColorRGB@val^0,w,c
  2879   000CCE  A0D8               	btfss	status,0,c
  2880   000CD0  D00A               	goto	l1804
  2881   000CD2                     u790:
  2882   000CD2  5004               	movf	(ColorRGB@val+1)^0,w,c
  2883   000CD4  E108               	bnz	l1804
  2884   000CD6  0E1C               	movlw	28
  2885   000CD8  5C03               	subwf	ColorRGB@val^0,w,c
  2886   000CDA  B0D8               	btfsc	status,0,c
  2887   000CDC  D004               	goto	l1804
  2888                           
  2889                           ;Laboratorio5.c: 255: LATB7 = 0;
  2890   000CDE  9E8A               	bcf	3978,7,c	;volatile
  2891                           
  2892                           ;Laboratorio5.c: 256: LATB6 = 0;
  2893   000CE0  9C8A               	bcf	3978,6,c	;volatile
  2894                           
  2895                           ;Laboratorio5.c: 257: LATB5 = 1;
  2896   000CE2  8A8A               	bsf	3978,5,c	;volatile
  2897                           
  2898                           ;Laboratorio5.c: 258: } else if (val >= 28 && val < 31) {
  2899   000CE4  0012               	return	
  2900   000CE6                     l1804:
  2901   000CE6  5004               	movf	(ColorRGB@val+1)^0,w,c
  2902   000CE8  E104               	bnz	u810
  2903   000CEA  0E1C               	movlw	28
  2904   000CEC  5C03               	subwf	ColorRGB@val^0,w,c
  2905   000CEE  A0D8               	btfss	status,0,c
  2906   000CF0  D00A               	goto	l1810
  2907   000CF2                     u810:
  2908   000CF2  5004               	movf	(ColorRGB@val+1)^0,w,c
  2909   000CF4  E108               	bnz	l1810
  2910   000CF6  0E1F               	movlw	31
  2911   000CF8  5C03               	subwf	ColorRGB@val^0,w,c
  2912   000CFA  B0D8               	btfsc	status,0,c
  2913   000CFC  D004               	goto	l1810
  2914                           
  2915                           ;Laboratorio5.c: 259: LATB7 = 0;
  2916   000CFE  9E8A               	bcf	3978,7,c	;volatile
  2917                           
  2918                           ;Laboratorio5.c: 260: LATB6 = 1;
  2919   000D00  8C8A               	bsf	3978,6,c	;volatile
  2920                           
  2921                           ;Laboratorio5.c: 261: LATB5 = 1;
  2922   000D02  8A8A               	bsf	3978,5,c	;volatile
  2923                           
  2924                           ;Laboratorio5.c: 262: } else if (val >= 31 && val < 34) {
  2925   000D04  0012               	return	
  2926   000D06                     l1810:
  2927   000D06  5004               	movf	(ColorRGB@val+1)^0,w,c
  2928   000D08  E104               	bnz	u830
  2929   000D0A  0E1F               	movlw	31
  2930   000D0C  5C03               	subwf	ColorRGB@val^0,w,c
  2931   000D0E  A0D8               	btfss	status,0,c
  2932   000D10  D00A               	goto	l1816
  2933   000D12                     u830:
  2934   000D12  5004               	movf	(ColorRGB@val+1)^0,w,c
  2935   000D14  E108               	bnz	l1816
  2936   000D16  0E22               	movlw	34
  2937   000D18  5C03               	subwf	ColorRGB@val^0,w,c
  2938   000D1A  B0D8               	btfsc	status,0,c
  2939   000D1C  D004               	goto	l1816
  2940                           
  2941                           ;Laboratorio5.c: 263: LATB7 = 0;
  2942   000D1E  9E8A               	bcf	3978,7,c	;volatile
  2943                           
  2944                           ;Laboratorio5.c: 264: LATB6 = 1;
  2945   000D20  8C8A               	bsf	3978,6,c	;volatile
  2946                           
  2947                           ;Laboratorio5.c: 265: LATB5 = 0;
  2948   000D22  9A8A               	bcf	3978,5,c	;volatile
  2949                           
  2950                           ;Laboratorio5.c: 266: } else if (val >= 34 && val < 37) {
  2951   000D24  0012               	return	
  2952   000D26                     l1816:
  2953   000D26  5004               	movf	(ColorRGB@val+1)^0,w,c
  2954   000D28  E104               	bnz	u850
  2955   000D2A  0E22               	movlw	34
  2956   000D2C  5C03               	subwf	ColorRGB@val^0,w,c
  2957   000D2E  A0D8               	btfss	status,0,c
  2958   000D30  D00A               	goto	l1822
  2959   000D32                     u850:
  2960   000D32  5004               	movf	(ColorRGB@val+1)^0,w,c
  2961   000D34  E108               	bnz	l1822
  2962   000D36  0E25               	movlw	37
  2963   000D38  5C03               	subwf	ColorRGB@val^0,w,c
  2964   000D3A  B0D8               	btfsc	status,0,c
  2965   000D3C  D004               	goto	l1822
  2966                           
  2967                           ;Laboratorio5.c: 267: LATB7 = 1;
  2968   000D3E  8E8A               	bsf	3978,7,c	;volatile
  2969                           
  2970                           ;Laboratorio5.c: 268: LATB6 = 1;
  2971   000D40  8C8A               	bsf	3978,6,c	;volatile
  2972                           
  2973                           ;Laboratorio5.c: 269: LATB5 = 0;
  2974   000D42  9A8A               	bcf	3978,5,c	;volatile
  2975                           
  2976                           ;Laboratorio5.c: 270: } else if (val >= 37 && val < 40) {
  2977   000D44  0012               	return	
  2978   000D46                     l1822:
  2979   000D46  5004               	movf	(ColorRGB@val+1)^0,w,c
  2980   000D48  E104               	bnz	u870
  2981   000D4A  0E25               	movlw	37
  2982   000D4C  5C03               	subwf	ColorRGB@val^0,w,c
  2983   000D4E  A0D8               	btfss	status,0,c
  2984   000D50  D00A               	goto	l1828
  2985   000D52                     u870:
  2986   000D52  5004               	movf	(ColorRGB@val+1)^0,w,c
  2987   000D54  E108               	bnz	l1828
  2988   000D56  0E28               	movlw	40
  2989   000D58  5C03               	subwf	ColorRGB@val^0,w,c
  2990   000D5A  B0D8               	btfsc	status,0,c
  2991   000D5C  D004               	goto	l1828
  2992                           
  2993                           ;Laboratorio5.c: 271: LATB7 = 1;
  2994   000D5E  8E8A               	bsf	3978,7,c	;volatile
  2995                           
  2996                           ;Laboratorio5.c: 272: LATB6 = 0;
  2997   000D60  9C8A               	bcf	3978,6,c	;volatile
  2998                           
  2999                           ;Laboratorio5.c: 273: LATB5 = 0;
  3000   000D62  9A8A               	bcf	3978,5,c	;volatile
  3001                           
  3002                           ;Laboratorio5.c: 274: } else if (val >= 40) {
  3003   000D64  0012               	return	
  3004   000D66                     l1828:
  3005   000D66  5004               	movf	(ColorRGB@val+1)^0,w,c
  3006   000D68  E104               	bnz	u890
  3007   000D6A  0E28               	movlw	40
  3008   000D6C  5C03               	subwf	ColorRGB@val^0,w,c
  3009   000D6E  A0D8               	btfss	status,0,c
  3010   000D70  0012               	return	
  3011   000D72                     u890:
  3012                           
  3013                           ;Laboratorio5.c: 275: LATB7 = 1;
  3014   000D72  8E8A               	bsf	3978,7,c	;volatile
  3015                           
  3016                           ;Laboratorio5.c: 276: LATB6 = 1;
  3017   000D74  8C8A               	bsf	3978,6,c	;volatile
  3018                           
  3019                           ;Laboratorio5.c: 277: LATB5 = 1;
  3020   000D76  8A8A               	bsf	3978,5,c	;volatile
  3021   000D78  0012               	return	
  3022   000D7A                     __end_of_ColorRGB:
  3023                           	callstack 0
  3024                           
  3025 ;; *************** function _ISR *****************
  3026 ;; Defined at:
  3027 ;;		line 318 in file "Laboratorio5.c"
  3028 ;; Parameters:    Size  Location     Type
  3029 ;;		None
  3030 ;; Auto vars:     Size  Location     Type
  3031 ;;		None
  3032 ;; Return value:  Size  Location     Type
  3033 ;;                  1    wreg      void 
  3034 ;; Registers used:
  3035 ;;		wreg, status,2, status,0, cstack
  3036 ;; Tracked objects:
  3037 ;;		On entry : 0/0
  3038 ;;		On exit  : 0/0
  3039 ;;		Unchanged: 0/0
  3040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3041 ;;      Params:         0       0       0       0       0       0       0       0       0
  3042 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3043 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3044 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3045 ;;Total ram usage:        2 bytes
  3046 ;; Hardware stack levels used: 1
  3047 ;; Hardware stack levels required when called: 1
  3048 ;; This function calls:
  3049 ;;		_Recibir
  3050 ;; This function is called by:
  3051 ;;		Interrupt level 2
  3052 ;; This function uses a non-reentrant model
  3053 ;;
  3054                           
  3055                           	psect	intcode
  3056   000008                     __pintcode:
  3057                           	callstack 0
  3058   000008                     _ISR:
  3059                           	callstack 24
  3060                           
  3061                           ;incstack = 0
  3062   000008  8222               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3063   00000A  EDBD  F006         	call	int_func,f	;refresh shadow registers
  3064                           
  3065                           	psect	intcode_body
  3066   000D7A                     __pintcode_body:
  3067                           	callstack 24
  3068   000D7A                     int_func:
  3069                           	callstack 24
  3070   000D7A  0006               	pop		; remove dummy address from shadow register refresh
  3071                           
  3072                           ;Laboratorio5.c: 319: if(TMR0IF){
  3073   000D7C  A4F2               	btfss	4082,2,c	;volatile
  3074   000D7E  D00A               	goto	i2l1606
  3075                           
  3076                           ;Laboratorio5.c: 320: TMR0IF=0;
  3077   000D80  94F2               	bcf	4082,2,c	;volatile
  3078                           
  3079                           ;Laboratorio5.c: 321: RC0 = !RC0;
  3080   000D82  B082               	btfsc	3970,0,c	;volatile
  3081   000D84  D002               	goto	i2u54_40
  3082   000D86  8082               	bsf	3970,0,c	;volatile
  3083   000D88  D001               	goto	i2u55_45
  3084   000D8A                     i2u54_40:
  3085   000D8A  9082               	bcf	3970,0,c	;volatile
  3086   000D8C                     i2u55_45:
  3087                           
  3088                           ;Laboratorio5.c: 322: TMR0 = 3036;
  3089   000D8C  0E0B               	movlw	11
  3090   000D8E  6ED7               	movwf	215,c	;volatile
  3091   000D90  0EDC               	movlw	220
  3092   000D92  6ED6               	movwf	214,c	;volatile
  3093   000D94                     i2l1606:
  3094                           
  3095                           ;Laboratorio5.c: 324: };Laboratorio5.c: 325: if(RCIF){
  3096   000D94  BA9E               	btfsc	3998,5,c	;volatile
  3097   000D96  D01A               	goto	i2l1620
  3098   000D98  D033               	goto	i2l308
  3099   000D9A                     i2l1610:
  3100                           
  3101                           ;Laboratorio5.c: 328: A=0;
  3102   000D9A  0E00               	movlw	0
  3103   000D9C  6E1C               	movwf	(_A+1)^0,c
  3104   000D9E  0E00               	movlw	0
  3105   000DA0  6E1B               	movwf	_A^0,c
  3106                           
  3107                           ;Laboratorio5.c: 329: B=0;
  3108   000DA2  0E00               	movlw	0
  3109   000DA4  6E1A               	movwf	(_B+1)^0,c
  3110   000DA6  0E00               	movlw	0
  3111   000DA8  D00F               	goto	L6
  3112   000DAA                     i2l1612:
  3113                           
  3114                           ;Laboratorio5.c: 332: A=0;
  3115   000DAA  0E00               	movlw	0
  3116   000DAC  6E1C               	movwf	(_A+1)^0,c
  3117   000DAE  0E00               	movlw	0
  3118   000DB0  D007               	goto	L8
  3119   000DB2                     i2l1614:
  3120                           
  3121                           ;Laboratorio5.c: 336: A=1;
  3122   000DB2  0E00               	movlw	0
  3123   000DB4  6E1C               	movwf	(_A+1)^0,c
  3124   000DB6  0E01               	movlw	1
  3125   000DB8  D7F3               	goto	L7
  3126   000DBA                     i2l1616:
  3127                           
  3128                           ;Laboratorio5.c: 340: A=1;
  3129   000DBA  0E00               	movlw	0
  3130   000DBC  6E1C               	movwf	(_A+1)^0,c
  3131   000DBE  0E01               	movlw	1
  3132   000DC0                     L8:
  3133   000DC0  6E1B               	movwf	_A^0,c
  3134                           
  3135                           ;Laboratorio5.c: 341: B=1;
  3136   000DC2  0E00               	movlw	0
  3137   000DC4  6E1A               	movwf	(_B+1)^0,c
  3138   000DC6  0E01               	movlw	1
  3139   000DC8                     L6:
  3140   000DC8  6E19               	movwf	_B^0,c
  3141                           
  3142                           ;Laboratorio5.c: 342: break;
  3143   000DCA  D00E               	goto	i2l1622
  3144   000DCC                     i2l1620:
  3145   000DCC  EC00  F009         	call	_Recibir	;wreg free
  3146                           
  3147                           ; Switch size 1, requested type "simple"
  3148                           ; Number of cases is 4, Range of values is 67 to 82
  3149                           ; switch strategies available:
  3150                           ; Name         Instructions Cycles
  3151                           ; simple_byte           13     7 (average)
  3152                           ;	Chosen strategy is simple_byte
  3153   000DD0  0A43               	xorlw	67	; case 67
  3154   000DD2  B4D8               	btfsc	status,2,c
  3155   000DD4  D7E2               	goto	i2l1610
  3156   000DD6  0A05               	xorlw	5	; case 70
  3157   000DD8  B4D8               	btfsc	status,2,c
  3158   000DDA  D7EF               	goto	i2l1616
  3159   000DDC  0A0D               	xorlw	13	; case 75
  3160   000DDE  B4D8               	btfsc	status,2,c
  3161   000DE0  D7E4               	goto	i2l1612
  3162   000DE2  0A19               	xorlw	25	; case 82
  3163   000DE4  B4D8               	btfsc	status,2,c
  3164   000DE6  D7E5               	goto	i2l1614
  3165   000DE8                     i2l1622:
  3166                           
  3167                           ;Laboratorio5.c: 346: _delay((unsigned long)((100)*(8000000/4000.0)));
  3168   000DE8  0E02               	movlw	2
  3169   000DEA  6E02               	movwf	(??_ISR+1)^0,c
  3170   000DEC  0E04               	movlw	4
  3171   000DEE  6E01               	movwf	??_ISR^0,c
  3172   000DF0  0EBA               	movlw	186
  3173   000DF2                     i2u117_47:
  3174   000DF2  2EE8               	decfsz	wreg,f,c
  3175   000DF4  D7FE               	bra	i2u117_47
  3176   000DF6  2E01               	decfsz	??_ISR^0,f,c
  3177   000DF8  D7FC               	bra	i2u117_47
  3178   000DFA  2E02               	decfsz	(??_ISR+1)^0,f,c
  3179   000DFC  D7FA               	bra	i2u117_47
  3180   000DFE  D000               	nop2	
  3181   000E00                     i2l308:
  3182   000E00  9222               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3183   000E02  0011               	retfie		f
  3184   000E04                     __end_of_ISR:
  3185                           	callstack 0
  3186                           
  3187 ;; *************** function _Recibir *****************
  3188 ;; Defined at:
  3189 ;;		line 170 in file "Laboratorio5.c"
  3190 ;; Parameters:    Size  Location     Type
  3191 ;;		None
  3192 ;; Auto vars:     Size  Location     Type
  3193 ;;		None
  3194 ;; Return value:  Size  Location     Type
  3195 ;;                  1    wreg      unsigned char 
  3196 ;; Registers used:
  3197 ;;		wreg, status,2
  3198 ;; Tracked objects:
  3199 ;;		On entry : 0/0
  3200 ;;		On exit  : 0/0
  3201 ;;		Unchanged: 0/0
  3202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3203 ;;      Params:         0       0       0       0       0       0       0       0       0
  3204 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3205 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3206 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3207 ;;Total ram usage:        0 bytes
  3208 ;; Hardware stack levels used: 1
  3209 ;; This function calls:
  3210 ;;		Nothing
  3211 ;; This function is called by:
  3212 ;;		_ISR
  3213 ;; This function uses a non-reentrant model
  3214 ;;
  3215                           
  3216                           	psect	text25
  3217   001200                     __ptext25:
  3218                           	callstack 0
  3219   001200                     _Recibir:
  3220                           	callstack 24
  3221                           
  3222                           ;Laboratorio5.c: 171: while(RCIF==0);
  3223                           
  3224                           ;incstack = 0
  3225   001200  AA9E               	btfss	3998,5,c	;volatile
  3226   001202  D7FE               	goto	__ptext25
  3227                           
  3228                           ;Laboratorio5.c: 172: return RCREG;
  3229   001204  50AE               	movf	174,w,c	;volatile
  3230   001206  0012               	return		;funcret
  3231   001208                     __end_of_Recibir:
  3232                           	callstack 0
  3233                           
  3234                           	psect	rparam
  3235   000000                     
  3236                           	psect	temp
  3237   000022                     btemp:
  3238                           	callstack 0
  3239   000022                     	ds	1
  3240   000000                     int$flags	set	btemp
  3241   000000                     wtemp8	set	btemp+1
  3242   000000                     ttemp5	set	btemp+1
  3243   000000                     ttemp6	set	btemp+4
  3244   000000                     ttemp7	set	btemp+8
  3245                           
  3246                           	psect	idloc
  3247                           
  3248                           ;Config register IDLOC0 @ 0x200000
  3249                           ;	unspecified, using default values
  3250   200000                     	org	2097152
  3251   200000  FF                 	db	255
  3252                           
  3253                           ;Config register IDLOC1 @ 0x200001
  3254                           ;	unspecified, using default values
  3255   200001                     	org	2097153
  3256   200001  FF                 	db	255
  3257                           
  3258                           ;Config register IDLOC2 @ 0x200002
  3259                           ;	unspecified, using default values
  3260   200002                     	org	2097154
  3261   200002  FF                 	db	255
  3262                           
  3263                           ;Config register IDLOC3 @ 0x200003
  3264                           ;	unspecified, using default values
  3265   200003                     	org	2097155
  3266   200003  FF                 	db	255
  3267                           
  3268                           ;Config register IDLOC4 @ 0x200004
  3269                           ;	unspecified, using default values
  3270   200004                     	org	2097156
  3271   200004  FF                 	db	255
  3272                           
  3273                           ;Config register IDLOC5 @ 0x200005
  3274                           ;	unspecified, using default values
  3275   200005                     	org	2097157
  3276   200005  FF                 	db	255
  3277                           
  3278                           ;Config register IDLOC6 @ 0x200006
  3279                           ;	unspecified, using default values
  3280   200006                     	org	2097158
  3281   200006  FF                 	db	255
  3282                           
  3283                           ;Config register IDLOC7 @ 0x200007
  3284                           ;	unspecified, using default values
  3285   200007                     	org	2097159
  3286   200007  FF                 	db	255
  3287                           
  3288                           	psect	config
  3289                           
  3290                           ;Config register CONFIG1L @ 0x300000
  3291                           ;	unspecified, using default values
  3292                           ;	PLL Prescaler Selection bits
  3293                           ;	PLLDIV = 0x0, unprogrammed default
  3294                           ;	System Clock Postscaler Selection bits
  3295                           ;	CPUDIV = 0x0, unprogrammed default
  3296                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3297                           ;	USBDIV = 0x0, unprogrammed default
  3298   300000                     	org	3145728
  3299   300000  00                 	db	0
  3300                           
  3301                           ;Config register CONFIG1H @ 0x300001
  3302                           ;	Oscillator Selection bits
  3303                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  3304                           ;	Fail-Safe Clock Monitor Enable bit
  3305                           ;	FCMEN = 0x0, unprogrammed default
  3306                           ;	Internal/External Oscillator Switchover bit
  3307                           ;	IESO = 0x0, unprogrammed default
  3308   300001                     	org	3145729
  3309   300001  09                 	db	9
  3310                           
  3311                           ;Config register CONFIG2L @ 0x300002
  3312                           ;	unspecified, using default values
  3313                           ;	Power-up Timer Enable bit
  3314                           ;	PWRT = 0x1, unprogrammed default
  3315                           ;	Brown-out Reset Enable bits
  3316                           ;	BOR = 0x3, unprogrammed default
  3317                           ;	Brown-out Reset Voltage bits
  3318                           ;	BORV = 0x3, unprogrammed default
  3319                           ;	USB Voltage Regulator Enable bit
  3320                           ;	VREGEN = 0x0, unprogrammed default
  3321   300002                     	org	3145730
  3322   300002  1F                 	db	31
  3323                           
  3324                           ;Config register CONFIG2H @ 0x300003
  3325                           ;	Watchdog Timer Enable bit
  3326                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3327                           ;	Watchdog Timer Postscale Select bits
  3328                           ;	WDTPS = 0xF, unprogrammed default
  3329   300003                     	org	3145731
  3330   300003  1E                 	db	30
  3331                           
  3332                           ; Padding undefined space
  3333   300004                     	org	3145732
  3334   300004  FF                 	db	255
  3335                           
  3336                           ;Config register CONFIG3H @ 0x300005
  3337                           ;	CCP2 MUX bit
  3338                           ;	CCP2MX = 0x1, unprogrammed default
  3339                           ;	PORTB A/D Enable bit
  3340                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3341                           ;	Low-Power Timer 1 Oscillator Enable bit
  3342                           ;	LPT1OSC = 0x0, unprogrammed default
  3343                           ;	MCLR Pin Enable bit
  3344                           ;	MCLRE = 0x1, unprogrammed default
  3345   300005                     	org	3145733
  3346   300005  81                 	db	129
  3347                           
  3348                           ;Config register CONFIG4L @ 0x300006
  3349                           ;	unspecified, using default values
  3350                           ;	Stack Full/Underflow Reset Enable bit
  3351                           ;	STVREN = 0x1, unprogrammed default
  3352                           ;	Single-Supply ICSP Enable bit
  3353                           ;	LVP = 0x1, unprogrammed default
  3354                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  3355                           ;	ICPRT = 0x0, unprogrammed default
  3356                           ;	Extended Instruction Set Enable bit
  3357                           ;	XINST = 0x0, unprogrammed default
  3358                           ;	Background Debugger Enable bit
  3359                           ;	DEBUG = 0x1, unprogrammed default
  3360   300006                     	org	3145734
  3361   300006  85                 	db	133
  3362                           
  3363                           ; Padding undefined space
  3364   300007                     	org	3145735
  3365   300007  FF                 	db	255
  3366                           
  3367                           ;Config register CONFIG5L @ 0x300008
  3368                           ;	unspecified, using default values
  3369                           ;	Code Protection bit
  3370                           ;	CP0 = 0x1, unprogrammed default
  3371                           ;	Code Protection bit
  3372                           ;	CP1 = 0x1, unprogrammed default
  3373                           ;	Code Protection bit
  3374                           ;	CP2 = 0x1, unprogrammed default
  3375                           ;	Code Protection bit
  3376                           ;	CP3 = 0x1, unprogrammed default
  3377   300008                     	org	3145736
  3378   300008  0F                 	db	15
  3379                           
  3380                           ;Config register CONFIG5H @ 0x300009
  3381                           ;	unspecified, using default values
  3382                           ;	Boot Block Code Protection bit
  3383                           ;	CPB = 0x1, unprogrammed default
  3384                           ;	Data EEPROM Code Protection bit
  3385                           ;	CPD = 0x1, unprogrammed default
  3386   300009                     	org	3145737
  3387   300009  C0                 	db	192
  3388                           
  3389                           ;Config register CONFIG6L @ 0x30000A
  3390                           ;	unspecified, using default values
  3391                           ;	Write Protection bit
  3392                           ;	WRT0 = 0x1, unprogrammed default
  3393                           ;	Write Protection bit
  3394                           ;	WRT1 = 0x1, unprogrammed default
  3395                           ;	Write Protection bit
  3396                           ;	WRT2 = 0x1, unprogrammed default
  3397                           ;	Write Protection bit
  3398                           ;	WRT3 = 0x1, unprogrammed default
  3399   30000A                     	org	3145738
  3400   30000A  0F                 	db	15
  3401                           
  3402                           ;Config register CONFIG6H @ 0x30000B
  3403                           ;	unspecified, using default values
  3404                           ;	Configuration Register Write Protection bit
  3405                           ;	WRTC = 0x1, unprogrammed default
  3406                           ;	Boot Block Write Protection bit
  3407                           ;	WRTB = 0x1, unprogrammed default
  3408                           ;	Data EEPROM Write Protection bit
  3409                           ;	WRTD = 0x1, unprogrammed default
  3410   30000B                     	org	3145739
  3411   30000B  E0                 	db	224
  3412                           
  3413                           ;Config register CONFIG7L @ 0x30000C
  3414                           ;	unspecified, using default values
  3415                           ;	Table Read Protection bit
  3416                           ;	EBTR0 = 0x1, unprogrammed default
  3417                           ;	Table Read Protection bit
  3418                           ;	EBTR1 = 0x1, unprogrammed default
  3419                           ;	Table Read Protection bit
  3420                           ;	EBTR2 = 0x1, unprogrammed default
  3421                           ;	Table Read Protection bit
  3422                           ;	EBTR3 = 0x1, unprogrammed default
  3423   30000C                     	org	3145740
  3424   30000C  0F                 	db	15
  3425                           
  3426                           ;Config register CONFIG7H @ 0x30000D
  3427                           ;	unspecified, using default values
  3428                           ;	Boot Block Table Read Protection bit
  3429                           ;	EBTRB = 0x1, unprogrammed default
  3430   30000D                     	org	3145741
  3431   30000D  40                 	db	64
  3432                           tosu	equ	0xFFF
  3433                           tosh	equ	0xFFE
  3434                           tosl	equ	0xFFD
  3435                           stkptr	equ	0xFFC
  3436                           pclatu	equ	0xFFB
  3437                           pclath	equ	0xFFA
  3438                           pcl	equ	0xFF9
  3439                           tblptru	equ	0xFF8
  3440                           tblptrh	equ	0xFF7
  3441                           tblptrl	equ	0xFF6
  3442                           tablat	equ	0xFF5
  3443                           prodh	equ	0xFF4
  3444                           prodl	equ	0xFF3
  3445                           indf0	equ	0xFEF
  3446                           postinc0	equ	0xFEE
  3447                           postdec0	equ	0xFED
  3448                           preinc0	equ	0xFEC
  3449                           plusw0	equ	0xFEB
  3450                           fsr0h	equ	0xFEA
  3451                           fsr0l	equ	0xFE9
  3452                           wreg	equ	0xFE8
  3453                           indf1	equ	0xFE7
  3454                           postinc1	equ	0xFE6
  3455                           postdec1	equ	0xFE5
  3456                           preinc1	equ	0xFE4
  3457                           plusw1	equ	0xFE3
  3458                           fsr1h	equ	0xFE2
  3459                           fsr1l	equ	0xFE1
  3460                           bsr	equ	0xFE0
  3461                           indf2	equ	0xFDF
  3462                           postinc2	equ	0xFDE
  3463                           postdec2	equ	0xFDD
  3464                           preinc2	equ	0xFDC
  3465                           plusw2	equ	0xFDB
  3466                           fsr2h	equ	0xFDA
  3467                           fsr2l	equ	0xFD9
  3468                           status	equ	0xFD8

Data Sizes:
    Strings     34
    Constant    0
    Data        1
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     24      33
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    MensajeLCD_Word@a	PTR unsigned char  size(1) Largest target is 13
		 -> STR_4(CODE[5]), STR_3(CODE[6]), STR_2(CODE[10]), STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _main->_TransmitirDatos
    _TransmitirDatos->_MensajeLCD_Word
    _TransmitirDatos->___awdiv
    _MensajeLCD_Word->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _LeerHT11->_LeerByte
    _LeerByte->_LeerBit
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    7108
                                             22 COMRAM     2     2      0
                           _BorraLCD
                           _ColorRGB
                         _Conversion
                      _DireccionaLCD
                       _EscribeLCD_c
                _GuardarDatoEnEEPROM
                      _InicializaLCD
                           _LeerHT11
                    _MensajeLCD_Word
                    _TransmitirDatos
                            ___lbdiv
                            ___lbmod
                   _leerDatoEnEEPROM
 ---------------------------------------------------------------------------------
 (1) _leerDatoEnEEPROM                                     2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TransmitirDatos                                     14    10      4    4630
                                             10 COMRAM    12     8      4
                           _BorraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
                    _MensajeLCD_Word
                         _Transmitir
                            ___awdiv
                            ___lbdiv
                            ___lbmod
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     615
                                              2 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     922
                                              2 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___lbmod                                              4     3      1     387
                                              2 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) ___lbdiv                                              4     3      1     390
                                              2 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Transmitir                                           1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MensajeLCD_Word                                      4     3      1     528
                                              6 COMRAM     4     3      1
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (3) _EscribeLCD_c                                         1     1      0      90
                                              5 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _DireccionaLCD                                        1     1      0      90
                                              5 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _LeerHT11                                             1     1      0      75
                                              6 COMRAM     1     1      0
                           _LeerByte
 ---------------------------------------------------------------------------------
 (2) _LeerByte                                             3     3      0      75
                                              3 COMRAM     3     3      0
                            _LeerBit
 ---------------------------------------------------------------------------------
 (3) _LeerBit                                              1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     150
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0      75
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _EnviaDato                                            1     1      0      60
                                              4 COMRAM     1     1      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _RetardoLCD                                           2     2      0      15
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GuardarDatoEnEEPROM                                  3     0      3     196
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _Conversion                                           1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ColorRGB                                             2     0      2     384
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  2     2      0       0
                                              0 COMRAM     2     2      0
                            _Recibir
 ---------------------------------------------------------------------------------
 (7) _Recibir                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _ColorRGB
   _Conversion
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _GuardarDatoEnEEPROM
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerHT11
     _LeerByte
       _LeerBit
   _MensajeLCD_Word
     _EscribeLCD_c
   _TransmitirDatos
     _BorraLCD
     _DireccionaLCD
     _EscribeLCD_c
     _MensajeLCD_Word
     _Transmitir
     ___awdiv
     ___lbdiv
     ___lbmod
     ___lwdiv
     ___lwmod
     ___wmul
   ___lbdiv
   ___lbmod
   _leerDatoEnEEPROM

 _ISR (ROOT)
   _Recibir

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      36        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     18      21       1       35.1%
BITBIGSFRhhlh       19      0       0      21        0.0%
BITBIGSFRlhhl       11      0       0      32        0.0%
BITBIGSFRhlhhh       E      0       0      23        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRll          D      0       0      34        0.0%
BITBIGSFRhlhlh       8      0       0      25        0.0%
BITBIGSFRlhhh        7      0       0      31        0.0%
BITBIGSFRhllhhl      7      0       0      29        0.0%
BITBIGSFRhlhhl       7      0       0      24        0.0%
BITBIGSFRhllhhh      4      0       0      27        0.0%
BITBIGSFRhlll        4      0       0      30        0.0%
BITBIGSFRhllhhh      2      0       0      28        0.0%
BITBIGSFRhllhhh      1      0       0      26        0.0%
BITBIGSFRlhl         1      0       0      33        0.0%
BITBIGSFRhhll        1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      21      35        0.0%
DATA                 0      0      21       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed May 24 15:15:53 2023

                          _A 001B                            _B 0019            Transmitir@BufferT 0003  
                         _GO 007E11                           _RD 007D30                           u40 10B4  
                         _WR 007D31                 ___awdiv@sign 0008                   EnviaDato@a 0005  
        ___wmul@multiplicand 0005                          l213 1024                _InicializaLCD 0FD0  
                        l232 10B0                          l216 102E                          l227 108C  
                        l260 099A                          l255 0858                          l282 11CA  
                        l288 1150                          l800 0FC6                          l790 0F36  
                        _GIE 007F97                          _RB0 007C08                          _RC0 007C10  
                        _RC1 007C11                          _RC2 007C12                          _RC4 007C14  
                        _RC5 007C15                          u620 0E4A                          u700 0F10  
                        _ISR 0008                          u810 0CF2                          u730 0FA8  
                        u580 0F8C                          u660 106A                          u830 0D12  
                        u850 0D32                          u770 0CB2                          u930 0C4A  
                        u940 0C4C                          u870 0D52                          u790 0CD2  
                        u950 0C58                          u960 0C5A                          u890 0D72  
                        u970 0C8E                          u997 0ABE                          _Che 001E  
                        _Hum 001F             TransmitirDatos@n 0011                          wreg 000FE8  
                       ?_ISR 0001                         l1102 10A0                         l2000 0BF4  
                       l2012 0C64                         l1070 0EC8                         l2014 0C78  
                       l1064 0E8C                         l1066 0E9C                         l1074 0ED2  
                       l1146 1162                         l1068 0EBE                         l1156 11EE  
                       l1700 1060                         l1712 107C                         l1704 1066  
                       l1810 0D06                         l1634 0F48                         l1730 1106  
                       l1722 10EE                         l1804 0CE6                         l1716 1084  
                       l1822 0D46                         l1670 0E3E                         l1742 0F04  
                       l1816 0D26                         l1672 0E46                         l1664 0E28  
                       l1744 0F0C                         l1690 0E7E                         l1682 0E66  
                       l1658 0E18                         l1754 0F2C                         l1770 0FBC  
                       l1762 0F9C                         l1828 0D66                         l1764 0FA4  
                       l1852 08A6                         l1844 0866                         l1860 08FE  
                       l1686 0E70                         l1792 0CA6                         l1848 087A  
                       l1858 08D4                         l1798 0CC6                         l1988 0B7E  
                       _CFGS 007D36                         _EEIF 007D0C                         STR_1 0801  
                       STR_2 080E                         STR_3 0818                         STR_4 081E  
                       u1007 0B6C                         u1017 0B90                         u1107 10A2  
                       u1027 0BAC                         u1117 0E92                         u1037 0BC8  
                       u1127 0EA2                         u1047 0BE4                         u1137 0EB2  
                       u1057 0BFE                         u1147 0EC0                         u1067 0C14  
                       u1157 0ECA                         u1077 101A                         u1167 11E2  
                       u1087 102A                         _LATD 000F8C                         u1097 1092  
                       _RCIF 007CF5                         _RBPU 007F8F                         _TMR0 000FD6  
                       _TRMT 007D61                         _WREN 007D32               ??_EscribeLCD_c 0006  
                       _Temp 0020          _GuardarDatoEnEEPROM 1134                         _main 0AB4  
                       btemp 0022                         prodh 000FF4                         prodl 000FF3  
                       start 000E              __end_of_LeerBit 10B8                 ___param_bank 000000  
                      ??_ISR 0001              __end_of_Recibir 1208         ?_GuardarDatoEnEEPROM 0003  
             ?_InicializaLCD 0001                        ?_main 0001              __end_of___awdiv 0E88  
            __end_of___lbdiv 1088                        _ADRES 000FC3                        _EEADR 000FA9  
              EscribeLCD_c@a 0006              __end_of___lbmod 110E                        _EEPGD 007D37  
                      _T0CON 000FD5              ___awdiv@divisor 0005                        _LATC2 007C5A  
                      _LATB5 007C55                        _LATE0 007C68                        _LATB6 007C56  
                      _LATB7 007C57                        _LATE2 007C6A              __end_of___lwdiv 0F40  
            __end_of___lwmod 0FD0                        i2l308 0E00              ___awdiv@counter 0007  
                      _RCREG 000FAE                        _RCSTA 000FAB                        _SPBRG 000FAF  
                      _USBEN 007B6B                        _TRISA 000F92                        _TRISB 000F93  
                      _TRISC 000F94                        _TRISD 000F95                        _TRISE 000F96  
                      _TXREG 000FAD                        _TXSTA 000FAC       GuardarDatoEnEEPROM@dir 0003  
                      tablat 000FF5                   _Conversion 11BC                  _HabilitaLCD 11DE  
                      ttemp5 0023                        ttemp6 0026                        ttemp7 002A  
                      status 000FD8                        wtemp8 0023              ___lbdiv@divisor 0003  
            ___lbdiv@counter 0005             __end_of_BorraLCD 11BC             __end_of_LeerHT11 104E  
           __end_of_ColorRGB 0D7A              __initialization 10B8             __end_of_LeerByte 117C  
               __end_of_main 0C92     __end_of_leerDatoEnEEPROM 11DE        ??_GuardarDatoEnEEPROM 0006  
                     ??_main 0017                __activetblptr 000002                   _TempEEPROM 001D  
                     _ADCON0 000FC2                       _ADCON1 000FC1                       _ADCON2 000FC0  
                     _EEDATA 000FA8               DireccionaLCD@a 0006                       _EECON2 000FA7  
           ___awdiv@dividend 0003                       i2l1610 0D9A                       i2l1612 0DAA  
                     i2l1620 0DCC                       i2l1614 0DB2                       i2l1622 0DE8  
                     i2l1606 0D94                       i2l1616 0DBA                       _OSCCON 000FD3  
                     _TMR0IE 007F95                       _TMR0IF 007F92                       _TMR0ON 007EAF  
                     _TRISC2 007CA2                    ??_LeerBit 0003        __end_of_DireccionaLCD 11A8  
                     _UTRDIS 007B7B                   _RetardoLCD 0E88                    ??_Recibir 0001  
        TransmitirDatos@Ent1 000B          TransmitirDatos@Ent2 000D          TransmitirDatos@Simb 0013  
                     ___wmul 110E                    ??___awdiv 0007                    ??___lbdiv 0004  
                  ??___lbmod 0004                    ??___lwdiv 0007                    ??___lwmod 0007  
            ??_InicializaLCD 0006                       clear_0 10D0             ___awdiv@quotient 0009  
    GuardarDatoEnEEPROM@dato 0005                       isa$std 000001         __end_of_EscribeLCD_c 1192  
               __pdataCOMRAM 0021                 __mediumconst 0000                       tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8                   _Transmitir 11EC  
           ___lbdiv@dividend 0004                  ?_Conversion 0001              ___lbmod@divisor 0003  
                 __accesstop 0060      __end_of__initialization 10D6              ___lbmod@counter 0005  
              ___rparam_used 000001               __pcstackCOMRAM 0001            __end_of_EnviaDato 1200  
           ___lbdiv@quotient 0006                    ?_BorraLCD 0001                    ?_LeerHT11 0001  
                  ?_ColorRGB 0003                    ?_LeerByte 0001                  ?_RetardoLCD 0001  
                RetardoLCD@a 0004                      ?___wmul 0003                      _BAUDCON 000FB8  
                    i2u54_40 0D8A                      i2u55_45 0D8C                   ??_BorraLCD 0006  
                 ??_LeerHT11 0007                   ??_ColorRGB 0005                  ?_Transmitir 0001  
          ??_MensajeLCD_Word 0008                   ??_LeerByte 0004                 ?_HabilitaLCD 0001  
                    _LeerBit 1088                      _Recibir 1200                      __Hparam 0000  
                    __Lparam 0000         TransmitirDatos@TempC 0015                      ___awdiv 0E04  
                    ___lbdiv 104E                      ___lbmod 10E4                      ___lwdiv 0EEE  
                    ___lwmod 0F8E            ?_leerDatoEnEEPROM 0003                 __psmallconst 0800  
                    __pcinit 10B8                      __ramtop 0800                      __ptext0 0AB4  
                    __ptext1 11D0                      __ptext2 0824                      __ptext3 110E  
                    __ptext4 0F8E                      __ptext5 0EEE                      __ptext6 10E4  
         ??_leerDatoEnEEPROM 0005                      __ptext7 104E                      __ptext8 0E04  
                    __ptext9 11EC               __pintcode_body 0D7A         end_of_initialization 10D6  
            Conversion@canal 0003                __Lmediumconst 0000                      int_func 0D7A  
               _EscribeLCD_c 117C  __end_of_GuardarDatoEnEEPROM 115A            ??_TransmitirDatos 000F  
                    postinc0 000FEE             ___lbmod@dividend 0004                    LeerByte@i 0006  
               ??_Conversion 0003                  ___lbmod@rem 0006               __end_of___wmul 1134  
              __pidataCOMRAM 1208        __end_of_InicializaLCD 1012           __end_of_Conversion 11D0  
                  _EnviaDato 11F8          start_initialization 10B8                  __end_of_ISR 0E04  
               ??_RetardoLCD 0003                     ??___wmul 0007              _MensajeLCD_Word 0F40  
                 ?_EnviaDato 0001                  __pbssCOMRAM 0019           __end_of_RetardoLCD 0EEE  
           MensajeLCD_Word@a 0007             MensajeLCD_Word@i 0009                 ??_Transmitir 0003  
                   ?_LeerBit 0001                _DireccionaLCD 1192                     ?_Recibir 0001  
           ___lwdiv@dividend 0003                    __pintcode 0008                     ?___awdiv 0003  
                   ?___lbdiv 0003                     ?___lbmod 0003                     ?___lwdiv 0003  
                   ?___lwmod 0003           __end_of_Transmitir 11F8                  __smallconst 0800  
           ___lwdiv@quotient 0007              _TransmitirDatos 0824               ___wmul@product 0007  
             ?_DireccionaLCD 0001                     i2u117_47 0DF2      __end_of_MensajeLCD_Word 0F8E  
          ___wmul@multiplier 0003                  ??_EnviaDato 0005                     _BorraLCD 11A8  
                   _LeerHT11 1012                     _ColorRGB 0C92                     _LeerByte 115A  
        leerDatoEnEEPROM@dir 0003                     __Hrparam 0000                     __Lrparam 0000  
    __end_of_TransmitirDatos 0AB4              ___lwdiv@divisor 0005              ___lwdiv@counter 0009  
                   __ptext10 0F40                     __ptext11 117C                     __ptext20 11DE  
                   __ptext12 1192                     __ptext21 1134                     __ptext13 1012  
                   __ptext22 11BC                     __ptext14 115A                     __ptext23 0C92  
                   __ptext15 1088                     __ptext16 0FD0                     __ptext25 1200  
                   __ptext17 11A8                     __ptext18 11F8                     __ptext19 0E88  
            ??_DireccionaLCD 0006                     _interfaz 0021                     isa$xinst 000000  
           ?_MensajeLCD_Word 0007                     int$flags 0022             _leerDatoEnEEPROM 11D0  
                   intlevel2 0000                ??_HabilitaLCD 0003             ___lwmod@dividend 0003  
                ColorRGB@val 0003              ___lwmod@divisor 0005              ___lwmod@counter 0007  
           ?_TransmitirDatos 000B                ?_EscribeLCD_c 0001                   LeerBit@res 0003  
        __end_of_HabilitaLCD 11EC                  LeerByte@res 0005  
