

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Jun 02 09:45:19 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    41                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    42                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    44   000000                     
    45                           ; Version 2.40
    46                           ; Generated 04/07/2022 GMT
    47                           ; 
    48                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution. Publication is not required when
    62                           ;        this file is used in an embedded application.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC18F4550 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80   000000                     
    81                           	psect	idataCOMRAM
    82   0011A8                     __pidataCOMRAM:
    83                           	callstack 0
    84                           
    85                           ;initializer for _interfaz
    86   0011A8  08                 	db	8
    87   000000                     _EECON2	set	4007
    88   000000                     _RCREG	set	4014
    89   000000                     _TXREG	set	4013
    90   000000                     _TRISC	set	3988
    91   000000                     _TRISD	set	3989
    92   000000                     _SPBRG	set	4015
    93   000000                     _BAUDCON	set	4024
    94   000000                     _RD	set	32048
    95   000000                     _WR	set	32049
    96   000000                     _WREN	set	32050
    97   000000                     _CFGS	set	32054
    98   000000                     _GO	set	32273
    99   000000                     _TRMT	set	32097
   100   000000                     _RC2	set	31762
   101   000000                     _TRISC2	set	31906
   102   000000                     _RC1	set	31761
   103   000000                     _RC0	set	31760
   104   000000                     _TMR0ON	set	32431
   105   000000                     _GIE	set	32663
   106   000000                     _TMR0IE	set	32661
   107   000000                     _LATE2	set	31850
   108   000000                     _LATD	set	3980
   109   000000                     _USBEN	set	31595
   110   000000                     _LATC2	set	31834
   111   000000                     _TRISA	set	3986
   112   000000                     _TRISB	set	3987
   113   000000                     _TRISE	set	3990
   114   000000                     _RCSTA	set	4011
   115   000000                     _TXSTA	set	4012
   116   000000                     _OSCCON	set	4051
   117   000000                     _LATE1	set	31849
   118   000000                     _T0CON	set	4053
   119   000000                     _ADCON2	set	4032
   120   000000                     _ADCON1	set	4033
   121   000000                     _ADCON0	set	4034
   122   000000                     _RCIF	set	31989
   123   000000                     _ADRES	set	4035
   124   000000                     _UTRDIS	set	31611
   125   000000                     _RC4	set	31764
   126   000000                     _TMR0	set	4054
   127   000000                     _TMR0IF	set	32658
   128   000000                     _LATB	set	3978
   129   000000                     _RE0	set	31776
   130   000000                     _RD3	set	31771
   131   000000                     _EEDATA	set	4008
   132   000000                     _EEADR	set	4009
   133   000000                     _EEIF	set	32012
   134   000000                     _EEPGD	set	32055
   135                           
   136                           	psect	smallconst
   137   000800                     __psmallconst:
   138                           	callstack 0
   139   000800  00                 	db	0
   140   000801                     STR_1:
   141   000801  55                 	db	85	;'U'
   142   000802  6C                 	db	108	;'l'
   143   000803  74                 	db	116	;'t'
   144   000804  69                 	db	105	;'i'
   145   000805  6D                 	db	109	;'m'
   146   000806  61                 	db	97	;'a'
   147   000807  20                 	db	32
   148   000808  74                 	db	116	;'t'
   149   000809  65                 	db	101	;'e'
   150   00080A  6D                 	db	109	;'m'
   151   00080B  70                 	db	112	;'p'
   152   00080C  3A                 	db	58	;':'
   153   00080D  00                 	db	0
   154   00080E                     STR_2:
   155   00080E  49                 	db	73	;'I'
   156   00080F  6E                 	db	110	;'n'
   157   000810  69                 	db	105	;'i'
   158   000811  63                 	db	99	;'c'
   159   000812  69                 	db	105	;'i'
   160   000813  61                 	db	97	;'a'
   161   000814  6E                 	db	110	;'n'
   162   000815  64                 	db	100	;'d'
   163   000816  6F                 	db	111	;'o'
   164   000817  00                 	db	0
   165   000818                     STR_3:
   166   000818  54                 	db	84	;'T'
   167   000819  65                 	db	101	;'e'
   168   00081A  6D                 	db	109	;'m'
   169   00081B  70                 	db	112	;'p'
   170   00081C  3A                 	db	58	;':'
   171   00081D  00                 	db	0
   172   00081E                     STR_4:
   173   00081E  48                 	db	72	;'H'
   174   00081F  75                 	db	117	;'u'
   175   000820  6D                 	db	109	;'m'
   176   000821  3A                 	db	58	;':'
   177   000822  00                 	db	0
   178   000823  00                 	db	0	; dummy byte at the end
   179   000000                     
   180                           ; #config settings
   181                           
   182                           	psect	cinit
   183   001030                     __pcinit:
   184                           	callstack 0
   185   001030                     start_initialization:
   186                           	callstack 0
   187   001030                     __initialization:
   188                           	callstack 0
   189                           
   190                           ; Initialize objects allocated to COMRAM (1 bytes)
   191                           ; load TBLPTR registers with __pidataCOMRAM
   192   001030  0EA8               	movlw	low __pidataCOMRAM
   193   001032  6EF6               	movwf	tblptrl,c
   194   001034  0E11               	movlw	high __pidataCOMRAM
   195   001036  6EF7               	movwf	tblptrh,c
   196   001038  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   197   00103A  6EF8               	movwf	tblptru,c
   198   00103C  0009               	tblrd		*+	;fetch initializer
   199   00103E  CFF5 F020          	movff	tablat,__pdataCOMRAM
   200                           
   201                           ; Clear objects allocated to COMRAM (7 bytes)
   202   001042  EE00  F019         	lfsr	0,__pbssCOMRAM
   203   001046  0E07               	movlw	7
   204   001048                     clear_0:
   205   001048  6AEE               	clrf	postinc0,c
   206   00104A  06E8               	decf	wreg,f,c
   207   00104C  E1FD               	bnz	clear_0
   208   00104E                     end_of_initialization:
   209                           	callstack 0
   210   00104E                     __end_of__initialization:
   211                           	callstack 0
   212   00104E  9021               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   213   001050  9221               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   214   001052  0E00               	movlw	low (__Lmediumconst shr (0+16))
   215   001054  6EF8               	movwf	tblptru,c
   216   001056  0100               	movlb	0
   217   001058  EF5A  F005         	goto	_main	;jump to C main() function
   218                           
   219                           	psect	bssCOMRAM
   220   000019                     __pbssCOMRAM:
   221                           	callstack 0
   222   000019                     _B:
   223                           	callstack 0
   224   000019                     	ds	2
   225   00001B                     _A:
   226                           	callstack 0
   227   00001B                     	ds	2
   228   00001D                     _TemperaturaGuardada:
   229                           	callstack 0
   230   00001D                     	ds	1
   231   00001E                     _Humedad:
   232                           	callstack 0
   233   00001E                     	ds	1
   234   00001F                     _Temp:
   235                           	callstack 0
   236   00001F                     	ds	1
   237                           
   238                           	psect	dataCOMRAM
   239   000020                     __pdataCOMRAM:
   240                           	callstack 0
   241   000020                     _interfaz:
   242                           	callstack 0
   243   000020                     	ds	1
   244                           
   245                           	psect	cstackCOMRAM
   246   000001                     __pcstackCOMRAM:
   247                           	callstack 0
   248   000001                     ??_ISR:
   249   000001                     
   250                           ; 2 bytes @ 0x0
   251   000001                     	ds	2
   252   000003                     ??_RetardoLCD:
   253   000003                     ?_strlen:
   254                           	callstack 0
   255   000003                     ?___wmul:
   256                           	callstack 0
   257   000003                     ?___awdiv:
   258                           	callstack 0
   259   000003                     ?___lwdiv:
   260                           	callstack 0
   261   000003                     ?___lwmod:
   262                           	callstack 0
   263   000003                     LeerBit@res:
   264                           	callstack 0
   265   000003                     Transmitir@BufferT:
   266                           	callstack 0
   267   000003                     ConvertirUnidades@canal:
   268                           	callstack 0
   269   000003                     ___lbdiv@divisor:
   270                           	callstack 0
   271   000003                     ___lbmod@divisor:
   272                           	callstack 0
   273   000003                     strlen@s:
   274                           	callstack 0
   275   000003                     ColorRGB@val:
   276                           	callstack 0
   277   000003                     GuardarDatos@dir:
   278                           	callstack 0
   279   000003                     LeerDatos@dir:
   280                           	callstack 0
   281   000003                     ___wmul@multiplier:
   282                           	callstack 0
   283   000003                     ___awdiv@dividend:
   284                           	callstack 0
   285   000003                     ___lwdiv@dividend:
   286                           	callstack 0
   287   000003                     ___lwmod@dividend:
   288                           	callstack 0
   289                           
   290                           ; 2 bytes @ 0x2
   291   000003                     	ds	1
   292   000004                     ??_LeerByte:
   293   000004                     RetardoLCD@a:
   294                           	callstack 0
   295   000004                     ___lbdiv@dividend:
   296                           	callstack 0
   297   000004                     ___lbmod@dividend:
   298                           	callstack 0
   299                           
   300                           ; 1 bytes @ 0x3
   301   000004                     	ds	1
   302   000005                     EnviaDato@a:
   303                           	callstack 0
   304   000005                     LeerByte@res:
   305                           	callstack 0
   306   000005                     GuardarDatos@dato:
   307                           	callstack 0
   308   000005                     ___lbdiv@counter:
   309                           	callstack 0
   310   000005                     ___lbmod@counter:
   311                           	callstack 0
   312   000005                     strlen@cp:
   313                           	callstack 0
   314   000005                     ___wmul@multiplicand:
   315                           	callstack 0
   316   000005                     ___awdiv@divisor:
   317                           	callstack 0
   318   000005                     ___lwdiv@divisor:
   319                           	callstack 0
   320   000005                     ___lwmod@divisor:
   321                           	callstack 0
   322                           
   323                           ; 2 bytes @ 0x4
   324   000005                     	ds	1
   325   000006                     EscribeLCD_c@a:
   326                           	callstack 0
   327   000006                     DireccionaLCD@a:
   328                           	callstack 0
   329   000006                     LeerByte@i:
   330                           	callstack 0
   331   000006                     ___lbdiv@quotient:
   332                           	callstack 0
   333   000006                     ___lbmod@rem:
   334                           	callstack 0
   335                           
   336                           ; 1 bytes @ 0x5
   337   000006                     	ds	1
   338   000007                     ??_LeerHT11:
   339   000007                     MensajeLCD_Word@a:
   340                           	callstack 0
   341   000007                     ___awdiv@counter:
   342                           	callstack 0
   343   000007                     ___lwmod@counter:
   344                           	callstack 0
   345   000007                     ___wmul@product:
   346                           	callstack 0
   347   000007                     ___lwdiv@quotient:
   348                           	callstack 0
   349                           
   350                           ; 2 bytes @ 0x6
   351   000007                     	ds	1
   352   000008                     ??_MensajeLCD_Word:
   353   000008                     ___awdiv@sign:
   354                           	callstack 0
   355                           
   356                           ; 1 bytes @ 0x7
   357   000008                     	ds	1
   358   000009                     ___lwdiv@counter:
   359                           	callstack 0
   360   000009                     MensajeLCD_Word@i:
   361                           	callstack 0
   362   000009                     ___awdiv@quotient:
   363                           	callstack 0
   364                           
   365                           ; 2 bytes @ 0x8
   366   000009                     	ds	2
   367   00000B                     TransmitirDatos@Ent1:
   368                           	callstack 0
   369                           
   370                           ; 2 bytes @ 0xA
   371   00000B                     	ds	2
   372   00000D                     TransmitirDatos@Ent2:
   373                           	callstack 0
   374                           
   375                           ; 2 bytes @ 0xC
   376   00000D                     	ds	2
   377   00000F                     ??_TransmitirDatos:
   378                           
   379                           ; 1 bytes @ 0xE
   380   00000F                     	ds	2
   381   000011                     TransmitirDatos@n:
   382                           	callstack 0
   383                           
   384                           ; 2 bytes @ 0x10
   385   000011                     	ds	2
   386   000013                     TransmitirDatos@Simb:
   387                           	callstack 0
   388                           
   389                           ; 2 bytes @ 0x12
   390   000013                     	ds	2
   391   000015                     TransmitirDatos@TempC:
   392                           	callstack 0
   393                           
   394                           ; 2 bytes @ 0x14
   395   000015                     	ds	2
   396   000017                     ??_main:
   397                           
   398                           ; 1 bytes @ 0x16
   399   000017                     	ds	2
   400                           
   401 ;;
   402 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   403 ;;
   404 ;; *************** function _main *****************
   405 ;; Defined at:
   406 ;;		line 28 in file "Laboratorio5.c"
   407 ;; Parameters:    Size  Location     Type
   408 ;;		None
   409 ;; Auto vars:     Size  Location     Type
   410 ;;		None
   411 ;; Return value:  Size  Location     Type
   412 ;;                  1    wreg      void 
   413 ;; Registers used:
   414 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   415 ;; Tracked objects:
   416 ;;		On entry : 0/0
   417 ;;		On exit  : 0/0
   418 ;;		Unchanged: 0/0
   419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   420 ;;      Params:         0       0       0       0       0       0       0       0       0
   421 ;;      Locals:         0       0       0       0       0       0       0       0       0
   422 ;;      Temps:          2       0       0       0       0       0       0       0       0
   423 ;;      Totals:         2       0       0       0       0       0       0       0       0
   424 ;;Total ram usage:        2 bytes
   425 ;; Hardware stack levels required when called: 7
   426 ;; This function calls:
   427 ;;		_BorraLCD
   428 ;;		_ColorRGB
   429 ;;		_ConvertirUnidades
   430 ;;		_DireccionaLCD
   431 ;;		_EscribeLCD_c
   432 ;;		_GuardarDatos
   433 ;;		_InicializaLCD
   434 ;;		_LeerDatos
   435 ;;		_LeerHT11
   436 ;;		_MensajeLCD_Word
   437 ;;		_TransmitirDatos
   438 ;;		___lbdiv
   439 ;;		___lbmod
   440 ;; This function is called by:
   441 ;;		Startup code after reset
   442 ;; This function uses a non-reentrant model
   443 ;;
   444                           
   445                           	psect	text0
   446   000AB4                     __ptext0:
   447                           	callstack 0
   448   000AB4                     _main:
   449                           	callstack 24
   450                           
   451                           ;Laboratorio5.c: 30: OSCCON = 0b01110110;
   452                           
   453                           ;incstack = 0
   454   000AB4  0E76               	movlw	118
   455   000AB6  6ED3               	movwf	211,c	;volatile
   456                           
   457                           ;Laboratorio5.c: 31: _delay((unsigned long)((1)*(8000000/4000.0)));
   458   000AB8  0E03               	movlw	3
   459   000ABA  6E17               	movwf	??_main^0,c
   460   000ABC  0E98               	movlw	152
   461   000ABE                     u997:
   462   000ABE  2EE8               	decfsz	wreg,f,c
   463   000AC0  D7FE               	bra	u997
   464   000AC2  2E17               	decfsz	??_main^0,f,c
   465   000AC4  D7FC               	bra	u997
   466                           
   467                           ;Laboratorio5.c: 32: LATC2 = 0;
   468   000AC6  948B               	bcf	3979,2,c	;volatile
   469                           
   470                           ;Laboratorio5.c: 33: TXSTA = 0b00100000;
   471   000AC8  0E20               	movlw	32
   472   000ACA  6EAC               	movwf	172,c	;volatile
   473                           
   474                           ;Laboratorio5.c: 34: RCSTA = 0b10010000;
   475   000ACC  0E90               	movlw	144
   476   000ACE  6EAB               	movwf	171,c	;volatile
   477                           
   478                           ;Laboratorio5.c: 35: BAUDCON = 0b00000000;
   479   000AD0  0E00               	movlw	0
   480   000AD2  6EB8               	movwf	184,c	;volatile
   481                           
   482                           ;Laboratorio5.c: 37: TRISE=0;
   483   000AD4  0E00               	movlw	0
   484   000AD6  6E96               	movwf	150,c	;volatile
   485                           
   486                           ;Laboratorio5.c: 38: SPBRG = 12;
   487   000AD8  0E0C               	movlw	12
   488   000ADA  6EAF               	movwf	175,c	;volatile
   489                           
   490                           ;Laboratorio5.c: 40: ADCON0 = 0b00000001;
   491   000ADC  0E01               	movlw	1
   492   000ADE  6EC2               	movwf	194,c	;volatile
   493                           
   494                           ;Laboratorio5.c: 41: ADCON1 = 13;
   495   000AE0  0E0D               	movlw	13
   496   000AE2  6EC1               	movwf	193,c	;volatile
   497                           
   498                           ;Laboratorio5.c: 42: ADCON2 = 0b10001000;
   499   000AE4  0E88               	movlw	136
   500   000AE6  6EC0               	movwf	192,c	;volatile
   501                           
   502                           ;Laboratorio5.c: 45: TRISB = 0;
   503   000AE8  0E00               	movlw	0
   504   000AEA  6E93               	movwf	147,c	;volatile
   505                           
   506                           ;Laboratorio5.c: 46: TRISD = 0;
   507   000AEC  0E00               	movlw	0
   508   000AEE  6E95               	movwf	149,c	;volatile
   509                           
   510                           ;Laboratorio5.c: 47: TRISA = 0b00000001;
   511   000AF0  0E01               	movlw	1
   512   000AF2  6E92               	movwf	146,c	;volatile
   513                           
   514                           ;Laboratorio5.c: 48: TRISC = 0b11010111;
   515   000AF4  0ED7               	movlw	215
   516   000AF6  6E94               	movwf	148,c	;volatile
   517                           
   518                           ;Laboratorio5.c: 49: USBEN = 0;
   519   000AF8  966D               	bcf	3949,3,c	;volatile
   520                           
   521                           ;Laboratorio5.c: 50: UTRDIS = 1;
   522   000AFA  866F               	bsf	3951,3,c	;volatile
   523                           
   524                           ;Laboratorio5.c: 53: TemperaturaGuardada = LeerDatos(0);
   525   000AFC  0E00               	movlw	0
   526   000AFE  6E04               	movwf	(LeerDatos@dir+1)^0,c
   527   000B00  0E00               	movlw	0
   528   000B02  6E03               	movwf	LeerDatos@dir^0,c
   529   000B04  ECB8  F008         	call	_LeerDatos	;wreg free
   530   000B08  6E1D               	movwf	_TemperaturaGuardada^0,c
   531                           
   532                           ;Laboratorio5.c: 55: InicializaLCD();
   533   000B0A  EC88  F007         	call	_InicializaLCD	;wreg free
   534                           
   535                           ;Laboratorio5.c: 57: T0CON=0b00000011;
   536   000B0E  0E03               	movlw	3
   537   000B10  6ED5               	movwf	213,c	;volatile
   538                           
   539                           ;Laboratorio5.c: 58: TMR0IF=0;
   540   000B12  94F2               	bcf	4082,2,c	;volatile
   541                           
   542                           ;Laboratorio5.c: 59: TMR0=3036;
   543   000B14  0E0B               	movlw	11
   544   000B16  6ED7               	movwf	215,c	;volatile
   545   000B18  0EDC               	movlw	220
   546   000B1A  6ED6               	movwf	214,c	;volatile
   547                           
   548                           ;Laboratorio5.c: 60: TMR0IE=1;
   549   000B1C  8AF2               	bsf	4082,5,c	;volatile
   550                           
   551                           ;Laboratorio5.c: 61: GIE=1;
   552   000B1E  8EF2               	bsf	4082,7,c	;volatile
   553                           
   554                           ;Laboratorio5.c: 62: TMR0ON=1;
   555   000B20  8ED5               	bsf	4053,7,c	;volatile
   556                           
   557                           ;Laboratorio5.c: 64: BorraLCD();
   558   000B22  ECA4  F008         	call	_BorraLCD	;wreg free
   559                           
   560                           ;Laboratorio5.c: 66: if (TemperaturaGuardada != 0xFF) {
   561   000B26  281D               	incf	_TemperaturaGuardada^0,w,c
   562   000B28  B4D8               	btfsc	status,2,c
   563   000B2A  D028               	goto	l1967
   564                           
   565                           ;Laboratorio5.c: 67: MensajeLCD_Word("Ultima temp:");
   566   000B2C  0E01               	movlw	low STR_1
   567   000B2E  6E07               	movwf	MensajeLCD_Word@a^0,c
   568   000B30  ECC6  F007         	call	_MensajeLCD_Word	;wreg free
   569                           
   570                           ;Laboratorio5.c: 68: DireccionaLCD(192);
   571   000B34  0EC0               	movlw	192
   572   000B36  EC99  F008         	call	_DireccionaLCD
   573                           
   574                           ;Laboratorio5.c: 69: EscribeLCD_c(TemperaturaGuardada / 10 + 48);
   575   000B3A  0E0A               	movlw	10
   576   000B3C  6E03               	movwf	___lbdiv@divisor^0,c
   577   000B3E  501D               	movf	_TemperaturaGuardada^0,w,c
   578   000B40  ECA9  F007         	call	___lbdiv
   579   000B44  0F30               	addlw	48
   580   000B46  EC8E  F008         	call	_EscribeLCD_c
   581                           
   582                           ;Laboratorio5.c: 70: EscribeLCD_c(TemperaturaGuardada % 10 + 48);
   583   000B4A  0E0A               	movlw	10
   584   000B4C  6E03               	movwf	___lbmod@divisor^0,c
   585   000B4E  501D               	movf	_TemperaturaGuardada^0,w,c
   586   000B50  EC2E  F008         	call	___lbmod
   587   000B54  0F30               	addlw	48
   588   000B56  EC8E  F008         	call	_EscribeLCD_c
   589                           
   590                           ;Laboratorio5.c: 71: EscribeLCD_c('C');
   591   000B5A  0E43               	movlw	67
   592   000B5C  EC8E  F008         	call	_EscribeLCD_c
   593                           
   594                           ;Laboratorio5.c: 72: _delay((unsigned long)((2000)*(8000000/4000.0)));
   595   000B60  0E15               	movlw	21
   596   000B62  6E18               	movwf	(??_main+1)^0,c
   597   000B64  0E4B               	movlw	75
   598   000B66  6E17               	movwf	??_main^0,c
   599   000B68  0EBE               	movlw	190
   600   000B6A                     u1007:
   601   000B6A  2EE8               	decfsz	wreg,f,c
   602   000B6C  D7FE               	bra	u1007
   603   000B6E  2E17               	decfsz	??_main^0,f,c
   604   000B70  D7FC               	bra	u1007
   605   000B72  2E18               	decfsz	(??_main+1)^0,f,c
   606   000B74  D7FA               	bra	u1007
   607   000B76  D000               	nop2	
   608                           
   609                           ;Laboratorio5.c: 73: BorraLCD();
   610   000B78  ECA4  F008         	call	_BorraLCD	;wreg free
   611   000B7C                     l1967:
   612                           
   613                           ;Laboratorio5.c: 74: };Laboratorio5.c: 76: MensajeLCD_Word("Iniciando");
   614   000B7C  0E0E               	movlw	low STR_2
   615   000B7E  6E07               	movwf	MensajeLCD_Word@a^0,c
   616   000B80  ECC6  F007         	call	_MensajeLCD_Word	;wreg free
   617                           
   618                           ;Laboratorio5.c: 77: _delay((unsigned long)((500)*(8000000/4000.0)));
   619   000B84  0E06               	movlw	6
   620   000B86  6E18               	movwf	(??_main+1)^0,c
   621   000B88  0E13               	movlw	19
   622   000B8A  6E17               	movwf	??_main^0,c
   623   000B8C  0EAE               	movlw	174
   624   000B8E                     u1017:
   625   000B8E  2EE8               	decfsz	wreg,f,c
   626   000B90  D7FE               	bra	u1017
   627   000B92  2E17               	decfsz	??_main^0,f,c
   628   000B94  D7FC               	bra	u1017
   629   000B96  2E18               	decfsz	(??_main+1)^0,f,c
   630   000B98  D7FA               	bra	u1017
   631                           
   632                           ;Laboratorio5.c: 78: BorraLCD();
   633   000B9A  ECA4  F008         	call	_BorraLCD	;wreg free
   634                           
   635                           ;Laboratorio5.c: 79: _delay((unsigned long)((500)*(8000000/4000.0)));
   636   000B9E  0E06               	movlw	6
   637   000BA0  6E18               	movwf	(??_main+1)^0,c
   638   000BA2  0E13               	movlw	19
   639   000BA4  6E17               	movwf	??_main^0,c
   640   000BA6  0EAE               	movlw	174
   641   000BA8                     u1027:
   642   000BA8  2EE8               	decfsz	wreg,f,c
   643   000BAA  D7FE               	bra	u1027
   644   000BAC  2E17               	decfsz	??_main^0,f,c
   645   000BAE  D7FC               	bra	u1027
   646   000BB0  2E18               	decfsz	(??_main+1)^0,f,c
   647   000BB2  D7FA               	bra	u1027
   648   000BB4                     l1973:
   649                           
   650                           ;Laboratorio5.c: 82: _delay((unsigned long)((500)*(8000000/4000.0)));
   651   000BB4  0E06               	movlw	6
   652   000BB6  6E18               	movwf	(??_main+1)^0,c
   653   000BB8  0E13               	movlw	19
   654   000BBA  6E17               	movwf	??_main^0,c
   655   000BBC  0EAE               	movlw	174
   656   000BBE                     u1037:
   657   000BBE  2EE8               	decfsz	wreg,f,c
   658   000BC0  D7FE               	bra	u1037
   659   000BC2  2E17               	decfsz	??_main^0,f,c
   660   000BC4  D7FC               	bra	u1037
   661   000BC6  2E18               	decfsz	(??_main+1)^0,f,c
   662   000BC8  D7FA               	bra	u1037
   663                           
   664                           ;Laboratorio5.c: 83: LeerHT11();
   665   000BCA  ECE3  F007         	call	_LeerHT11	;wreg free
   666                           
   667                           ;Laboratorio5.c: 84: GuardarDatos(0, Temp);
   668   000BCE  0E00               	movlw	0
   669   000BD0  6E04               	movwf	(GuardarDatos@dir+1)^0,c
   670   000BD2  0E00               	movlw	0
   671   000BD4  6E03               	movwf	GuardarDatos@dir^0,c
   672   000BD6  C01F  F005         	movff	_Temp,GuardarDatos@dato
   673   000BDA  EC6A  F008         	call	_GuardarDatos	;wreg free
   674                           
   675                           ;Laboratorio5.c: 85: ColorRGB(Temp);
   676   000BDE  C01F  F003         	movff	_Temp,ColorRGB@val
   677   000BE2  6A04               	clrf	(ColorRGB@val+1)^0,c
   678   000BE4  EC1E  F006         	call	_ColorRGB	;wreg free
   679                           
   680                           ;Laboratorio5.c: 88: if(!RC4) TransmitirDatos(RC0, RC1);
   681   000BE8  B882               	btfsc	3970,4,c	;volatile
   682   000BEA  D011               	goto	l1983
   683   000BEC  A082               	btfss	3970,0,c	;volatile
   684   000BEE  D002               	goto	u930
   685   000BF0  0E01               	movlw	1
   686   000BF2  D001               	goto	u940
   687   000BF4                     u930:
   688   000BF4  0E00               	movlw	0
   689   000BF6                     u940:
   690   000BF6  6E0B               	movwf	TransmitirDatos@Ent1^0,c
   691   000BF8  6A0C               	clrf	(TransmitirDatos@Ent1+1)^0,c
   692   000BFA  A282               	btfss	3970,1,c	;volatile
   693   000BFC  D002               	goto	u950
   694   000BFE  0E01               	movlw	1
   695   000C00  D001               	goto	u960
   696   000C02                     u950:
   697   000C02  0E00               	movlw	0
   698   000C04                     u960:
   699   000C04  6E0D               	movwf	TransmitirDatos@Ent2^0,c
   700   000C06  6A0E               	clrf	(TransmitirDatos@Ent2+1)^0,c
   701   000C08  EC12  F004         	call	_TransmitirDatos	;wreg free
   702   000C0C  D00A               	goto	l1985
   703   000C0E                     l1983:
   704                           
   705                           ;Laboratorio5.c: 89: else TransmitirDatos(A, B);
   706   000C0E  C01B  F00B         	movff	_A,TransmitirDatos@Ent1
   707   000C12  C01C  F00C         	movff	_A+1,TransmitirDatos@Ent1+1
   708   000C16  C019  F00D         	movff	_B,TransmitirDatos@Ent2
   709   000C1A  C01A  F00E         	movff	_B+1,TransmitirDatos@Ent2+1
   710   000C1E  EC12  F004         	call	_TransmitirDatos	;wreg free
   711   000C22                     l1985:
   712                           
   713                           ;Laboratorio5.c: 91: ConvertirUnidades(0);
   714   000C22  0E00               	movlw	0
   715   000C24  ECAE  F008         	call	_ConvertirUnidades
   716                           
   717                           ;Laboratorio5.c: 92: RD3 = (ADRES <= 511) ? 0 : 1;
   718   000C28  0E00               	movlw	0
   719   000C2A  5CC3               	subwf	195,w,c	;volatile
   720   000C2C  0E02               	movlw	2
   721   000C2E  58C4               	subwfb	196,w,c	;volatile
   722   000C30  A0D8               	btfss	status,0,c
   723   000C32  D002               	goto	u970
   724   000C34  8683               	bsf	3971,3,c	;volatile
   725   000C36  D7BE               	goto	l1973
   726   000C38                     u970:
   727   000C38  9683               	bcf	3971,3,c	;volatile
   728   000C3A  D7BC               	goto	l1973
   729   000C3C                     __end_of_main:
   730                           	callstack 0
   731                           
   732 ;; *************** function _TransmitirDatos *****************
   733 ;; Defined at:
   734 ;;		line 144 in file "Laboratorio5.c"
   735 ;; Parameters:    Size  Location     Type
   736 ;;  Ent1            2   10[COMRAM] unsigned int 
   737 ;;  Ent2            2   12[COMRAM] unsigned int 
   738 ;; Auto vars:     Size  Location     Type
   739 ;;  TempC           2   20[COMRAM] unsigned int 
   740 ;;  Simb            2   18[COMRAM] unsigned int 
   741 ;;  n               2   16[COMRAM] unsigned int 
   742 ;;  HumedadC        2    0        unsigned int 
   743 ;; Return value:  Size  Location     Type
   744 ;;                  1    wreg      void 
   745 ;; Registers used:
   746 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   747 ;; Tracked objects:
   748 ;;		On entry : 0/0
   749 ;;		On exit  : 0/0
   750 ;;		Unchanged: 0/0
   751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   752 ;;      Params:         4       0       0       0       0       0       0       0       0
   753 ;;      Locals:         6       0       0       0       0       0       0       0       0
   754 ;;      Temps:          2       0       0       0       0       0       0       0       0
   755 ;;      Totals:        12       0       0       0       0       0       0       0       0
   756 ;;Total ram usage:       12 bytes
   757 ;; Hardware stack levels used: 1
   758 ;; Hardware stack levels required when called: 6
   759 ;; This function calls:
   760 ;;		_BorraLCD
   761 ;;		_DireccionaLCD
   762 ;;		_EscribeLCD_c
   763 ;;		_MensajeLCD_Word
   764 ;;		_Transmitir
   765 ;;		___awdiv
   766 ;;		___lbdiv
   767 ;;		___lbmod
   768 ;;		___lwdiv
   769 ;;		___lwmod
   770 ;;		___wmul
   771 ;; This function is called by:
   772 ;;		_main
   773 ;; This function uses a non-reentrant model
   774 ;;
   775                           
   776                           	psect	text1
   777   000824                     __ptext1:
   778                           	callstack 0
   779   000824                     _TransmitirDatos:
   780                           	callstack 24
   781                           
   782                           ;Laboratorio5.c: 145: unsigned int n = Ent1 * 10 + Ent2, TempC = Temp, HumedadC = Humeda
      +                          d;
   783                           
   784                           ;incstack = 0
   785   000824  C00B  F003         	movff	TransmitirDatos@Ent1,___wmul@multiplier
   786   000828  C00C  F004         	movff	TransmitirDatos@Ent1+1,___wmul@multiplier+1
   787   00082C  0E00               	movlw	0
   788   00082E  6E06               	movwf	(___wmul@multiplicand+1)^0,c
   789   000830  0E0A               	movlw	10
   790   000832  6E05               	movwf	___wmul@multiplicand^0,c
   791   000834  EC57  F008         	call	___wmul	;wreg free
   792   000838  500D               	movf	TransmitirDatos@Ent2^0,w,c
   793   00083A  2403               	addwf	?___wmul^0,w,c
   794   00083C  6E11               	movwf	TransmitirDatos@n^0,c
   795   00083E  500E               	movf	(TransmitirDatos@Ent2+1)^0,w,c
   796   000840  2004               	addwfc	(?___wmul+1)^0,w,c
   797   000842  6E12               	movwf	(TransmitirDatos@n+1)^0,c
   798   000844  C01F  F015         	movff	_Temp,TransmitirDatos@TempC
   799   000848  6A16               	clrf	(TransmitirDatos@TempC+1)^0,c
   800                           
   801                           ;Laboratorio5.c: 146: unsigned int Simb = 67;
   802   00084A  0E00               	movlw	0
   803   00084C  6E14               	movwf	(TransmitirDatos@Simb+1)^0,c
   804   00084E  0E43               	movlw	67
   805   000850  6E13               	movwf	TransmitirDatos@Simb^0,c
   806                           
   807                           ;Laboratorio5.c: 147: BorraLCD();
   808   000852  ECA4  F008         	call	_BorraLCD	;wreg free
   809                           
   810                           ;Laboratorio5.c: 148: switch (n) {
   811   000856  D03E               	goto	l1839
   812   000858                     l236:
   813                           
   814                           ;Laboratorio5.c: 150: TempC = Temp;
   815   000858  C01F  F015         	movff	_Temp,TransmitirDatos@TempC
   816   00085C  6A16               	clrf	(TransmitirDatos@TempC+1)^0,c
   817                           
   818                           ;Laboratorio5.c: 151: Simb = 67;
   819   00085E  0E00               	movlw	0
   820   000860  6E14               	movwf	(TransmitirDatos@Simb+1)^0,c
   821   000862  0E43               	movlw	67
   822   000864  D035               	goto	L3
   823   000866                     l1825:
   824                           
   825                           ;Laboratorio5.c: 154: TempC = Temp + 273;
   826   000866  0E11               	movlw	17
   827   000868  241F               	addwf	_Temp^0,w,c
   828   00086A  6E15               	movwf	TransmitirDatos@TempC^0,c
   829   00086C  6A16               	clrf	(TransmitirDatos@TempC+1)^0,c
   830   00086E  0E01               	movlw	1
   831   000870  2216               	addwfc	(TransmitirDatos@TempC+1)^0,f,c
   832                           
   833                           ;Laboratorio5.c: 155: Simb = 75;
   834   000872  0E00               	movlw	0
   835   000874  6E14               	movwf	(TransmitirDatos@Simb+1)^0,c
   836   000876  0E4B               	movlw	75
   837   000878  D02B               	goto	L3
   838   00087A                     l1829:
   839                           
   840                           ;Laboratorio5.c: 158: TempC = Temp * 9 / 5 + 492;
   841   00087A  501F               	movf	_Temp^0,w,c
   842   00087C  0D09               	mullw	9
   843   00087E  CFF3 F003          	movff	prodl,___awdiv@dividend
   844   000882  CFF4 F004          	movff	prodh,___awdiv@dividend+1
   845   000886  0E00               	movlw	0
   846   000888  6E06               	movwf	(___awdiv@divisor+1)^0,c
   847   00088A  0E05               	movlw	5
   848   00088C  6E05               	movwf	___awdiv@divisor^0,c
   849   00088E  ECC9  F006         	call	___awdiv	;wreg free
   850   000892  0EEC               	movlw	236
   851   000894  2403               	addwf	?___awdiv^0,w,c
   852   000896  6E15               	movwf	TransmitirDatos@TempC^0,c
   853   000898  0E01               	movlw	1
   854   00089A  2004               	addwfc	(?___awdiv+1)^0,w,c
   855   00089C  6E16               	movwf	(TransmitirDatos@TempC+1)^0,c
   856                           
   857                           ;Laboratorio5.c: 159: Simb = 82;
   858   00089E  0E00               	movlw	0
   859   0008A0  6E14               	movwf	(TransmitirDatos@Simb+1)^0,c
   860   0008A2  0E52               	movlw	82
   861   0008A4  D015               	goto	L3
   862   0008A6                     l1833:
   863                           
   864                           ;Laboratorio5.c: 162: TempC = Temp * 9 / 5 + 32;
   865   0008A6  501F               	movf	_Temp^0,w,c
   866   0008A8  0D09               	mullw	9
   867   0008AA  CFF3 F003          	movff	prodl,___awdiv@dividend
   868   0008AE  CFF4 F004          	movff	prodh,___awdiv@dividend+1
   869   0008B2  0E00               	movlw	0
   870   0008B4  6E06               	movwf	(___awdiv@divisor+1)^0,c
   871   0008B6  0E05               	movlw	5
   872   0008B8  6E05               	movwf	___awdiv@divisor^0,c
   873   0008BA  ECC9  F006         	call	___awdiv	;wreg free
   874   0008BE  0E20               	movlw	32
   875   0008C0  2403               	addwf	?___awdiv^0,w,c
   876   0008C2  6E15               	movwf	TransmitirDatos@TempC^0,c
   877   0008C4  0E00               	movlw	0
   878   0008C6  2004               	addwfc	(?___awdiv+1)^0,w,c
   879   0008C8  6E16               	movwf	(TransmitirDatos@TempC+1)^0,c
   880                           
   881                           ;Laboratorio5.c: 163: Simb = 70;
   882   0008CA  0E00               	movlw	0
   883   0008CC  6E14               	movwf	(TransmitirDatos@Simb+1)^0,c
   884   0008CE  0E46               	movlw	70
   885   0008D0                     L3:
   886   0008D0  6E13               	movwf	TransmitirDatos@Simb^0,c
   887                           
   888                           ;Laboratorio5.c: 164: break;
   889   0008D2  D015               	goto	l1841
   890   0008D4                     l1839:
   891   0008D4  C011  F00F         	movff	TransmitirDatos@n,??_TransmitirDatos
   892   0008D8  C012  F010         	movff	TransmitirDatos@n+1,??_TransmitirDatos+1
   893                           
   894                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   895                           ; Switch size 1, requested type "simple"
   896                           ; Number of cases is 1, Range of values is 0 to 0
   897                           ; switch strategies available:
   898                           ; Name         Instructions Cycles
   899                           ; simple_byte            4     3 (average)
   900                           ;	Chosen strategy is simple_byte
   901   0008DC  5010               	movf	(??_TransmitirDatos+1)^0,w,c
   902   0008DE  0A00               	xorlw	0	; case 0
   903   0008E0  A4D8               	btfss	status,2,c
   904   0008E2  D00D               	goto	l1841
   905                           
   906                           ; Switch size 1, requested type "simple"
   907                           ; Number of cases is 4, Range of values is 0 to 11
   908                           ; switch strategies available:
   909                           ; Name         Instructions Cycles
   910                           ; simple_byte           13     7 (average)
   911                           ;	Chosen strategy is simple_byte
   912   0008E4  500F               	movf	??_TransmitirDatos^0,w,c
   913   0008E6  0A00               	xorlw	0	; case 0
   914   0008E8  B4D8               	btfsc	status,2,c
   915   0008EA  D7B6               	goto	l236
   916   0008EC  0A01               	xorlw	1	; case 1
   917   0008EE  B4D8               	btfsc	status,2,c
   918   0008F0  D7BA               	goto	l1825
   919   0008F2  0A0B               	xorlw	11	; case 10
   920   0008F4  B4D8               	btfsc	status,2,c
   921   0008F6  D7C1               	goto	l1829
   922   0008F8  0A01               	xorlw	1	; case 11
   923   0008FA  B4D8               	btfsc	status,2,c
   924   0008FC  D7D4               	goto	l1833
   925   0008FE                     l1841:
   926                           
   927                           ;Laboratorio5.c: 166: Transmitir('T');
   928   0008FE  0E54               	movlw	84
   929   000900  ECC6  F008         	call	_Transmitir
   930                           
   931                           ;Laboratorio5.c: 167: Transmitir('e');
   932   000904  0E65               	movlw	101
   933   000906  ECC6  F008         	call	_Transmitir
   934                           
   935                           ;Laboratorio5.c: 168: Transmitir('m');
   936   00090A  0E6D               	movlw	109
   937   00090C  ECC6  F008         	call	_Transmitir
   938                           
   939                           ;Laboratorio5.c: 169: Transmitir('p');
   940   000910  0E70               	movlw	112
   941   000912  ECC6  F008         	call	_Transmitir
   942                           
   943                           ;Laboratorio5.c: 170: Transmitir(':');
   944   000916  0E3A               	movlw	58
   945   000918  ECC6  F008         	call	_Transmitir
   946                           
   947                           ;Laboratorio5.c: 171: Transmitir(' ');
   948   00091C  0E20               	movlw	32
   949   00091E  ECC6  F008         	call	_Transmitir
   950                           
   951                           ;Laboratorio5.c: 173: MensajeLCD_Word("Temp:");
   952   000922  0E18               	movlw	low STR_3
   953   000924  6E07               	movwf	MensajeLCD_Word@a^0,c
   954   000926  ECC6  F007         	call	_MensajeLCD_Word	;wreg free
   955                           
   956                           ;Laboratorio5.c: 174: if (TempC / 100 > 0) {
   957   00092A  C015  F003         	movff	TransmitirDatos@TempC,___lwdiv@dividend
   958   00092E  C016  F004         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
   959   000932  0E00               	movlw	0
   960   000934  6E06               	movwf	(___lwdiv@divisor+1)^0,c
   961   000936  0E64               	movlw	100
   962   000938  6E05               	movwf	___lwdiv@divisor^0,c
   963   00093A  EC3E  F007         	call	___lwdiv	;wreg free
   964   00093E  5003               	movf	?___lwdiv^0,w,c
   965   000940  1004               	iorwf	(?___lwdiv+1)^0,w,c
   966   000942  B4D8               	btfsc	status,2,c
   967   000944  D02A               	goto	l241
   968                           
   969                           ;Laboratorio5.c: 175: Transmitir(TempC / 100 + 48);
   970   000946  C015  F003         	movff	TransmitirDatos@TempC,___lwdiv@dividend
   971   00094A  C016  F004         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
   972   00094E  0E00               	movlw	0
   973   000950  6E06               	movwf	(___lwdiv@divisor+1)^0,c
   974   000952  0E64               	movlw	100
   975   000954  6E05               	movwf	___lwdiv@divisor^0,c
   976   000956  EC3E  F007         	call	___lwdiv	;wreg free
   977   00095A  5003               	movf	?___lwdiv^0,w,c
   978   00095C  0F30               	addlw	48
   979   00095E  ECC6  F008         	call	_Transmitir
   980                           
   981                           ;Laboratorio5.c: 176: EscribeLCD_c(TempC / 100 + 48);
   982   000962  C015  F003         	movff	TransmitirDatos@TempC,___lwdiv@dividend
   983   000966  C016  F004         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
   984   00096A  0E00               	movlw	0
   985   00096C  6E06               	movwf	(___lwdiv@divisor+1)^0,c
   986   00096E  0E64               	movlw	100
   987   000970  6E05               	movwf	___lwdiv@divisor^0,c
   988   000972  EC3E  F007         	call	___lwdiv	;wreg free
   989   000976  5003               	movf	?___lwdiv^0,w,c
   990   000978  0F30               	addlw	48
   991   00097A  EC8E  F008         	call	_EscribeLCD_c
   992                           
   993                           ;Laboratorio5.c: 177: TempC = TempC % 100;
   994   00097E  C015  F003         	movff	TransmitirDatos@TempC,___lwmod@dividend
   995   000982  C016  F004         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
   996   000986  0E00               	movlw	0
   997   000988  6E06               	movwf	(___lwmod@divisor+1)^0,c
   998   00098A  0E64               	movlw	100
   999   00098C  6E05               	movwf	___lwmod@divisor^0,c
  1000   00098E  EC67  F007         	call	___lwmod	;wreg free
  1001   000992  C003  F015         	movff	?___lwmod,TransmitirDatos@TempC
  1002   000996  C004  F016         	movff	?___lwmod+1,TransmitirDatos@TempC+1
  1003   00099A                     l241:
  1004                           
  1005                           ;Laboratorio5.c: 178: };Laboratorio5.c: 179: Transmitir(TempC / 10 + 48);
  1006   00099A  C015  F003         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1007   00099E  C016  F004         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1008   0009A2  0E00               	movlw	0
  1009   0009A4  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1010   0009A6  0E0A               	movlw	10
  1011   0009A8  6E05               	movwf	___lwdiv@divisor^0,c
  1012   0009AA  EC3E  F007         	call	___lwdiv	;wreg free
  1013   0009AE  5003               	movf	?___lwdiv^0,w,c
  1014   0009B0  0F30               	addlw	48
  1015   0009B2  ECC6  F008         	call	_Transmitir
  1016                           
  1017                           ;Laboratorio5.c: 180: Transmitir(TempC % 10 + 48);
  1018   0009B6  C015  F003         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1019   0009BA  C016  F004         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1020   0009BE  0E00               	movlw	0
  1021   0009C0  6E06               	movwf	(___lwmod@divisor+1)^0,c
  1022   0009C2  0E0A               	movlw	10
  1023   0009C4  6E05               	movwf	___lwmod@divisor^0,c
  1024   0009C6  EC67  F007         	call	___lwmod	;wreg free
  1025   0009CA  5003               	movf	?___lwmod^0,w,c
  1026   0009CC  0F30               	addlw	48
  1027   0009CE  ECC6  F008         	call	_Transmitir
  1028                           
  1029                           ;Laboratorio5.c: 181: Transmitir(167);
  1030   0009D2  0EA7               	movlw	167
  1031   0009D4  ECC6  F008         	call	_Transmitir
  1032                           
  1033                           ;Laboratorio5.c: 182: Transmitir(Simb);
  1034   0009D8  5013               	movf	TransmitirDatos@Simb^0,w,c
  1035   0009DA  ECC6  F008         	call	_Transmitir
  1036                           
  1037                           ;Laboratorio5.c: 183: Transmitir(' ');
  1038   0009DE  0E20               	movlw	32
  1039   0009E0  ECC6  F008         	call	_Transmitir
  1040                           
  1041                           ;Laboratorio5.c: 184: Transmitir('\n');
  1042   0009E4  0E0A               	movlw	10
  1043   0009E6  ECC6  F008         	call	_Transmitir
  1044                           
  1045                           ;Laboratorio5.c: 185: Transmitir('H');
  1046   0009EA  0E48               	movlw	72
  1047   0009EC  ECC6  F008         	call	_Transmitir
  1048                           
  1049                           ;Laboratorio5.c: 186: Transmitir('u');
  1050   0009F0  0E75               	movlw	117
  1051   0009F2  ECC6  F008         	call	_Transmitir
  1052                           
  1053                           ;Laboratorio5.c: 187: Transmitir('m');
  1054   0009F6  0E6D               	movlw	109
  1055   0009F8  ECC6  F008         	call	_Transmitir
  1056                           
  1057                           ;Laboratorio5.c: 188: Transmitir(':');
  1058   0009FC  0E3A               	movlw	58
  1059   0009FE  ECC6  F008         	call	_Transmitir
  1060                           
  1061                           ;Laboratorio5.c: 189: Transmitir(' ');
  1062   000A02  0E20               	movlw	32
  1063   000A04  ECC6  F008         	call	_Transmitir
  1064                           
  1065                           ;Laboratorio5.c: 190: Transmitir(Humedad / 10 + 48);
  1066   000A08  0E0A               	movlw	10
  1067   000A0A  6E03               	movwf	___lbdiv@divisor^0,c
  1068   000A0C  501E               	movf	_Humedad^0,w,c
  1069   000A0E  ECA9  F007         	call	___lbdiv
  1070   000A12  0F30               	addlw	48
  1071   000A14  ECC6  F008         	call	_Transmitir
  1072                           
  1073                           ;Laboratorio5.c: 191: Transmitir(Humedad % 10 + 48);
  1074   000A18  0E0A               	movlw	10
  1075   000A1A  6E03               	movwf	___lbmod@divisor^0,c
  1076   000A1C  501E               	movf	_Humedad^0,w,c
  1077   000A1E  EC2E  F008         	call	___lbmod
  1078   000A22  0F30               	addlw	48
  1079   000A24  ECC6  F008         	call	_Transmitir
  1080                           
  1081                           ;Laboratorio5.c: 192: Transmitir(' ');
  1082   000A28  0E20               	movlw	32
  1083   000A2A  ECC6  F008         	call	_Transmitir
  1084                           
  1085                           ;Laboratorio5.c: 193: Transmitir('%');
  1086   000A2E  0E25               	movlw	37
  1087   000A30  ECC6  F008         	call	_Transmitir
  1088                           
  1089                           ;Laboratorio5.c: 194: Transmitir('\n');
  1090   000A34  0E0A               	movlw	10
  1091   000A36  ECC6  F008         	call	_Transmitir
  1092                           
  1093                           ;Laboratorio5.c: 195: Transmitir(' ');
  1094   000A3A  0E20               	movlw	32
  1095   000A3C  ECC6  F008         	call	_Transmitir
  1096                           
  1097                           ;Laboratorio5.c: 197: EscribeLCD_c(TempC / 10 + 48);
  1098   000A40  C015  F003         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1099   000A44  C016  F004         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1100   000A48  0E00               	movlw	0
  1101   000A4A  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1102   000A4C  0E0A               	movlw	10
  1103   000A4E  6E05               	movwf	___lwdiv@divisor^0,c
  1104   000A50  EC3E  F007         	call	___lwdiv	;wreg free
  1105   000A54  5003               	movf	?___lwdiv^0,w,c
  1106   000A56  0F30               	addlw	48
  1107   000A58  EC8E  F008         	call	_EscribeLCD_c
  1108                           
  1109                           ;Laboratorio5.c: 198: EscribeLCD_c(TempC % 10 + 48);
  1110   000A5C  C015  F003         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1111   000A60  C016  F004         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1112   000A64  0E00               	movlw	0
  1113   000A66  6E06               	movwf	(___lwmod@divisor+1)^0,c
  1114   000A68  0E0A               	movlw	10
  1115   000A6A  6E05               	movwf	___lwmod@divisor^0,c
  1116   000A6C  EC67  F007         	call	___lwmod	;wreg free
  1117   000A70  5003               	movf	?___lwmod^0,w,c
  1118   000A72  0F30               	addlw	48
  1119   000A74  EC8E  F008         	call	_EscribeLCD_c
  1120                           
  1121                           ;Laboratorio5.c: 199: EscribeLCD_c(Simb);
  1122   000A78  5013               	movf	TransmitirDatos@Simb^0,w,c
  1123   000A7A  EC8E  F008         	call	_EscribeLCD_c
  1124                           
  1125                           ;Laboratorio5.c: 200: DireccionaLCD(192);
  1126   000A7E  0EC0               	movlw	192
  1127   000A80  EC99  F008         	call	_DireccionaLCD
  1128                           
  1129                           ;Laboratorio5.c: 201: MensajeLCD_Word("Hum:");
  1130   000A84  0E1E               	movlw	low STR_4
  1131   000A86  6E07               	movwf	MensajeLCD_Word@a^0,c
  1132   000A88  ECC6  F007         	call	_MensajeLCD_Word	;wreg free
  1133                           
  1134                           ;Laboratorio5.c: 202: EscribeLCD_c(Humedad / 10 + 48);
  1135   000A8C  0E0A               	movlw	10
  1136   000A8E  6E03               	movwf	___lbdiv@divisor^0,c
  1137   000A90  501E               	movf	_Humedad^0,w,c
  1138   000A92  ECA9  F007         	call	___lbdiv
  1139   000A96  0F30               	addlw	48
  1140   000A98  EC8E  F008         	call	_EscribeLCD_c
  1141                           
  1142                           ;Laboratorio5.c: 203: EscribeLCD_c(Humedad % 10 + 48);
  1143   000A9C  0E0A               	movlw	10
  1144   000A9E  6E03               	movwf	___lbmod@divisor^0,c
  1145   000AA0  501E               	movf	_Humedad^0,w,c
  1146   000AA2  EC2E  F008         	call	___lbmod
  1147   000AA6  0F30               	addlw	48
  1148   000AA8  EC8E  F008         	call	_EscribeLCD_c
  1149                           
  1150                           ;Laboratorio5.c: 204: EscribeLCD_c('%');
  1151   000AAC  0E25               	movlw	37
  1152   000AAE  EC8E  F008         	call	_EscribeLCD_c
  1153   000AB2  0012               	return		;funcret
  1154   000AB4                     __end_of_TransmitirDatos:
  1155                           	callstack 0
  1156                           
  1157 ;; *************** function ___wmul *****************
  1158 ;; Defined at:
  1159 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;  multiplier      2    2[COMRAM] unsigned int 
  1162 ;;  multiplicand    2    4[COMRAM] unsigned int 
  1163 ;; Auto vars:     Size  Location     Type
  1164 ;;  product         2    6[COMRAM] unsigned int 
  1165 ;; Return value:  Size  Location     Type
  1166 ;;                  2    2[COMRAM] unsigned int 
  1167 ;; Registers used:
  1168 ;;		wreg, status,2, status,0, prodl, prodh
  1169 ;; Tracked objects:
  1170 ;;		On entry : 0/0
  1171 ;;		On exit  : 0/0
  1172 ;;		Unchanged: 0/0
  1173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1174 ;;      Params:         4       0       0       0       0       0       0       0       0
  1175 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1176 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1177 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1178 ;;Total ram usage:        6 bytes
  1179 ;; Hardware stack levels used: 1
  1180 ;; Hardware stack levels required when called: 2
  1181 ;; This function calls:
  1182 ;;		Nothing
  1183 ;; This function is called by:
  1184 ;;		_TransmitirDatos
  1185 ;; This function uses a non-reentrant model
  1186 ;;
  1187                           
  1188                           	psect	text2
  1189   0010AE                     __ptext2:
  1190                           	callstack 0
  1191   0010AE                     ___wmul:
  1192                           	callstack 27
  1193                           
  1194                           ;incstack = 0
  1195   0010AE  5003               	movf	___wmul@multiplier^0,w,c
  1196   0010B0  0205               	mulwf	___wmul@multiplicand^0,c
  1197   0010B2  CFF3 F007          	movff	prodl,___wmul@product
  1198   0010B6  CFF4 F008          	movff	prodh,___wmul@product+1
  1199   0010BA  5003               	movf	___wmul@multiplier^0,w,c
  1200   0010BC  0206               	mulwf	(___wmul@multiplicand+1)^0,c
  1201   0010BE  50F3               	movf	243,w,c
  1202   0010C0  2608               	addwf	(___wmul@product+1)^0,f,c
  1203   0010C2  5004               	movf	(___wmul@multiplier+1)^0,w,c
  1204   0010C4  0205               	mulwf	___wmul@multiplicand^0,c
  1205   0010C6  50F3               	movf	243,w,c
  1206   0010C8  2608               	addwf	(___wmul@product+1)^0,f,c
  1207   0010CA  C007  F003         	movff	___wmul@product,?___wmul
  1208   0010CE  C008  F004         	movff	___wmul@product+1,?___wmul+1
  1209   0010D2  0012               	return		;funcret
  1210   0010D4                     __end_of___wmul:
  1211                           	callstack 0
  1212                           
  1213 ;; *************** function ___lwmod *****************
  1214 ;; Defined at:
  1215 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1216 ;; Parameters:    Size  Location     Type
  1217 ;;  dividend        2    2[COMRAM] unsigned int 
  1218 ;;  divisor         2    4[COMRAM] unsigned int 
  1219 ;; Auto vars:     Size  Location     Type
  1220 ;;  counter         1    6[COMRAM] unsigned char 
  1221 ;; Return value:  Size  Location     Type
  1222 ;;                  2    2[COMRAM] unsigned int 
  1223 ;; Registers used:
  1224 ;;		wreg, status,2, status,0
  1225 ;; Tracked objects:
  1226 ;;		On entry : 0/0
  1227 ;;		On exit  : 0/0
  1228 ;;		Unchanged: 0/0
  1229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1230 ;;      Params:         4       0       0       0       0       0       0       0       0
  1231 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1232 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1233 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1234 ;;Total ram usage:        5 bytes
  1235 ;; Hardware stack levels used: 1
  1236 ;; Hardware stack levels required when called: 2
  1237 ;; This function calls:
  1238 ;;		Nothing
  1239 ;; This function is called by:
  1240 ;;		_TransmitirDatos
  1241 ;; This function uses a non-reentrant model
  1242 ;;
  1243                           
  1244                           	psect	text3
  1245   000ECE                     __ptext3:
  1246                           	callstack 0
  1247   000ECE                     ___lwmod:
  1248                           	callstack 27
  1249                           
  1250                           ;incstack = 0
  1251   000ECE  5005               	movf	___lwmod@divisor^0,w,c
  1252   000ED0  1006               	iorwf	(___lwmod@divisor+1)^0,w,c
  1253   000ED2  B4D8               	btfsc	status,2,c
  1254   000ED4  D018               	goto	l781
  1255   000ED6  0E01               	movlw	1
  1256   000ED8  6E07               	movwf	___lwmod@counter^0,c
  1257   000EDA  D004               	goto	l1745
  1258   000EDC                     l1743:
  1259   000EDC  90D8               	bcf	status,0,c
  1260   000EDE  3605               	rlcf	___lwmod@divisor^0,f,c
  1261   000EE0  3606               	rlcf	(___lwmod@divisor+1)^0,f,c
  1262   000EE2  2A07               	incf	___lwmod@counter^0,f,c
  1263   000EE4                     l1745:
  1264   000EE4  AE06               	btfss	(___lwmod@divisor+1)^0,7,c
  1265   000EE6  D7FA               	goto	l1743
  1266   000EE8                     u730:
  1267   000EE8  5005               	movf	___lwmod@divisor^0,w,c
  1268   000EEA  5C03               	subwf	___lwmod@dividend^0,w,c
  1269   000EEC  5006               	movf	(___lwmod@divisor+1)^0,w,c
  1270   000EEE  5804               	subwfb	(___lwmod@dividend+1)^0,w,c
  1271   000EF0  A0D8               	btfss	status,0,c
  1272   000EF2  D004               	goto	l1751
  1273   000EF4  5005               	movf	___lwmod@divisor^0,w,c
  1274   000EF6  5E03               	subwf	___lwmod@dividend^0,f,c
  1275   000EF8  5006               	movf	(___lwmod@divisor+1)^0,w,c
  1276   000EFA  5A04               	subwfb	(___lwmod@dividend+1)^0,f,c
  1277   000EFC                     l1751:
  1278   000EFC  90D8               	bcf	status,0,c
  1279   000EFE  3206               	rrcf	(___lwmod@divisor+1)^0,f,c
  1280   000F00  3205               	rrcf	___lwmod@divisor^0,f,c
  1281   000F02  2E07               	decfsz	___lwmod@counter^0,f,c
  1282   000F04  D7F1               	goto	u730
  1283   000F06                     l781:
  1284   000F06  C003  F003         	movff	___lwmod@dividend,?___lwmod
  1285   000F0A  C004  F004         	movff	___lwmod@dividend+1,?___lwmod+1
  1286   000F0E  0012               	return		;funcret
  1287   000F10                     __end_of___lwmod:
  1288                           	callstack 0
  1289                           
  1290 ;; *************** function ___lwdiv *****************
  1291 ;; Defined at:
  1292 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1293 ;; Parameters:    Size  Location     Type
  1294 ;;  dividend        2    2[COMRAM] unsigned int 
  1295 ;;  divisor         2    4[COMRAM] unsigned int 
  1296 ;; Auto vars:     Size  Location     Type
  1297 ;;  quotient        2    6[COMRAM] unsigned int 
  1298 ;;  counter         1    8[COMRAM] unsigned char 
  1299 ;; Return value:  Size  Location     Type
  1300 ;;                  2    2[COMRAM] unsigned int 
  1301 ;; Registers used:
  1302 ;;		wreg, status,2, status,0
  1303 ;; Tracked objects:
  1304 ;;		On entry : 0/0
  1305 ;;		On exit  : 0/0
  1306 ;;		Unchanged: 0/0
  1307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1308 ;;      Params:         4       0       0       0       0       0       0       0       0
  1309 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1310 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1311 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1312 ;;Total ram usage:        7 bytes
  1313 ;; Hardware stack levels used: 1
  1314 ;; Hardware stack levels required when called: 2
  1315 ;; This function calls:
  1316 ;;		Nothing
  1317 ;; This function is called by:
  1318 ;;		_TransmitirDatos
  1319 ;; This function uses a non-reentrant model
  1320 ;;
  1321                           
  1322                           	psect	text4
  1323   000E7C                     __ptext4:
  1324                           	callstack 0
  1325   000E7C                     ___lwdiv:
  1326                           	callstack 27
  1327                           
  1328                           ;incstack = 0
  1329   000E7C  0E00               	movlw	0
  1330   000E7E  6E08               	movwf	(___lwdiv@quotient+1)^0,c
  1331   000E80  0E00               	movlw	0
  1332   000E82  6E07               	movwf	___lwdiv@quotient^0,c
  1333   000E84  5005               	movf	___lwdiv@divisor^0,w,c
  1334   000E86  1006               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1335   000E88  B4D8               	btfsc	status,2,c
  1336   000E8A  D01C               	goto	l771
  1337   000E8C  0E01               	movlw	1
  1338   000E8E  6E09               	movwf	___lwdiv@counter^0,c
  1339   000E90  D004               	goto	l1725
  1340   000E92                     l1723:
  1341   000E92  90D8               	bcf	status,0,c
  1342   000E94  3605               	rlcf	___lwdiv@divisor^0,f,c
  1343   000E96  3606               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1344   000E98  2A09               	incf	___lwdiv@counter^0,f,c
  1345   000E9A                     l1725:
  1346   000E9A  AE06               	btfss	(___lwdiv@divisor+1)^0,7,c
  1347   000E9C  D7FA               	goto	l1723
  1348   000E9E                     u700:
  1349   000E9E  90D8               	bcf	status,0,c
  1350   000EA0  3607               	rlcf	___lwdiv@quotient^0,f,c
  1351   000EA2  3608               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1352   000EA4  5005               	movf	___lwdiv@divisor^0,w,c
  1353   000EA6  5C03               	subwf	___lwdiv@dividend^0,w,c
  1354   000EA8  5006               	movf	(___lwdiv@divisor+1)^0,w,c
  1355   000EAA  5804               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1356   000EAC  A0D8               	btfss	status,0,c
  1357   000EAE  D005               	goto	l1735
  1358   000EB0  5005               	movf	___lwdiv@divisor^0,w,c
  1359   000EB2  5E03               	subwf	___lwdiv@dividend^0,f,c
  1360   000EB4  5006               	movf	(___lwdiv@divisor+1)^0,w,c
  1361   000EB6  5A04               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1362   000EB8  8007               	bsf	___lwdiv@quotient^0,0,c
  1363   000EBA                     l1735:
  1364   000EBA  90D8               	bcf	status,0,c
  1365   000EBC  3206               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1366   000EBE  3205               	rrcf	___lwdiv@divisor^0,f,c
  1367   000EC0  2E09               	decfsz	___lwdiv@counter^0,f,c
  1368   000EC2  D7ED               	goto	u700
  1369   000EC4                     l771:
  1370   000EC4  C007  F003         	movff	___lwdiv@quotient,?___lwdiv
  1371   000EC8  C008  F004         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1372   000ECC  0012               	return		;funcret
  1373   000ECE                     __end_of___lwdiv:
  1374                           	callstack 0
  1375                           
  1376 ;; *************** function ___lbmod *****************
  1377 ;; Defined at:
  1378 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lbmod.c"
  1379 ;; Parameters:    Size  Location     Type
  1380 ;;  dividend        1    wreg     unsigned char 
  1381 ;;  divisor         1    2[COMRAM] unsigned char 
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;  dividend        1    3[COMRAM] unsigned char 
  1384 ;;  rem             1    5[COMRAM] unsigned char 
  1385 ;;  counter         1    4[COMRAM] unsigned char 
  1386 ;; Return value:  Size  Location     Type
  1387 ;;                  1    wreg      unsigned char 
  1388 ;; Registers used:
  1389 ;;		wreg, status,2, status,0
  1390 ;; Tracked objects:
  1391 ;;		On entry : 0/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1395 ;;      Params:         1       0       0       0       0       0       0       0       0
  1396 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1397 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1398 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1399 ;;Total ram usage:        4 bytes
  1400 ;; Hardware stack levels used: 1
  1401 ;; Hardware stack levels required when called: 2
  1402 ;; This function calls:
  1403 ;;		Nothing
  1404 ;; This function is called by:
  1405 ;;		_main
  1406 ;;		_TransmitirDatos
  1407 ;; This function uses a non-reentrant model
  1408 ;;
  1409                           
  1410                           	psect	text5
  1411   00105C                     __ptext5:
  1412                           	callstack 0
  1413   00105C                     ___lbmod:
  1414                           	callstack 28
  1415                           
  1416                           ;incstack = 0
  1417                           ;___lbmod@dividend stored from wreg
  1418   00105C  6E04               	movwf	___lbmod@dividend^0,c
  1419   00105E  0E08               	movlw	8
  1420   001060  6E05               	movwf	___lbmod@counter^0,c
  1421   001062  0E00               	movlw	0
  1422   001064  6E06               	movwf	___lbmod@rem^0,c
  1423   001066                     l1703:
  1424   001066  90D8               	bcf	status,0,c
  1425   001068  3404               	rlcf	___lbmod@dividend^0,w,c
  1426   00106A  3406               	rlcf	___lbmod@rem^0,w,c
  1427   00106C  6E06               	movwf	___lbmod@rem^0,c
  1428   00106E  90D8               	bcf	status,0,c
  1429   001070  3604               	rlcf	___lbmod@dividend^0,f,c
  1430   001072  5003               	movf	___lbmod@divisor^0,w,c
  1431   001074  5C06               	subwf	___lbmod@rem^0,w,c
  1432   001076  A0D8               	btfss	status,0,c
  1433   001078  D002               	goto	l1711
  1434   00107A  5003               	movf	___lbmod@divisor^0,w,c
  1435   00107C  5E06               	subwf	___lbmod@rem^0,f,c
  1436   00107E                     l1711:
  1437   00107E  2E05               	decfsz	___lbmod@counter^0,f,c
  1438   001080  D7F2               	goto	l1703
  1439   001082  5006               	movf	___lbmod@rem^0,w,c
  1440   001084  0012               	return		;funcret
  1441   001086                     __end_of___lbmod:
  1442                           	callstack 0
  1443                           
  1444 ;; *************** function ___lbdiv *****************
  1445 ;; Defined at:
  1446 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lbdiv.c"
  1447 ;; Parameters:    Size  Location     Type
  1448 ;;  dividend        1    wreg     unsigned char 
  1449 ;;  divisor         1    2[COMRAM] unsigned char 
  1450 ;; Auto vars:     Size  Location     Type
  1451 ;;  dividend        1    3[COMRAM] unsigned char 
  1452 ;;  quotient        1    5[COMRAM] unsigned char 
  1453 ;;  counter         1    4[COMRAM] unsigned char 
  1454 ;; Return value:  Size  Location     Type
  1455 ;;                  1    wreg      unsigned char 
  1456 ;; Registers used:
  1457 ;;		wreg, status,2, status,0
  1458 ;; Tracked objects:
  1459 ;;		On entry : 0/0
  1460 ;;		On exit  : 0/0
  1461 ;;		Unchanged: 0/0
  1462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1463 ;;      Params:         1       0       0       0       0       0       0       0       0
  1464 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1465 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1466 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1467 ;;Total ram usage:        4 bytes
  1468 ;; Hardware stack levels used: 1
  1469 ;; Hardware stack levels required when called: 2
  1470 ;; This function calls:
  1471 ;;		Nothing
  1472 ;; This function is called by:
  1473 ;;		_main
  1474 ;;		_TransmitirDatos
  1475 ;; This function uses a non-reentrant model
  1476 ;;
  1477                           
  1478                           	psect	text6
  1479   000F52                     __ptext6:
  1480                           	callstack 0
  1481   000F52                     ___lbdiv:
  1482                           	callstack 28
  1483                           
  1484                           ;incstack = 0
  1485                           ;___lbdiv@dividend stored from wreg
  1486   000F52  6E04               	movwf	___lbdiv@dividend^0,c
  1487   000F54  0E00               	movlw	0
  1488   000F56  6E06               	movwf	___lbdiv@quotient^0,c
  1489   000F58  5003               	movf	___lbdiv@divisor^0,w,c
  1490   000F5A  B4D8               	btfsc	status,2,c
  1491   000F5C  D015               	goto	l1697
  1492   000F5E  0E01               	movlw	1
  1493   000F60  6E05               	movwf	___lbdiv@counter^0,c
  1494   000F62  D003               	goto	l1685
  1495   000F64                     l1681:
  1496   000F64  90D8               	bcf	status,0,c
  1497   000F66  3603               	rlcf	___lbdiv@divisor^0,f,c
  1498   000F68  2A05               	incf	___lbdiv@counter^0,f,c
  1499   000F6A                     l1685:
  1500   000F6A  AE03               	btfss	___lbdiv@divisor^0,7,c
  1501   000F6C  D7FB               	goto	l1681
  1502   000F6E                     u660:
  1503   000F6E  90D8               	bcf	status,0,c
  1504   000F70  3606               	rlcf	___lbdiv@quotient^0,f,c
  1505   000F72  5003               	movf	___lbdiv@divisor^0,w,c
  1506   000F74  5C04               	subwf	___lbdiv@dividend^0,w,c
  1507   000F76  A0D8               	btfss	status,0,c
  1508   000F78  D003               	goto	l1693
  1509   000F7A  5003               	movf	___lbdiv@divisor^0,w,c
  1510   000F7C  5E04               	subwf	___lbdiv@dividend^0,f,c
  1511   000F7E  8006               	bsf	___lbdiv@quotient^0,0,c
  1512   000F80                     l1693:
  1513   000F80  90D8               	bcf	status,0,c
  1514   000F82  3203               	rrcf	___lbdiv@divisor^0,f,c
  1515   000F84  2E05               	decfsz	___lbdiv@counter^0,f,c
  1516   000F86  D7F3               	goto	u660
  1517   000F88                     l1697:
  1518   000F88  5006               	movf	___lbdiv@quotient^0,w,c
  1519   000F8A  0012               	return		;funcret
  1520   000F8C                     __end_of___lbdiv:
  1521                           	callstack 0
  1522                           
  1523 ;; *************** function ___awdiv *****************
  1524 ;; Defined at:
  1525 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  1526 ;; Parameters:    Size  Location     Type
  1527 ;;  dividend        2    2[COMRAM] int 
  1528 ;;  divisor         2    4[COMRAM] int 
  1529 ;; Auto vars:     Size  Location     Type
  1530 ;;  quotient        2    8[COMRAM] int 
  1531 ;;  sign            1    7[COMRAM] unsigned char 
  1532 ;;  counter         1    6[COMRAM] unsigned char 
  1533 ;; Return value:  Size  Location     Type
  1534 ;;                  2    2[COMRAM] int 
  1535 ;; Registers used:
  1536 ;;		wreg, status,2, status,0
  1537 ;; Tracked objects:
  1538 ;;		On entry : 0/0
  1539 ;;		On exit  : 0/0
  1540 ;;		Unchanged: 0/0
  1541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1542 ;;      Params:         4       0       0       0       0       0       0       0       0
  1543 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1544 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1545 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1546 ;;Total ram usage:        8 bytes
  1547 ;; Hardware stack levels used: 1
  1548 ;; Hardware stack levels required when called: 2
  1549 ;; This function calls:
  1550 ;;		Nothing
  1551 ;; This function is called by:
  1552 ;;		_TransmitirDatos
  1553 ;; This function uses a non-reentrant model
  1554 ;;
  1555                           
  1556                           	psect	text7
  1557   000D92                     __ptext7:
  1558                           	callstack 0
  1559   000D92                     ___awdiv:
  1560                           	callstack 27
  1561                           
  1562                           ;incstack = 0
  1563   000D92  0E00               	movlw	0
  1564   000D94  6E08               	movwf	___awdiv@sign^0,c
  1565   000D96  AE06               	btfss	(___awdiv@divisor+1)^0,7,c
  1566   000D98  D006               	goto	l1639
  1567   000D9A  6C05               	negf	___awdiv@divisor^0,c
  1568   000D9C  1E06               	comf	(___awdiv@divisor+1)^0,f,c
  1569   000D9E  B0D8               	btfsc	status,0,c
  1570   000DA0  2A06               	incf	(___awdiv@divisor+1)^0,f,c
  1571   000DA2  0E01               	movlw	1
  1572   000DA4  6E08               	movwf	___awdiv@sign^0,c
  1573   000DA6                     l1639:
  1574   000DA6  AE04               	btfss	(___awdiv@dividend+1)^0,7,c
  1575   000DA8  D006               	goto	l1645
  1576   000DAA  6C03               	negf	___awdiv@dividend^0,c
  1577   000DAC  1E04               	comf	(___awdiv@dividend+1)^0,f,c
  1578   000DAE  B0D8               	btfsc	status,0,c
  1579   000DB0  2A04               	incf	(___awdiv@dividend+1)^0,f,c
  1580   000DB2  0E01               	movlw	1
  1581   000DB4  1A08               	xorwf	___awdiv@sign^0,f,c
  1582   000DB6                     l1645:
  1583   000DB6  0E00               	movlw	0
  1584   000DB8  6E0A               	movwf	(___awdiv@quotient+1)^0,c
  1585   000DBA  0E00               	movlw	0
  1586   000DBC  6E09               	movwf	___awdiv@quotient^0,c
  1587   000DBE  5005               	movf	___awdiv@divisor^0,w,c
  1588   000DC0  1006               	iorwf	(___awdiv@divisor+1)^0,w,c
  1589   000DC2  B4D8               	btfsc	status,2,c
  1590   000DC4  D01C               	goto	l1667
  1591   000DC6  0E01               	movlw	1
  1592   000DC8  6E07               	movwf	___awdiv@counter^0,c
  1593   000DCA  D004               	goto	l1653
  1594   000DCC                     l1651:
  1595   000DCC  90D8               	bcf	status,0,c
  1596   000DCE  3605               	rlcf	___awdiv@divisor^0,f,c
  1597   000DD0  3606               	rlcf	(___awdiv@divisor+1)^0,f,c
  1598   000DD2  2A07               	incf	___awdiv@counter^0,f,c
  1599   000DD4                     l1653:
  1600   000DD4  AE06               	btfss	(___awdiv@divisor+1)^0,7,c
  1601   000DD6  D7FA               	goto	l1651
  1602   000DD8                     u620:
  1603   000DD8  90D8               	bcf	status,0,c
  1604   000DDA  3609               	rlcf	___awdiv@quotient^0,f,c
  1605   000DDC  360A               	rlcf	(___awdiv@quotient+1)^0,f,c
  1606   000DDE  5005               	movf	___awdiv@divisor^0,w,c
  1607   000DE0  5C03               	subwf	___awdiv@dividend^0,w,c
  1608   000DE2  5006               	movf	(___awdiv@divisor+1)^0,w,c
  1609   000DE4  5804               	subwfb	(___awdiv@dividend+1)^0,w,c
  1610   000DE6  A0D8               	btfss	status,0,c
  1611   000DE8  D005               	goto	l1663
  1612   000DEA  5005               	movf	___awdiv@divisor^0,w,c
  1613   000DEC  5E03               	subwf	___awdiv@dividend^0,f,c
  1614   000DEE  5006               	movf	(___awdiv@divisor+1)^0,w,c
  1615   000DF0  5A04               	subwfb	(___awdiv@dividend+1)^0,f,c
  1616   000DF2  8009               	bsf	___awdiv@quotient^0,0,c
  1617   000DF4                     l1663:
  1618   000DF4  90D8               	bcf	status,0,c
  1619   000DF6  3206               	rrcf	(___awdiv@divisor+1)^0,f,c
  1620   000DF8  3205               	rrcf	___awdiv@divisor^0,f,c
  1621   000DFA  2E07               	decfsz	___awdiv@counter^0,f,c
  1622   000DFC  D7ED               	goto	u620
  1623   000DFE                     l1667:
  1624   000DFE  5008               	movf	___awdiv@sign^0,w,c
  1625   000E00  B4D8               	btfsc	status,2,c
  1626   000E02  D004               	goto	l1671
  1627   000E04  6C09               	negf	___awdiv@quotient^0,c
  1628   000E06  1E0A               	comf	(___awdiv@quotient+1)^0,f,c
  1629   000E08  B0D8               	btfsc	status,0,c
  1630   000E0A  2A0A               	incf	(___awdiv@quotient+1)^0,f,c
  1631   000E0C                     l1671:
  1632   000E0C  C009  F003         	movff	___awdiv@quotient,?___awdiv
  1633   000E10  C00A  F004         	movff	___awdiv@quotient+1,?___awdiv+1
  1634   000E14  0012               	return		;funcret
  1635   000E16                     __end_of___awdiv:
  1636                           	callstack 0
  1637                           
  1638 ;; *************** function _Transmitir *****************
  1639 ;; Defined at:
  1640 ;;		line 134 in file "Laboratorio5.c"
  1641 ;; Parameters:    Size  Location     Type
  1642 ;;  BufferT         1    wreg     unsigned char 
  1643 ;; Auto vars:     Size  Location     Type
  1644 ;;  BufferT         1    2[COMRAM] unsigned char 
  1645 ;; Return value:  Size  Location     Type
  1646 ;;                  1    wreg      void 
  1647 ;; Registers used:
  1648 ;;		wreg
  1649 ;; Tracked objects:
  1650 ;;		On entry : 0/0
  1651 ;;		On exit  : 0/0
  1652 ;;		Unchanged: 0/0
  1653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1654 ;;      Params:         0       0       0       0       0       0       0       0       0
  1655 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1656 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1657 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1658 ;;Total ram usage:        1 bytes
  1659 ;; Hardware stack levels used: 1
  1660 ;; Hardware stack levels required when called: 2
  1661 ;; This function calls:
  1662 ;;		Nothing
  1663 ;; This function is called by:
  1664 ;;		_TransmitirDatos
  1665 ;; This function uses a non-reentrant model
  1666 ;;
  1667                           
  1668                           	psect	text8
  1669   00118C                     __ptext8:
  1670                           	callstack 0
  1671   00118C                     _Transmitir:
  1672                           	callstack 27
  1673                           
  1674                           ;incstack = 0
  1675                           ;Transmitir@BufferT stored from wreg
  1676   00118C  6E03               	movwf	Transmitir@BufferT^0,c
  1677   00118E                     
  1678                           ;Laboratorio5.c: 135: while (TRMT == 0);
  1679   00118E  A2AC               	btfss	4012,1,c	;volatile
  1680   001190  D7FE               	goto	l1145
  1681                           
  1682                           ;Laboratorio5.c: 136: TXREG = BufferT;
  1683   001192  C003  FFAD         	movff	Transmitir@BufferT,4013	;volatile
  1684   001196  0012               	return		;funcret
  1685   001198                     __end_of_Transmitir:
  1686                           	callstack 0
  1687                           
  1688 ;; *************** function _MensajeLCD_Word *****************
  1689 ;; Defined at:
  1690 ;;		line 241 in file "LibLCDXC8.h"
  1691 ;; Parameters:    Size  Location     Type
  1692 ;;  a               1    6[COMRAM] PTR unsigned char 
  1693 ;;		 -> STR_4(5), STR_3(6), STR_2(10), STR_1(13), 
  1694 ;; Auto vars:     Size  Location     Type
  1695 ;;  i               2    8[COMRAM] int 
  1696 ;; Return value:  Size  Location     Type
  1697 ;;                  1    wreg      void 
  1698 ;; Registers used:
  1699 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1700 ;; Tracked objects:
  1701 ;;		On entry : 0/0
  1702 ;;		On exit  : 0/0
  1703 ;;		Unchanged: 0/0
  1704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1705 ;;      Params:         1       0       0       0       0       0       0       0       0
  1706 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1707 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1708 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1709 ;;Total ram usage:        4 bytes
  1710 ;; Hardware stack levels used: 1
  1711 ;; Hardware stack levels required when called: 5
  1712 ;; This function calls:
  1713 ;;		_EscribeLCD_c
  1714 ;;		_strlen
  1715 ;; This function is called by:
  1716 ;;		_main
  1717 ;;		_TransmitirDatos
  1718 ;; This function uses a non-reentrant model
  1719 ;;
  1720                           
  1721                           	psect	text9
  1722   000F8C                     __ptext9:
  1723                           	callstack 0
  1724   000F8C                     _MensajeLCD_Word:
  1725                           	callstack 24
  1726                           
  1727                           ;LibLCDXC8.h: 245: for(int i = 0; i<strlen(a); i++){
  1728                           
  1729                           ;incstack = 0
  1730   000F8C  0E00               	movlw	0
  1731   000F8E  6E0A               	movwf	(MensajeLCD_Word@i+1)^0,c
  1732   000F90  0E00               	movlw	0
  1733   000F92  6E09               	movwf	MensajeLCD_Word@i^0,c
  1734   000F94  D00D               	goto	l1623
  1735   000F96                     l1619:
  1736                           
  1737                           ;LibLCDXC8.h: 247: EscribeLCD_c(a[i]);
  1738   000F96  5007               	movf	MensajeLCD_Word@a^0,w,c
  1739   000F98  2409               	addwf	MensajeLCD_Word@i^0,w,c
  1740   000F9A  6E08               	movwf	??_MensajeLCD_Word^0,c
  1741   000F9C  C008  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  1742   000FA0                     	if	1	;There is more than 1 active tblptr byte
  1743   000FA0  0E08               	movlw	high __smallconst
  1744   000FA2  6EF7               	movwf	tblptrh,c
  1745   000FA4                     	endif
  1746   000FA4                     	if	0	;tblptru may be non-zero
  1747   000FA4                     	endif
  1748   000FA4                     	if	0	;tblptru may be non-zero
  1749   000FA4                     	endif
  1750   000FA4  0008               	tblrd		*
  1751   000FA6  50F5               	movf	tablat,w,c
  1752   000FA8  EC8E  F008         	call	_EscribeLCD_c
  1753   000FAC  4A09               	infsnz	MensajeLCD_Word@i^0,f,c
  1754   000FAE  2A0A               	incf	(MensajeLCD_Word@i+1)^0,f,c
  1755   000FB0                     l1623:
  1756   000FB0  C007  F003         	movff	MensajeLCD_Word@a,strlen@s
  1757   000FB4  EC43  F008         	call	_strlen	;wreg free
  1758   000FB8  5003               	movf	?_strlen^0,w,c
  1759   000FBA  5C09               	subwf	MensajeLCD_Word@i^0,w,c
  1760   000FBC  5004               	movf	(?_strlen+1)^0,w,c
  1761   000FBE  580A               	subwfb	(MensajeLCD_Word@i+1)^0,w,c
  1762   000FC0  B0D8               	btfsc	status,0,c
  1763   000FC2  0012               	return	
  1764   000FC4  D7E8               	goto	l1619
  1765   000FC6                     __end_of_MensajeLCD_Word:
  1766                           	callstack 0
  1767                           
  1768 ;; *************** function _strlen *****************
  1769 ;; Defined at:
  1770 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\strlen.c"
  1771 ;; Parameters:    Size  Location     Type
  1772 ;;  s               1    2[COMRAM] PTR const unsigned char 
  1773 ;;		 -> STR_4(5), STR_3(6), STR_2(10), STR_1(13), 
  1774 ;; Auto vars:     Size  Location     Type
  1775 ;;  cp              1    4[COMRAM] PTR const unsigned char 
  1776 ;;		 -> STR_4(5), STR_3(6), STR_2(10), STR_1(13), 
  1777 ;; Return value:  Size  Location     Type
  1778 ;;                  2    2[COMRAM] unsigned int 
  1779 ;; Registers used:
  1780 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1781 ;; Tracked objects:
  1782 ;;		On entry : 0/0
  1783 ;;		On exit  : 0/0
  1784 ;;		Unchanged: 0/0
  1785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1786 ;;      Params:         2       0       0       0       0       0       0       0       0
  1787 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1788 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1789 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1790 ;;Total ram usage:        3 bytes
  1791 ;; Hardware stack levels used: 1
  1792 ;; Hardware stack levels required when called: 2
  1793 ;; This function calls:
  1794 ;;		Nothing
  1795 ;; This function is called by:
  1796 ;;		_MensajeLCD_Word
  1797 ;; This function uses a non-reentrant model
  1798 ;;
  1799                           
  1800                           	psect	text10
  1801   001086                     __ptext10:
  1802                           	callstack 0
  1803   001086                     _strlen:
  1804                           	callstack 26
  1805                           
  1806                           ;incstack = 0
  1807   001086  C003  F005         	movff	strlen@s,strlen@cp
  1808   00108A  D001               	goto	l1611
  1809   00108C                     l1609:
  1810   00108C  2A05               	incf	strlen@cp^0,f,c
  1811   00108E                     l1611:
  1812   00108E  C005  FFF6         	movff	strlen@cp,tblptrl
  1813   001092                     	if	1	;There is more than 1 active tblptr byte
  1814   001092  0E08               	movlw	high __smallconst
  1815   001094  6EF7               	movwf	tblptrh,c
  1816   001096                     	endif
  1817   001096                     	if	0	;tblptru may be non-zero
  1818   001096                     	endif
  1819   001096                     	if	0	;tblptru may be non-zero
  1820   001096                     	endif
  1821   001096  0008               	tblrd		*
  1822   001098  50F5               	movf	tablat,w,c
  1823   00109A  0900               	iorlw	0
  1824   00109C  A4D8               	btfss	status,2,c
  1825   00109E  D7F6               	goto	l1609
  1826   0010A0  5003               	movf	strlen@s^0,w,c
  1827   0010A2  5C05               	subwf	strlen@cp^0,w,c
  1828   0010A4  6E03               	movwf	?_strlen^0,c
  1829   0010A6  6A04               	clrf	(?_strlen+1)^0,c
  1830   0010A8  BE03               	btfsc	?_strlen^0,7,c
  1831   0010AA  0604               	decf	(?_strlen+1)^0,f,c
  1832   0010AC  0012               	return		;funcret
  1833   0010AE                     __end_of_strlen:
  1834                           	callstack 0
  1835                           
  1836 ;; *************** function _EscribeLCD_c *****************
  1837 ;; Defined at:
  1838 ;;		line 142 in file "LibLCDXC8.h"
  1839 ;; Parameters:    Size  Location     Type
  1840 ;;  a               1    wreg     unsigned char 
  1841 ;; Auto vars:     Size  Location     Type
  1842 ;;  a               1    5[COMRAM] unsigned char 
  1843 ;; Return value:  Size  Location     Type
  1844 ;;                  1    wreg      void 
  1845 ;; Registers used:
  1846 ;;		wreg, status,2, status,0, cstack
  1847 ;; Tracked objects:
  1848 ;;		On entry : 0/0
  1849 ;;		On exit  : 0/0
  1850 ;;		Unchanged: 0/0
  1851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1852 ;;      Params:         0       0       0       0       0       0       0       0       0
  1853 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1854 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1855 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1856 ;;Total ram usage:        1 bytes
  1857 ;; Hardware stack levels used: 1
  1858 ;; Hardware stack levels required when called: 4
  1859 ;; This function calls:
  1860 ;;		_EnviaDato
  1861 ;;		_HabilitaLCD
  1862 ;;		_RetardoLCD
  1863 ;; This function is called by:
  1864 ;;		_MensajeLCD_Word
  1865 ;;		_main
  1866 ;;		_TransmitirDatos
  1867 ;; This function uses a non-reentrant model
  1868 ;;
  1869                           
  1870                           	psect	text11
  1871   00111C                     __ptext11:
  1872                           	callstack 0
  1873   00111C                     _EscribeLCD_c:
  1874                           	callstack 24
  1875                           
  1876                           ;incstack = 0
  1877                           ;EscribeLCD_c@a stored from wreg
  1878   00111C  6E06               	movwf	EscribeLCD_c@a^0,c
  1879                           
  1880                           ;LibLCDXC8.h: 146: LATE1=1;
  1881   00111E  828D               	bsf	3981,1,c	;volatile
  1882                           
  1883                           ;LibLCDXC8.h: 147: EnviaDato(a);
  1884   001120  5006               	movf	EscribeLCD_c@a^0,w,c
  1885   001122  ECCC  F008         	call	_EnviaDato
  1886                           
  1887                           ;LibLCDXC8.h: 148: HabilitaLCD();
  1888   001126  ECBF  F008         	call	_HabilitaLCD	;wreg free
  1889                           
  1890                           ;LibLCDXC8.h: 149: RetardoLCD(4);
  1891   00112A  0E04               	movlw	4
  1892   00112C  EC0B  F007         	call	_RetardoLCD
  1893   001130  0012               	return		;funcret
  1894   001132                     __end_of_EscribeLCD_c:
  1895                           	callstack 0
  1896                           
  1897 ;; *************** function _DireccionaLCD *****************
  1898 ;; Defined at:
  1899 ;;		line 252 in file "LibLCDXC8.h"
  1900 ;; Parameters:    Size  Location     Type
  1901 ;;  a               1    wreg     unsigned char 
  1902 ;; Auto vars:     Size  Location     Type
  1903 ;;  a               1    5[COMRAM] unsigned char 
  1904 ;; Return value:  Size  Location     Type
  1905 ;;                  1    wreg      void 
  1906 ;; Registers used:
  1907 ;;		wreg, status,2, status,0, cstack
  1908 ;; Tracked objects:
  1909 ;;		On entry : 0/0
  1910 ;;		On exit  : 0/0
  1911 ;;		Unchanged: 0/0
  1912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1913 ;;      Params:         0       0       0       0       0       0       0       0       0
  1914 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1915 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1916 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1917 ;;Total ram usage:        1 bytes
  1918 ;; Hardware stack levels used: 1
  1919 ;; Hardware stack levels required when called: 4
  1920 ;; This function calls:
  1921 ;;		_EnviaDato
  1922 ;;		_HabilitaLCD
  1923 ;;		_RetardoLCD
  1924 ;; This function is called by:
  1925 ;;		_main
  1926 ;;		_TransmitirDatos
  1927 ;; This function uses a non-reentrant model
  1928 ;;
  1929                           
  1930                           	psect	text12
  1931   001132                     __ptext12:
  1932                           	callstack 0
  1933   001132                     _DireccionaLCD:
  1934                           	callstack 25
  1935                           
  1936                           ;incstack = 0
  1937                           ;DireccionaLCD@a stored from wreg
  1938   001132  6E06               	movwf	DireccionaLCD@a^0,c
  1939                           
  1940                           ;LibLCDXC8.h: 255: LATE1=0;
  1941   001134  928D               	bcf	3981,1,c	;volatile
  1942                           
  1943                           ;LibLCDXC8.h: 256: EnviaDato(a);
  1944   001136  5006               	movf	DireccionaLCD@a^0,w,c
  1945   001138  ECCC  F008         	call	_EnviaDato
  1946                           
  1947                           ;LibLCDXC8.h: 257: HabilitaLCD();
  1948   00113C  ECBF  F008         	call	_HabilitaLCD	;wreg free
  1949                           
  1950                           ;LibLCDXC8.h: 258: RetardoLCD(4);
  1951   001140  0E04               	movlw	4
  1952   001142  EC0B  F007         	call	_RetardoLCD
  1953   001146  0012               	return		;funcret
  1954   001148                     __end_of_DireccionaLCD:
  1955                           	callstack 0
  1956                           
  1957 ;; *************** function _LeerHT11 *****************
  1958 ;; Defined at:
  1959 ;;		line 96 in file "Laboratorio5.c"
  1960 ;; Parameters:    Size  Location     Type
  1961 ;;		None
  1962 ;; Auto vars:     Size  Location     Type
  1963 ;;		None
  1964 ;; Return value:  Size  Location     Type
  1965 ;;                  1    wreg      void 
  1966 ;; Registers used:
  1967 ;;		wreg, status,2, status,0, cstack
  1968 ;; Tracked objects:
  1969 ;;		On entry : 0/0
  1970 ;;		On exit  : 0/0
  1971 ;;		Unchanged: 0/0
  1972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1973 ;;      Params:         0       0       0       0       0       0       0       0       0
  1974 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1975 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1976 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1977 ;;Total ram usage:        1 bytes
  1978 ;; Hardware stack levels used: 1
  1979 ;; Hardware stack levels required when called: 4
  1980 ;; This function calls:
  1981 ;;		_LeerByte
  1982 ;; This function is called by:
  1983 ;;		_main
  1984 ;; This function uses a non-reentrant model
  1985 ;;
  1986                           
  1987                           	psect	text13
  1988   000FC6                     __ptext13:
  1989                           	callstack 0
  1990   000FC6                     _LeerHT11:
  1991                           	callstack 26
  1992                           
  1993                           ;Laboratorio5.c: 98: TRISC2 = 0;
  1994                           
  1995                           ;incstack = 0
  1996   000FC6  9494               	bcf	3988,2,c	;volatile
  1997                           
  1998                           ;Laboratorio5.c: 99: _delay((unsigned long)((18)*(8000000/4000.0)));
  1999   000FC8  0E2F               	movlw	47
  2000   000FCA  6E07               	movwf	??_LeerHT11^0,c
  2001   000FCC  0EC0               	movlw	192
  2002   000FCE                     u1047:
  2003   000FCE  2EE8               	decfsz	wreg,f,c
  2004   000FD0  D7FE               	bra	u1047
  2005   000FD2  2E07               	decfsz	??_LeerHT11^0,f,c
  2006   000FD4  D7FC               	bra	u1047
  2007                           
  2008                           ;Laboratorio5.c: 100: TRISC2 = 1;
  2009   000FD6  8494               	bsf	3988,2,c	;volatile
  2010   000FD8                     l198:
  2011   000FD8  B482               	btfsc	3970,2,c	;volatile
  2012   000FDA  D7FE               	goto	l198
  2013                           
  2014                           ;Laboratorio5.c: 103: _delay((unsigned long)((120)*(8000000/4000000.0)));
  2015   000FDC  0E50               	movlw	80
  2016   000FDE                     u1057:
  2017   000FDE  2EE8               	decfsz	wreg,f,c
  2018   000FE0  D7FE               	bra	u1057
  2019   000FE2                     l201:
  2020   000FE2  B482               	btfsc	3970,2,c	;volatile
  2021   000FE4  D7FE               	goto	l201
  2022                           
  2023                           ;Laboratorio5.c: 106: Humedad = LeerByte();
  2024   000FE6  EC7D  F008         	call	_LeerByte	;wreg free
  2025   000FEA  6E1E               	movwf	_Humedad^0,c
  2026                           
  2027                           ;Laboratorio5.c: 107: LeerByte();
  2028   000FEC  EC7D  F008         	call	_LeerByte	;wreg free
  2029                           
  2030                           ;Laboratorio5.c: 108: Temp = LeerByte();
  2031   000FF0  EC7D  F008         	call	_LeerByte	;wreg free
  2032   000FF4  6E1F               	movwf	_Temp^0,c
  2033                           
  2034                           ;Laboratorio5.c: 109: LeerByte();
  2035   000FF6  EC7D  F008         	call	_LeerByte	;wreg free
  2036                           
  2037                           ;Laboratorio5.c: 110: LeerByte();
  2038   000FFA  EC7D  F008         	call	_LeerByte	;wreg free
  2039   000FFE  0012               	return		;funcret
  2040   001000                     __end_of_LeerHT11:
  2041                           	callstack 0
  2042                           
  2043 ;; *************** function _LeerByte *****************
  2044 ;; Defined at:
  2045 ;;		line 113 in file "Laboratorio5.c"
  2046 ;; Parameters:    Size  Location     Type
  2047 ;;		None
  2048 ;; Auto vars:     Size  Location     Type
  2049 ;;  i               1    5[COMRAM] unsigned char 
  2050 ;;  res             1    4[COMRAM] unsigned char 
  2051 ;; Return value:  Size  Location     Type
  2052 ;;                  1    wreg      unsigned char 
  2053 ;; Registers used:
  2054 ;;		wreg, status,2, status,0, cstack
  2055 ;; Tracked objects:
  2056 ;;		On entry : 0/0
  2057 ;;		On exit  : 0/0
  2058 ;;		Unchanged: 0/0
  2059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2060 ;;      Params:         0       0       0       0       0       0       0       0       0
  2061 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2062 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2063 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2064 ;;Total ram usage:        3 bytes
  2065 ;; Hardware stack levels used: 1
  2066 ;; Hardware stack levels required when called: 3
  2067 ;; This function calls:
  2068 ;;		_LeerBit
  2069 ;; This function is called by:
  2070 ;;		_LeerHT11
  2071 ;; This function uses a non-reentrant model
  2072 ;;
  2073                           
  2074                           	psect	text14
  2075   0010FA                     __ptext14:
  2076                           	callstack 0
  2077   0010FA                     _LeerByte:
  2078                           	callstack 26
  2079                           
  2080                           ;Laboratorio5.c: 114: unsigned char res = 0, i;
  2081                           
  2082                           ;incstack = 0
  2083   0010FA  0E00               	movlw	0
  2084   0010FC  6E05               	movwf	LeerByte@res^0,c
  2085                           
  2086                           ;Laboratorio5.c: 115: for (i = 8; i > 0; i--) {
  2087   0010FE  0E08               	movlw	8
  2088   001100  6E06               	movwf	LeerByte@i^0,c
  2089   001102                     l1135:
  2090                           
  2091                           ;Laboratorio5.c: 116: res = (res << 1) | LeerBit();
  2092   001102  EC00  F008         	call	_LeerBit	;wreg free
  2093   001106  6E04               	movwf	??_LeerByte^0,c
  2094   001108  5005               	movf	LeerByte@res^0,w,c
  2095   00110A  2405               	addwf	LeerByte@res^0,w,c
  2096   00110C  1004               	iorwf	??_LeerByte^0,w,c
  2097   00110E  6E05               	movwf	LeerByte@res^0,c
  2098   001110  0606               	decf	LeerByte@i^0,f,c
  2099   001112  5006               	movf	LeerByte@i^0,w,c
  2100   001114  A4D8               	btfss	status,2,c
  2101   001116  D7F5               	goto	l1135
  2102                           
  2103                           ;Laboratorio5.c: 117: };Laboratorio5.c: 118: return res;
  2104   001118  5005               	movf	LeerByte@res^0,w,c
  2105   00111A  0012               	return		;funcret
  2106   00111C                     __end_of_LeerByte:
  2107                           	callstack 0
  2108                           
  2109 ;; *************** function _LeerBit *****************
  2110 ;; Defined at:
  2111 ;;		line 121 in file "Laboratorio5.c"
  2112 ;; Parameters:    Size  Location     Type
  2113 ;;		None
  2114 ;; Auto vars:     Size  Location     Type
  2115 ;;  res             1    2[COMRAM] unsigned char 
  2116 ;; Return value:  Size  Location     Type
  2117 ;;                  1    wreg      unsigned char 
  2118 ;; Registers used:
  2119 ;;		wreg, status,2
  2120 ;; Tracked objects:
  2121 ;;		On entry : 0/0
  2122 ;;		On exit  : 0/0
  2123 ;;		Unchanged: 0/0
  2124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2125 ;;      Params:         0       0       0       0       0       0       0       0       0
  2126 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2127 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2128 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2129 ;;Total ram usage:        1 bytes
  2130 ;; Hardware stack levels used: 1
  2131 ;; Hardware stack levels required when called: 2
  2132 ;; This function calls:
  2133 ;;		Nothing
  2134 ;; This function is called by:
  2135 ;;		_LeerByte
  2136 ;; This function uses a non-reentrant model
  2137 ;;
  2138                           
  2139                           	psect	text15
  2140   001000                     __ptext15:
  2141                           	callstack 0
  2142   001000                     _LeerBit:
  2143                           	callstack 26
  2144                           
  2145                           ;Laboratorio5.c: 122: unsigned char res = 0;
  2146                           
  2147                           ;incstack = 0
  2148   001000  0E00               	movlw	0
  2149   001002  6E03               	movwf	LeerBit@res^0,c
  2150   001004                     l212:
  2151   001004  A482               	btfss	3970,2,c	;volatile
  2152   001006  D7FE               	goto	l212
  2153                           
  2154                           ;Laboratorio5.c: 124: _delay((unsigned long)((13)*(8000000/4000000.0)));
  2155   001008  0E08               	movlw	8
  2156   00100A                     u1067:
  2157   00100A  2EE8               	decfsz	wreg,f,c
  2158   00100C  D7FE               	bra	u1067
  2159   00100E  D000               	nop2	
  2160                           
  2161                           ;Laboratorio5.c: 125: if (RC2 == 1) res = 0;
  2162   001010  A482               	btfss	3970,2,c	;volatile
  2163   001012  D002               	goto	l1099
  2164   001014  0E00               	movlw	0
  2165   001016  6E03               	movwf	LeerBit@res^0,c
  2166   001018                     l1099:
  2167                           
  2168                           ;Laboratorio5.c: 126: _delay((unsigned long)((22)*(8000000/4000000.0)));
  2169   001018  0E0E               	movlw	14
  2170   00101A                     u1077:
  2171   00101A  2EE8               	decfsz	wreg,f,c
  2172   00101C  D7FE               	bra	u1077
  2173   00101E  D000               	nop2	
  2174                           
  2175                           ;Laboratorio5.c: 127: if (RC2 == 1) {
  2176   001020  A482               	btfss	3970,2,c	;volatile
  2177   001022  D004               	goto	u50
  2178                           
  2179                           ;Laboratorio5.c: 128: res = 1;
  2180   001024  0E01               	movlw	1
  2181   001026  6E03               	movwf	LeerBit@res^0,c
  2182   001028                     l217:
  2183   001028  B482               	btfsc	3970,2,c	;volatile
  2184   00102A  D7FE               	goto	l217
  2185   00102C                     u50:
  2186                           
  2187                           ;Laboratorio5.c: 130: };Laboratorio5.c: 131: return res;
  2188   00102C  5003               	movf	LeerBit@res^0,w,c
  2189   00102E  0012               	return		;funcret
  2190   001030                     __end_of_LeerBit:
  2191                           	callstack 0
  2192                           
  2193 ;; *************** function _LeerDatos *****************
  2194 ;; Defined at:
  2195 ;;		line 255 in file "Laboratorio5.c"
  2196 ;; Parameters:    Size  Location     Type
  2197 ;;  dir             2    2[COMRAM] unsigned int 
  2198 ;; Auto vars:     Size  Location     Type
  2199 ;;		None
  2200 ;; Return value:  Size  Location     Type
  2201 ;;                  1    wreg      unsigned char 
  2202 ;; Registers used:
  2203 ;;		wreg, status,2
  2204 ;; Tracked objects:
  2205 ;;		On entry : 0/0
  2206 ;;		On exit  : 0/0
  2207 ;;		Unchanged: 0/0
  2208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2209 ;;      Params:         2       0       0       0       0       0       0       0       0
  2210 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2211 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2212 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2213 ;;Total ram usage:        2 bytes
  2214 ;; Hardware stack levels used: 1
  2215 ;; Hardware stack levels required when called: 2
  2216 ;; This function calls:
  2217 ;;		Nothing
  2218 ;; This function is called by:
  2219 ;;		_main
  2220 ;; This function uses a non-reentrant model
  2221 ;;
  2222                           
  2223                           	psect	text16
  2224   001170                     __ptext16:
  2225                           	callstack 0
  2226   001170                     _LeerDatos:
  2227                           	callstack 28
  2228                           
  2229                           ;Laboratorio5.c: 256: EEADR = dir;
  2230                           
  2231                           ;incstack = 0
  2232   001170  C003  FFA9         	movff	LeerDatos@dir,4009	;volatile
  2233                           
  2234                           ;Laboratorio5.c: 257: EEPGD = 0;
  2235   001174  9EA6               	bcf	4006,7,c	;volsfr
  2236                           
  2237                           ;Laboratorio5.c: 258: CFGS = 0;
  2238   001176  9CA6               	bcf	4006,6,c	;volsfr
  2239                           
  2240                           ;Laboratorio5.c: 259: RD = 1;
  2241   001178  80A6               	bsf	4006,0,c	;volsfr
  2242                           
  2243                           ;Laboratorio5.c: 261: return EEDATA;
  2244   00117A  50A8               	movf	168,w,c	;volatile
  2245   00117C  0012               	return		;funcret
  2246   00117E                     __end_of_LeerDatos:
  2247                           	callstack 0
  2248                           
  2249 ;; *************** function _InicializaLCD *****************
  2250 ;; Defined at:
  2251 ;;		line 73 in file "LibLCDXC8.h"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;		None
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;		None
  2256 ;; Return value:  Size  Location     Type
  2257 ;;                  1    wreg      void 
  2258 ;; Registers used:
  2259 ;;		wreg, status,2, status,0, cstack
  2260 ;; Tracked objects:
  2261 ;;		On entry : 0/0
  2262 ;;		On exit  : 0/0
  2263 ;;		Unchanged: 0/0
  2264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2265 ;;      Params:         0       0       0       0       0       0       0       0       0
  2266 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2267 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2268 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2269 ;;Total ram usage:        0 bytes
  2270 ;; Hardware stack levels used: 1
  2271 ;; Hardware stack levels required when called: 5
  2272 ;; This function calls:
  2273 ;;		_BorraLCD
  2274 ;;		_EnviaDato
  2275 ;;		_HabilitaLCD
  2276 ;;		_RetardoLCD
  2277 ;; This function is called by:
  2278 ;;		_main
  2279 ;; This function uses a non-reentrant model
  2280 ;;
  2281                           
  2282                           	psect	text17
  2283   000F10                     __ptext17:
  2284                           	callstack 0
  2285   000F10                     _InicializaLCD:
  2286                           	callstack 25
  2287                           
  2288                           ;LibLCDXC8.h: 75: LATE1=0;
  2289                           
  2290                           ;incstack = 0
  2291   000F10  928D               	bcf	3981,1,c	;volatile
  2292                           
  2293                           ;LibLCDXC8.h: 78: else;LibLCDXC8.h: 79: LATD=0x3F;
  2294                           
  2295                           ;LibLCDXC8.h: 76: if(interfaz==4)
  2296   000F12  0E3F               	movlw	63
  2297   000F14  6E8C               	movwf	140,c	;volatile
  2298                           
  2299                           ;LibLCDXC8.h: 80: HabilitaLCD();
  2300   000F16  ECBF  F008         	call	_HabilitaLCD	;wreg free
  2301                           
  2302                           ;LibLCDXC8.h: 81: RetardoLCD(1);
  2303   000F1A  0E01               	movlw	1
  2304   000F1C  EC0B  F007         	call	_RetardoLCD
  2305                           
  2306                           ;LibLCDXC8.h: 84: else;LibLCDXC8.h: 85: LATD=0x3F;
  2307                           
  2308                           ;LibLCDXC8.h: 82: if(interfaz==4)
  2309   000F20  0E3F               	movlw	63
  2310   000F22  6E8C               	movwf	140,c	;volatile
  2311                           
  2312                           ;LibLCDXC8.h: 86: HabilitaLCD();
  2313   000F24  ECBF  F008         	call	_HabilitaLCD	;wreg free
  2314                           
  2315                           ;LibLCDXC8.h: 87: RetardoLCD(3);
  2316   000F28  0E03               	movlw	3
  2317   000F2A  EC0B  F007         	call	_RetardoLCD
  2318                           
  2319                           ;LibLCDXC8.h: 90: else;LibLCDXC8.h: 91: LATD=0x3F;
  2320                           
  2321                           ;LibLCDXC8.h: 88: if(interfaz==4)
  2322   000F2E  0E3F               	movlw	63
  2323   000F30  6E8C               	movwf	140,c	;volatile
  2324                           
  2325                           ;LibLCDXC8.h: 92: HabilitaLCD();
  2326   000F32  ECBF  F008         	call	_HabilitaLCD	;wreg free
  2327                           
  2328                           ;LibLCDXC8.h: 93: RetardoLCD(4);
  2329   000F36  0E04               	movlw	4
  2330   000F38  EC0B  F007         	call	_RetardoLCD
  2331                           
  2332                           ;LibLCDXC8.h: 101: };LibLCDXC8.h: 102: BorraLCD();
  2333                           
  2334                           ;LibLCDXC8.h: 94: if(interfaz==4){
  2335   000F3C  ECA4  F008         	call	_BorraLCD	;wreg free
  2336                           
  2337                           ;LibLCDXC8.h: 103: EnviaDato(0xF);
  2338   000F40  0E0F               	movlw	15
  2339   000F42  ECCC  F008         	call	_EnviaDato
  2340                           
  2341                           ;LibLCDXC8.h: 104: HabilitaLCD();
  2342   000F46  ECBF  F008         	call	_HabilitaLCD	;wreg free
  2343                           
  2344                           ;LibLCDXC8.h: 105: RetardoLCD(4);
  2345   000F4A  0E04               	movlw	4
  2346   000F4C  EC0B  F007         	call	_RetardoLCD
  2347   000F50  0012               	return		;funcret
  2348   000F52                     __end_of_InicializaLCD:
  2349                           	callstack 0
  2350                           
  2351 ;; *************** function _BorraLCD *****************
  2352 ;; Defined at:
  2353 ;;		line 114 in file "LibLCDXC8.h"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;		None
  2356 ;; Auto vars:     Size  Location     Type
  2357 ;;		None
  2358 ;; Return value:  Size  Location     Type
  2359 ;;                  1    wreg      void 
  2360 ;; Registers used:
  2361 ;;		wreg, status,2, status,0, cstack
  2362 ;; Tracked objects:
  2363 ;;		On entry : 0/0
  2364 ;;		On exit  : 0/0
  2365 ;;		Unchanged: 0/0
  2366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2367 ;;      Params:         0       0       0       0       0       0       0       0       0
  2368 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2369 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2370 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2371 ;;Total ram usage:        0 bytes
  2372 ;; Hardware stack levels used: 1
  2373 ;; Hardware stack levels required when called: 4
  2374 ;; This function calls:
  2375 ;;		_EnviaDato
  2376 ;;		_HabilitaLCD
  2377 ;;		_RetardoLCD
  2378 ;; This function is called by:
  2379 ;;		_InicializaLCD
  2380 ;;		_main
  2381 ;;		_TransmitirDatos
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385                           	psect	text18
  2386   001148                     __ptext18:
  2387                           	callstack 0
  2388   001148                     _BorraLCD:
  2389                           	callstack 25
  2390                           
  2391                           ;LibLCDXC8.h: 116: LATE1=0;
  2392                           
  2393                           ;incstack = 0
  2394   001148  928D               	bcf	3981,1,c	;volatile
  2395                           
  2396                           ;LibLCDXC8.h: 117: EnviaDato(0x01);
  2397   00114A  0E01               	movlw	1
  2398   00114C  ECCC  F008         	call	_EnviaDato
  2399                           
  2400                           ;LibLCDXC8.h: 118: HabilitaLCD();
  2401   001150  ECBF  F008         	call	_HabilitaLCD	;wreg free
  2402                           
  2403                           ;LibLCDXC8.h: 119: RetardoLCD(2);
  2404   001154  0E02               	movlw	2
  2405   001156  EC0B  F007         	call	_RetardoLCD
  2406   00115A  0012               	return		;funcret
  2407   00115C                     __end_of_BorraLCD:
  2408                           	callstack 0
  2409                           
  2410 ;; *************** function _EnviaDato *****************
  2411 ;; Defined at:
  2412 ;;		line 61 in file "LibLCDXC8.h"
  2413 ;; Parameters:    Size  Location     Type
  2414 ;;  a               1    wreg     unsigned char 
  2415 ;; Auto vars:     Size  Location     Type
  2416 ;;  a               1    4[COMRAM] unsigned char 
  2417 ;; Return value:  Size  Location     Type
  2418 ;;                  1    wreg      void 
  2419 ;; Registers used:
  2420 ;;		wreg
  2421 ;; Tracked objects:
  2422 ;;		On entry : 0/0
  2423 ;;		On exit  : 0/0
  2424 ;;		Unchanged: 0/0
  2425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2426 ;;      Params:         0       0       0       0       0       0       0       0       0
  2427 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2428 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2429 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2430 ;;Total ram usage:        1 bytes
  2431 ;; Hardware stack levels used: 1
  2432 ;; Hardware stack levels required when called: 3
  2433 ;; This function calls:
  2434 ;;		_HabilitaLCD
  2435 ;;		_RetardoLCD
  2436 ;; This function is called by:
  2437 ;;		_InicializaLCD
  2438 ;;		_BorraLCD
  2439 ;;		_EscribeLCD_c
  2440 ;;		_DireccionaLCD
  2441 ;; This function uses a non-reentrant model
  2442 ;;
  2443                           
  2444                           	psect	text19
  2445   001198                     __ptext19:
  2446                           	callstack 0
  2447   001198                     _EnviaDato:
  2448                           	callstack 24
  2449                           
  2450                           ;incstack = 0
  2451                           ;EnviaDato@a stored from wreg
  2452   001198  6E05               	movwf	EnviaDato@a^0,c
  2453                           
  2454                           ;LibLCDXC8.h: 70: LATD=a;
  2455                           
  2456                           ;LibLCDXC8.h: 62: if(interfaz==4){
  2457   00119A  C005  FF8C         	movff	EnviaDato@a,3980	;volatile
  2458   00119E  0012               	return		;funcret
  2459   0011A0                     __end_of_EnviaDato:
  2460                           	callstack 0
  2461                           
  2462 ;; *************** function _RetardoLCD *****************
  2463 ;; Defined at:
  2464 ;;		line 288 in file "LibLCDXC8.h"
  2465 ;; Parameters:    Size  Location     Type
  2466 ;;  a               1    wreg     unsigned char 
  2467 ;; Auto vars:     Size  Location     Type
  2468 ;;  a               1    3[COMRAM] unsigned char 
  2469 ;; Return value:  Size  Location     Type
  2470 ;;                  1    wreg      void 
  2471 ;; Registers used:
  2472 ;;		wreg, status,2, status,0
  2473 ;; Tracked objects:
  2474 ;;		On entry : 0/0
  2475 ;;		On exit  : 0/0
  2476 ;;		Unchanged: 0/0
  2477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2478 ;;      Params:         0       0       0       0       0       0       0       0       0
  2479 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2480 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2481 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2482 ;;Total ram usage:        2 bytes
  2483 ;; Hardware stack levels used: 1
  2484 ;; Hardware stack levels required when called: 2
  2485 ;; This function calls:
  2486 ;;		Nothing
  2487 ;; This function is called by:
  2488 ;;		_EnviaDato
  2489 ;;		_InicializaLCD
  2490 ;;		_BorraLCD
  2491 ;;		_EscribeLCD_c
  2492 ;;		_DireccionaLCD
  2493 ;; This function uses a non-reentrant model
  2494 ;;
  2495                           
  2496                           	psect	text20
  2497   000E16                     __ptext20:
  2498                           	callstack 0
  2499   000E16                     _RetardoLCD:
  2500                           	callstack 25
  2501                           
  2502                           ;incstack = 0
  2503                           ;RetardoLCD@a stored from wreg
  2504   000E16  6E04               	movwf	RetardoLCD@a^0,c
  2505                           
  2506                           ;LibLCDXC8.h: 289: switch(a){
  2507   000E18  D023               	goto	l1061
  2508   000E1A                     l1051:
  2509   000E1A  0E62               	movlw	98
  2510   000E1C  6E03               	movwf	??_RetardoLCD^0,c
  2511   000E1E  0E66               	movlw	102
  2512   000E20                     u1087:
  2513   000E20  2EE8               	decfsz	wreg,f,c
  2514   000E22  D7FE               	bra	u1087
  2515   000E24  2E03               	decfsz	??_RetardoLCD^0,f,c
  2516   000E26  D7FC               	bra	u1087
  2517                           
  2518                           ;LibLCDXC8.h: 292: break;
  2519   000E28  0012               	return	
  2520   000E2A                     l1053:
  2521   000E2A  0E07               	movlw	7
  2522   000E2C  6E03               	movwf	??_RetardoLCD^0,c
  2523   000E2E  0E7D               	movlw	125
  2524   000E30                     u1097:
  2525   000E30  2EE8               	decfsz	wreg,f,c
  2526   000E32  D7FE               	bra	u1097
  2527   000E34  2E03               	decfsz	??_RetardoLCD^0,f,c
  2528   000E36  D7FC               	bra	u1097
  2529   000E38  F000               	nop	
  2530                           
  2531                           ;LibLCDXC8.h: 294: _delay((unsigned long)((640)*(20000000/4000000.0)));
  2532   000E3A  0E05               	movlw	5
  2533   000E3C  6E03               	movwf	??_RetardoLCD^0,c
  2534   000E3E  0E26               	movlw	38
  2535   000E40                     u1107:
  2536   000E40  2EE8               	decfsz	wreg,f,c
  2537   000E42  D7FE               	bra	u1107
  2538   000E44  2E03               	decfsz	??_RetardoLCD^0,f,c
  2539   000E46  D7FC               	bra	u1107
  2540   000E48  D000               	nop2	
  2541                           
  2542                           ;LibLCDXC8.h: 296: break;
  2543   000E4A  0012               	return	
  2544   000E4C                     l1055:
  2545   000E4C  0EA6               	movlw	166
  2546   000E4E                     u1117:
  2547   000E4E  2EE8               	decfsz	wreg,f,c
  2548   000E50  D7FE               	bra	u1117
  2549   000E52  D000               	nop2	
  2550                           
  2551                           ;LibLCDXC8.h: 299: break;
  2552   000E54  0012               	return	
  2553   000E56                     l1057:
  2554   000E56  0E42               	movlw	66
  2555   000E58                     u1127:
  2556   000E58  2EE8               	decfsz	wreg,f,c
  2557   000E5A  D7FE               	bra	u1127
  2558   000E5C  D000               	nop2	
  2559                           
  2560                           ;LibLCDXC8.h: 302: break;
  2561   000E5E  0012               	return	
  2562   000E60                     l1061:
  2563   000E60  5004               	movf	RetardoLCD@a^0,w,c
  2564                           
  2565                           ; Switch size 1, requested type "simple"
  2566                           ; Number of cases is 4, Range of values is 1 to 4
  2567                           ; switch strategies available:
  2568                           ; Name         Instructions Cycles
  2569                           ; simple_byte           13     7 (average)
  2570                           ;	Chosen strategy is simple_byte
  2571   000E62  0A01               	xorlw	1	; case 1
  2572   000E64  B4D8               	btfsc	status,2,c
  2573   000E66  D7D9               	goto	l1051
  2574   000E68  0A03               	xorlw	3	; case 2
  2575   000E6A  B4D8               	btfsc	status,2,c
  2576   000E6C  D7DE               	goto	l1053
  2577   000E6E  0A01               	xorlw	1	; case 3
  2578   000E70  B4D8               	btfsc	status,2,c
  2579   000E72  D7EC               	goto	l1055
  2580   000E74  0A07               	xorlw	7	; case 4
  2581   000E76  A4D8               	btfss	status,2,c
  2582   000E78  0012               	return	
  2583   000E7A  D7ED               	goto	l1057
  2584   000E7C                     __end_of_RetardoLCD:
  2585                           	callstack 0
  2586                           
  2587 ;; *************** function _HabilitaLCD *****************
  2588 ;; Defined at:
  2589 ;;		line 107 in file "LibLCDXC8.h"
  2590 ;; Parameters:    Size  Location     Type
  2591 ;;		None
  2592 ;; Auto vars:     Size  Location     Type
  2593 ;;		None
  2594 ;; Return value:  Size  Location     Type
  2595 ;;                  1    wreg      void 
  2596 ;; Registers used:
  2597 ;;		wreg
  2598 ;; Tracked objects:
  2599 ;;		On entry : 0/0
  2600 ;;		On exit  : 0/0
  2601 ;;		Unchanged: 0/0
  2602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2603 ;;      Params:         0       0       0       0       0       0       0       0       0
  2604 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2605 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2606 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2607 ;;Total ram usage:        0 bytes
  2608 ;; Hardware stack levels used: 1
  2609 ;; Hardware stack levels required when called: 2
  2610 ;; This function calls:
  2611 ;;		Nothing
  2612 ;; This function is called by:
  2613 ;;		_EnviaDato
  2614 ;;		_InicializaLCD
  2615 ;;		_BorraLCD
  2616 ;;		_EscribeLCD_c
  2617 ;;		_DireccionaLCD
  2618 ;; This function uses a non-reentrant model
  2619 ;;
  2620                           
  2621                           	psect	text21
  2622   00117E                     __ptext21:
  2623                           	callstack 0
  2624   00117E                     _HabilitaLCD:
  2625                           	callstack 25
  2626                           
  2627                           ;LibLCDXC8.h: 109: LATE2=1;
  2628                           
  2629                           ;incstack = 0
  2630   00117E  848D               	bsf	3981,2,c	;volatile
  2631                           
  2632                           ;LibLCDXC8.h: 110: _delay((unsigned long)((40)*(20000000/4000000.0)));
  2633   001180  0E42               	movlw	66
  2634   001182                     u1137:
  2635   001182  2EE8               	decfsz	wreg,f,c
  2636   001184  D7FE               	bra	u1137
  2637   001186  D000               	nop2	
  2638                           
  2639                           ;LibLCDXC8.h: 112: LATE2=0;
  2640   001188  948D               	bcf	3981,2,c	;volatile
  2641   00118A  0012               	return		;funcret
  2642   00118C                     __end_of_HabilitaLCD:
  2643                           	callstack 0
  2644                           
  2645 ;; *************** function _GuardarDatos *****************
  2646 ;; Defined at:
  2647 ;;		line 235 in file "Laboratorio5.c"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;  dir             2    2[COMRAM] unsigned int 
  2650 ;;  dato            1    4[COMRAM] unsigned char 
  2651 ;; Auto vars:     Size  Location     Type
  2652 ;;		None
  2653 ;; Return value:  Size  Location     Type
  2654 ;;                  1    wreg      void 
  2655 ;; Registers used:
  2656 ;;		wreg, status,2
  2657 ;; Tracked objects:
  2658 ;;		On entry : 0/0
  2659 ;;		On exit  : 0/0
  2660 ;;		Unchanged: 0/0
  2661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2662 ;;      Params:         3       0       0       0       0       0       0       0       0
  2663 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2664 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2665 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2666 ;;Total ram usage:        3 bytes
  2667 ;; Hardware stack levels used: 1
  2668 ;; Hardware stack levels required when called: 2
  2669 ;; This function calls:
  2670 ;;		Nothing
  2671 ;; This function is called by:
  2672 ;;		_main
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675                           
  2676                           	psect	text22
  2677   0010D4                     __ptext22:
  2678                           	callstack 0
  2679   0010D4                     _GuardarDatos:
  2680                           	callstack 28
  2681                           
  2682                           ;Laboratorio5.c: 236: EEADR = dir;
  2683                           
  2684                           ;incstack = 0
  2685   0010D4  C003  FFA9         	movff	GuardarDatos@dir,4009	;volatile
  2686                           
  2687                           ;Laboratorio5.c: 237: EEDATA = dato;
  2688   0010D8  C005  FFA8         	movff	GuardarDatos@dato,4008	;volatile
  2689                           
  2690                           ;Laboratorio5.c: 239: EEPGD = 0;
  2691   0010DC  9EA6               	bcf	4006,7,c	;volsfr
  2692                           
  2693                           ;Laboratorio5.c: 240: CFGS = 0;
  2694   0010DE  9CA6               	bcf	4006,6,c	;volsfr
  2695                           
  2696                           ;Laboratorio5.c: 241: WREN = 1;
  2697   0010E0  84A6               	bsf	4006,2,c	;volsfr
  2698                           
  2699                           ;Laboratorio5.c: 243: GIE = 0;
  2700   0010E2  9EF2               	bcf	4082,7,c	;volatile
  2701                           
  2702                           ;Laboratorio5.c: 245: EECON2 = 0x55;
  2703   0010E4  0E55               	movlw	85
  2704   0010E6  6EA7               	movwf	167,c	;volsfr
  2705                           
  2706                           ;Laboratorio5.c: 246: EECON2 = 0xAA;
  2707   0010E8  0EAA               	movlw	170
  2708   0010EA  6EA7               	movwf	167,c	;volsfr
  2709                           
  2710                           ;Laboratorio5.c: 247: WR = 1;
  2711   0010EC  82A6               	bsf	4006,1,c	;volsfr
  2712                           
  2713                           ;Laboratorio5.c: 248: GIE = 1;
  2714   0010EE  8EF2               	bsf	4082,7,c	;volatile
  2715   0010F0                     l269:
  2716   0010F0  A8A1               	btfss	4001,4,c	;volatile
  2717   0010F2  D7FE               	goto	l269
  2718                           
  2719                           ;Laboratorio5.c: 250: EEIF = 0;
  2720   0010F4  98A1               	bcf	4001,4,c	;volatile
  2721                           
  2722                           ;Laboratorio5.c: 251: WREN = 0;
  2723   0010F6  94A6               	bcf	4006,2,c	;volsfr
  2724   0010F8  0012               	return		;funcret
  2725   0010FA                     __end_of_GuardarDatos:
  2726                           	callstack 0
  2727                           
  2728 ;; *************** function _ConvertirUnidades *****************
  2729 ;; Defined at:
  2730 ;;		line 228 in file "Laboratorio5.c"
  2731 ;; Parameters:    Size  Location     Type
  2732 ;;  canal           1    wreg     unsigned char 
  2733 ;; Auto vars:     Size  Location     Type
  2734 ;;  canal           1    2[COMRAM] unsigned char 
  2735 ;; Return value:  Size  Location     Type
  2736 ;;                  2   78[None  ] unsigned int 
  2737 ;; Registers used:
  2738 ;;		wreg, status,2, status,0
  2739 ;; Tracked objects:
  2740 ;;		On entry : 0/0
  2741 ;;		On exit  : 0/0
  2742 ;;		Unchanged: 0/0
  2743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2744 ;;      Params:         0       0       0       0       0       0       0       0       0
  2745 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2746 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2747 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2748 ;;Total ram usage:        1 bytes
  2749 ;; Hardware stack levels used: 1
  2750 ;; Hardware stack levels required when called: 2
  2751 ;; This function calls:
  2752 ;;		Nothing
  2753 ;; This function is called by:
  2754 ;;		_main
  2755 ;; This function uses a non-reentrant model
  2756 ;;
  2757                           
  2758                           	psect	text23
  2759   00115C                     __ptext23:
  2760                           	callstack 0
  2761   00115C                     _ConvertirUnidades:
  2762                           	callstack 28
  2763                           
  2764                           ;incstack = 0
  2765                           ;ConvertirUnidades@canal stored from wreg
  2766   00115C  6E03               	movwf	ConvertirUnidades@canal^0,c
  2767                           
  2768                           ;Laboratorio5.c: 229: ADCON0 = 0b00000001 | (canal << 2);
  2769   00115E  4403               	rlncf	ConvertirUnidades@canal^0,w,c
  2770   001160  46E8               	rlncf	wreg,f,c
  2771   001162  0BFC               	andlw	252
  2772   001164  0901               	iorlw	1
  2773   001166  6EC2               	movwf	194,c	;volatile
  2774                           
  2775                           ;Laboratorio5.c: 230: GO = 1;
  2776   001168  82C2               	bsf	4034,1,c	;volatile
  2777   00116A                     l263:
  2778   00116A  A2C2               	btfss	4034,1,c	;volatile
  2779   00116C  0012               	return	
  2780   00116E  D7FD               	goto	l263
  2781   001170                     __end_of_ConvertirUnidades:
  2782                           	callstack 0
  2783                           
  2784 ;; *************** function _ColorRGB *****************
  2785 ;; Defined at:
  2786 ;;		line 208 in file "Laboratorio5.c"
  2787 ;; Parameters:    Size  Location     Type
  2788 ;;  val             2    2[COMRAM] unsigned int 
  2789 ;; Auto vars:     Size  Location     Type
  2790 ;;		None
  2791 ;; Return value:  Size  Location     Type
  2792 ;;                  1    wreg      void 
  2793 ;; Registers used:
  2794 ;;		wreg, status,2, status,0
  2795 ;; Tracked objects:
  2796 ;;		On entry : 0/0
  2797 ;;		On exit  : 0/0
  2798 ;;		Unchanged: 0/0
  2799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2800 ;;      Params:         2       0       0       0       0       0       0       0       0
  2801 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2802 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2803 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2804 ;;Total ram usage:        2 bytes
  2805 ;; Hardware stack levels used: 1
  2806 ;; Hardware stack levels required when called: 2
  2807 ;; This function calls:
  2808 ;;		Nothing
  2809 ;; This function is called by:
  2810 ;;		_main
  2811 ;; This function uses a non-reentrant model
  2812 ;;
  2813                           
  2814                           	psect	text24
  2815   000C3C                     __ptext24:
  2816                           	callstack 0
  2817   000C3C                     _ColorRGB:
  2818                           	callstack 28
  2819                           
  2820                           ;Laboratorio5.c: 209: if (val < 22) {
  2821                           
  2822                           ;incstack = 0
  2823   000C3C  5004               	movf	(ColorRGB@val+1)^0,w,c
  2824   000C3E  E107               	bnz	l1773
  2825   000C40  0E16               	movlw	22
  2826   000C42  5C03               	subwf	ColorRGB@val^0,w,c
  2827   000C44  B0D8               	btfsc	status,0,c
  2828   000C46  D003               	goto	l1773
  2829                           
  2830                           ;Laboratorio5.c: 210: LATB = 0b00000000;
  2831   000C48  0E00               	movlw	0
  2832   000C4A  6E8A               	movwf	138,c	;volatile
  2833                           
  2834                           ;Laboratorio5.c: 211: } else if (val >= 22 && val < 25) {
  2835   000C4C  0012               	return	
  2836   000C4E                     l1773:
  2837   000C4E  5004               	movf	(ColorRGB@val+1)^0,w,c
  2838   000C50  E104               	bnz	u770
  2839   000C52  0E16               	movlw	22
  2840   000C54  5C03               	subwf	ColorRGB@val^0,w,c
  2841   000C56  A0D8               	btfss	status,0,c
  2842   000C58  D009               	goto	l1779
  2843   000C5A                     u770:
  2844   000C5A  5004               	movf	(ColorRGB@val+1)^0,w,c
  2845   000C5C  E107               	bnz	l1779
  2846   000C5E  0E19               	movlw	25
  2847   000C60  5C03               	subwf	ColorRGB@val^0,w,c
  2848   000C62  B0D8               	btfsc	status,0,c
  2849   000C64  D003               	goto	l1779
  2850                           
  2851                           ;Laboratorio5.c: 212: LATB = 0b00000101;
  2852   000C66  0E05               	movlw	5
  2853   000C68  6E8A               	movwf	138,c	;volatile
  2854                           
  2855                           ;Laboratorio5.c: 213: } else if (val >= 25 && val < 28) {
  2856   000C6A  0012               	return	
  2857   000C6C                     l1779:
  2858   000C6C  5004               	movf	(ColorRGB@val+1)^0,w,c
  2859   000C6E  E104               	bnz	u790
  2860   000C70  0E19               	movlw	25
  2861   000C72  5C03               	subwf	ColorRGB@val^0,w,c
  2862   000C74  A0D8               	btfss	status,0,c
  2863   000C76  D009               	goto	l1785
  2864   000C78                     u790:
  2865   000C78  5004               	movf	(ColorRGB@val+1)^0,w,c
  2866   000C7A  E107               	bnz	l1785
  2867   000C7C  0E1C               	movlw	28
  2868   000C7E  5C03               	subwf	ColorRGB@val^0,w,c
  2869   000C80  B0D8               	btfsc	status,0,c
  2870   000C82  D003               	goto	l1785
  2871   000C84                     u800:
  2872                           
  2873                           ;Laboratorio5.c: 214: LATB = 0b00000100;
  2874   000C84  0E04               	movlw	4
  2875   000C86  6E8A               	movwf	138,c	;volatile
  2876                           
  2877                           ;Laboratorio5.c: 215: } else if (val >= 28 && val < 31) {
  2878   000C88  0012               	return	
  2879   000C8A                     l1785:
  2880   000C8A  5004               	movf	(ColorRGB@val+1)^0,w,c
  2881   000C8C  E104               	bnz	u810
  2882   000C8E  0E1C               	movlw	28
  2883   000C90  5C03               	subwf	ColorRGB@val^0,w,c
  2884   000C92  A0D8               	btfss	status,0,c
  2885   000C94  D009               	goto	l1791
  2886   000C96                     u810:
  2887   000C96  5004               	movf	(ColorRGB@val+1)^0,w,c
  2888   000C98  E107               	bnz	l1791
  2889   000C9A  0E1F               	movlw	31
  2890   000C9C  5C03               	subwf	ColorRGB@val^0,w,c
  2891   000C9E  B0D8               	btfsc	status,0,c
  2892   000CA0  D003               	goto	l1791
  2893   000CA2                     u820:
  2894                           
  2895                           ;Laboratorio5.c: 216: LATB = 0b00000110;
  2896   000CA2  0E06               	movlw	6
  2897   000CA4  6E8A               	movwf	138,c	;volatile
  2898                           
  2899                           ;Laboratorio5.c: 217: } else if (val >= 31 && val < 34) {
  2900   000CA6  0012               	return	
  2901   000CA8                     l1791:
  2902   000CA8  5004               	movf	(ColorRGB@val+1)^0,w,c
  2903   000CAA  E104               	bnz	u830
  2904   000CAC  0E1F               	movlw	31
  2905   000CAE  5C03               	subwf	ColorRGB@val^0,w,c
  2906   000CB0  A0D8               	btfss	status,0,c
  2907   000CB2  D009               	goto	l1797
  2908   000CB4                     u830:
  2909   000CB4  5004               	movf	(ColorRGB@val+1)^0,w,c
  2910   000CB6  E107               	bnz	l1797
  2911   000CB8  0E22               	movlw	34
  2912   000CBA  5C03               	subwf	ColorRGB@val^0,w,c
  2913   000CBC  B0D8               	btfsc	status,0,c
  2914   000CBE  D003               	goto	l1797
  2915                           
  2916                           ;Laboratorio5.c: 218: LATB = 0b00000010;
  2917   000CC0  0E02               	movlw	2
  2918   000CC2  6E8A               	movwf	138,c	;volatile
  2919                           
  2920                           ;Laboratorio5.c: 219: } else if (val >= 34 && val < 37) {
  2921   000CC4  0012               	return	
  2922   000CC6                     l1797:
  2923   000CC6  5004               	movf	(ColorRGB@val+1)^0,w,c
  2924   000CC8  E104               	bnz	u850
  2925   000CCA  0E22               	movlw	34
  2926   000CCC  5C03               	subwf	ColorRGB@val^0,w,c
  2927   000CCE  A0D8               	btfss	status,0,c
  2928   000CD0  D006               	goto	l1803
  2929   000CD2                     u850:
  2930   000CD2  5004               	movf	(ColorRGB@val+1)^0,w,c
  2931   000CD4  E104               	bnz	l1803
  2932   000CD6  0E25               	movlw	37
  2933   000CD8  5C03               	subwf	ColorRGB@val^0,w,c
  2934   000CDA  A0D8               	btfss	status,0,c
  2935   000CDC  D7E2               	goto	u820
  2936   000CDE                     l1803:
  2937   000CDE  5004               	movf	(ColorRGB@val+1)^0,w,c
  2938   000CE0  E104               	bnz	u870
  2939   000CE2  0E25               	movlw	37
  2940   000CE4  5C03               	subwf	ColorRGB@val^0,w,c
  2941   000CE6  A0D8               	btfss	status,0,c
  2942   000CE8  D006               	goto	l1809
  2943   000CEA                     u870:
  2944   000CEA  5004               	movf	(ColorRGB@val+1)^0,w,c
  2945   000CEC  E104               	bnz	l1809
  2946   000CEE  0E28               	movlw	40
  2947   000CF0  5C03               	subwf	ColorRGB@val^0,w,c
  2948   000CF2  A0D8               	btfss	status,0,c
  2949   000CF4  D7C7               	goto	u800
  2950   000CF6                     l1809:
  2951   000CF6  5004               	movf	(ColorRGB@val+1)^0,w,c
  2952   000CF8  E104               	bnz	u890
  2953   000CFA  0E28               	movlw	40
  2954   000CFC  5C03               	subwf	ColorRGB@val^0,w,c
  2955   000CFE  A0D8               	btfss	status,0,c
  2956   000D00  0012               	return	
  2957   000D02                     u890:
  2958                           
  2959                           ;Laboratorio5.c: 224: LATB = 0b00000111;
  2960   000D02  0E07               	movlw	7
  2961   000D04  6E8A               	movwf	138,c	;volatile
  2962   000D06  0012               	return	
  2963   000D08                     __end_of_ColorRGB:
  2964                           	callstack 0
  2965                           
  2966 ;; *************** function _ISR *****************
  2967 ;; Defined at:
  2968 ;;		line 264 in file "Laboratorio5.c"
  2969 ;; Parameters:    Size  Location     Type
  2970 ;;		None
  2971 ;; Auto vars:     Size  Location     Type
  2972 ;;		None
  2973 ;; Return value:  Size  Location     Type
  2974 ;;                  1    wreg      void 
  2975 ;; Registers used:
  2976 ;;		wreg, status,2, status,0, cstack
  2977 ;; Tracked objects:
  2978 ;;		On entry : 0/0
  2979 ;;		On exit  : 0/0
  2980 ;;		Unchanged: 0/0
  2981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2982 ;;      Params:         0       0       0       0       0       0       0       0       0
  2983 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2984 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2985 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2986 ;;Total ram usage:        2 bytes
  2987 ;; Hardware stack levels used: 1
  2988 ;; Hardware stack levels required when called: 1
  2989 ;; This function calls:
  2990 ;;		_Recibir
  2991 ;; This function is called by:
  2992 ;;		Interrupt level 2
  2993 ;; This function uses a non-reentrant model
  2994 ;;
  2995                           
  2996                           	psect	intcode
  2997   000008                     __pintcode:
  2998                           	callstack 0
  2999   000008                     _ISR:
  3000                           	callstack 24
  3001                           
  3002                           ;incstack = 0
  3003   000008  8221               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3004   00000A  ED84  F006         	call	int_func,f	;refresh shadow registers
  3005                           
  3006                           	psect	intcode_body
  3007   000D08                     __pintcode_body:
  3008                           	callstack 24
  3009   000D08                     int_func:
  3010                           	callstack 24
  3011   000D08  0006               	pop		; remove dummy address from shadow register refresh
  3012                           
  3013                           ;Laboratorio5.c: 265: if(TMR0IF){
  3014   000D0A  A4F2               	btfss	4082,2,c	;volatile
  3015   000D0C  D00A               	goto	i2l1585
  3016                           
  3017                           ;Laboratorio5.c: 266: TMR0IF=0;
  3018   000D0E  94F2               	bcf	4082,2,c	;volatile
  3019                           
  3020                           ;Laboratorio5.c: 267: RE0 = !RE0;
  3021   000D10  B084               	btfsc	3972,0,c	;volatile
  3022   000D12  D002               	goto	i2u54_40
  3023   000D14  8084               	bsf	3972,0,c	;volatile
  3024   000D16  D001               	goto	i2u55_45
  3025   000D18                     i2u54_40:
  3026   000D18  9084               	bcf	3972,0,c	;volatile
  3027   000D1A                     i2u55_45:
  3028                           
  3029                           ;Laboratorio5.c: 268: TMR0 = 3036;
  3030   000D1A  0E0B               	movlw	11
  3031   000D1C  6ED7               	movwf	215,c	;volatile
  3032   000D1E  0EDC               	movlw	220
  3033   000D20  6ED6               	movwf	214,c	;volatile
  3034   000D22                     i2l1585:
  3035                           
  3036                           ;Laboratorio5.c: 270: };Laboratorio5.c: 271: if(RCIF){
  3037   000D22  BA9E               	btfsc	3998,5,c	;volatile
  3038   000D24  D01A               	goto	i2l1599
  3039   000D26  D033               	goto	i2l289
  3040   000D28                     i2l1589:
  3041                           
  3042                           ;Laboratorio5.c: 274: A=0;
  3043   000D28  0E00               	movlw	0
  3044   000D2A  6E1C               	movwf	(_A+1)^0,c
  3045   000D2C  0E00               	movlw	0
  3046   000D2E  6E1B               	movwf	_A^0,c
  3047                           
  3048                           ;Laboratorio5.c: 275: B=0;
  3049   000D30  0E00               	movlw	0
  3050   000D32  6E1A               	movwf	(_B+1)^0,c
  3051   000D34  0E00               	movlw	0
  3052   000D36  D00F               	goto	L6
  3053   000D38                     i2l1591:
  3054                           
  3055                           ;Laboratorio5.c: 278: A=0;
  3056   000D38  0E00               	movlw	0
  3057   000D3A  6E1C               	movwf	(_A+1)^0,c
  3058   000D3C  0E00               	movlw	0
  3059   000D3E  D007               	goto	L8
  3060   000D40                     i2l1593:
  3061                           
  3062                           ;Laboratorio5.c: 282: A=1;
  3063   000D40  0E00               	movlw	0
  3064   000D42  6E1C               	movwf	(_A+1)^0,c
  3065   000D44  0E01               	movlw	1
  3066   000D46  D7F3               	goto	L7
  3067   000D48                     i2l1595:
  3068                           
  3069                           ;Laboratorio5.c: 286: A=1;
  3070   000D48  0E00               	movlw	0
  3071   000D4A  6E1C               	movwf	(_A+1)^0,c
  3072   000D4C  0E01               	movlw	1
  3073   000D4E                     L8:
  3074   000D4E  6E1B               	movwf	_A^0,c
  3075                           
  3076                           ;Laboratorio5.c: 287: B=1;
  3077   000D50  0E00               	movlw	0
  3078   000D52  6E1A               	movwf	(_B+1)^0,c
  3079   000D54  0E01               	movlw	1
  3080   000D56                     L6:
  3081   000D56  6E19               	movwf	_B^0,c
  3082                           
  3083                           ;Laboratorio5.c: 288: break;
  3084   000D58  D00E               	goto	i2l1601
  3085   000D5A                     i2l1599:
  3086   000D5A  ECD0  F008         	call	_Recibir	;wreg free
  3087                           
  3088                           ; Switch size 1, requested type "simple"
  3089                           ; Number of cases is 4, Range of values is 67 to 82
  3090                           ; switch strategies available:
  3091                           ; Name         Instructions Cycles
  3092                           ; simple_byte           13     7 (average)
  3093                           ;	Chosen strategy is simple_byte
  3094   000D5E  0A43               	xorlw	67	; case 67
  3095   000D60  B4D8               	btfsc	status,2,c
  3096   000D62  D7E2               	goto	i2l1589
  3097   000D64  0A05               	xorlw	5	; case 70
  3098   000D66  B4D8               	btfsc	status,2,c
  3099   000D68  D7EF               	goto	i2l1595
  3100   000D6A  0A0D               	xorlw	13	; case 75
  3101   000D6C  B4D8               	btfsc	status,2,c
  3102   000D6E  D7E4               	goto	i2l1591
  3103   000D70  0A19               	xorlw	25	; case 82
  3104   000D72  B4D8               	btfsc	status,2,c
  3105   000D74  D7E5               	goto	i2l1593
  3106   000D76                     i2l1601:
  3107                           
  3108                           ;Laboratorio5.c: 292: _delay((unsigned long)((100)*(8000000/4000.0)));
  3109   000D76  0E02               	movlw	2
  3110   000D78  6E02               	movwf	(??_ISR+1)^0,c
  3111   000D7A  0E04               	movlw	4
  3112   000D7C  6E01               	movwf	??_ISR^0,c
  3113   000D7E  0EBA               	movlw	186
  3114   000D80                     i2u114_47:
  3115   000D80  2EE8               	decfsz	wreg,f,c
  3116   000D82  D7FE               	bra	i2u114_47
  3117   000D84  2E01               	decfsz	??_ISR^0,f,c
  3118   000D86  D7FC               	bra	i2u114_47
  3119   000D88  2E02               	decfsz	(??_ISR+1)^0,f,c
  3120   000D8A  D7FA               	bra	i2u114_47
  3121   000D8C  D000               	nop2	
  3122   000D8E                     i2l289:
  3123   000D8E  9221               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3124   000D90  0011               	retfie		f
  3125   000D92                     __end_of_ISR:
  3126                           	callstack 0
  3127                           
  3128 ;; *************** function _Recibir *****************
  3129 ;; Defined at:
  3130 ;;		line 139 in file "Laboratorio5.c"
  3131 ;; Parameters:    Size  Location     Type
  3132 ;;		None
  3133 ;; Auto vars:     Size  Location     Type
  3134 ;;		None
  3135 ;; Return value:  Size  Location     Type
  3136 ;;                  1    wreg      unsigned char 
  3137 ;; Registers used:
  3138 ;;		wreg, status,2
  3139 ;; Tracked objects:
  3140 ;;		On entry : 0/0
  3141 ;;		On exit  : 0/0
  3142 ;;		Unchanged: 0/0
  3143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3144 ;;      Params:         0       0       0       0       0       0       0       0       0
  3145 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3146 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3147 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3148 ;;Total ram usage:        0 bytes
  3149 ;; Hardware stack levels used: 1
  3150 ;; This function calls:
  3151 ;;		Nothing
  3152 ;; This function is called by:
  3153 ;;		_ISR
  3154 ;; This function uses a non-reentrant model
  3155 ;;
  3156                           
  3157                           	psect	text26
  3158   0011A0                     __ptext26:
  3159                           	callstack 0
  3160   0011A0                     _Recibir:
  3161                           	callstack 24
  3162                           
  3163                           ;Laboratorio5.c: 140: while(RCIF==0);
  3164                           
  3165                           ;incstack = 0
  3166   0011A0  AA9E               	btfss	3998,5,c	;volatile
  3167   0011A2  D7FE               	goto	__ptext26
  3168                           
  3169                           ;Laboratorio5.c: 141: return RCREG;
  3170   0011A4  50AE               	movf	174,w,c	;volatile
  3171   0011A6  0012               	return		;funcret
  3172   0011A8                     __end_of_Recibir:
  3173                           	callstack 0
  3174                           
  3175                           	psect	rparam
  3176   000000                     
  3177                           	psect	temp
  3178   000021                     btemp:
  3179                           	callstack 0
  3180   000021                     	ds	1
  3181   000000                     int$flags	set	btemp
  3182   000000                     wtemp8	set	btemp+1
  3183   000000                     ttemp5	set	btemp+1
  3184   000000                     ttemp6	set	btemp+4
  3185   000000                     ttemp7	set	btemp+8
  3186                           
  3187                           	psect	idloc
  3188                           
  3189                           ;Config register IDLOC0 @ 0x200000
  3190                           ;	unspecified, using default values
  3191   200000                     	org	2097152
  3192   200000  FF                 	db	255
  3193                           
  3194                           ;Config register IDLOC1 @ 0x200001
  3195                           ;	unspecified, using default values
  3196   200001                     	org	2097153
  3197   200001  FF                 	db	255
  3198                           
  3199                           ;Config register IDLOC2 @ 0x200002
  3200                           ;	unspecified, using default values
  3201   200002                     	org	2097154
  3202   200002  FF                 	db	255
  3203                           
  3204                           ;Config register IDLOC3 @ 0x200003
  3205                           ;	unspecified, using default values
  3206   200003                     	org	2097155
  3207   200003  FF                 	db	255
  3208                           
  3209                           ;Config register IDLOC4 @ 0x200004
  3210                           ;	unspecified, using default values
  3211   200004                     	org	2097156
  3212   200004  FF                 	db	255
  3213                           
  3214                           ;Config register IDLOC5 @ 0x200005
  3215                           ;	unspecified, using default values
  3216   200005                     	org	2097157
  3217   200005  FF                 	db	255
  3218                           
  3219                           ;Config register IDLOC6 @ 0x200006
  3220                           ;	unspecified, using default values
  3221   200006                     	org	2097158
  3222   200006  FF                 	db	255
  3223                           
  3224                           ;Config register IDLOC7 @ 0x200007
  3225                           ;	unspecified, using default values
  3226   200007                     	org	2097159
  3227   200007  FF                 	db	255
  3228                           
  3229                           	psect	config
  3230                           
  3231                           ;Config register CONFIG1L @ 0x300000
  3232                           ;	unspecified, using default values
  3233                           ;	PLL Prescaler Selection bits
  3234                           ;	PLLDIV = 0x0, unprogrammed default
  3235                           ;	System Clock Postscaler Selection bits
  3236                           ;	CPUDIV = 0x0, unprogrammed default
  3237                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3238                           ;	USBDIV = 0x0, unprogrammed default
  3239   300000                     	org	3145728
  3240   300000  00                 	db	0
  3241                           
  3242                           ;Config register CONFIG1H @ 0x300001
  3243                           ;	Oscillator Selection bits
  3244                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  3245                           ;	Fail-Safe Clock Monitor Enable bit
  3246                           ;	FCMEN = 0x0, unprogrammed default
  3247                           ;	Internal/External Oscillator Switchover bit
  3248                           ;	IESO = 0x0, unprogrammed default
  3249   300001                     	org	3145729
  3250   300001  09                 	db	9
  3251                           
  3252                           ;Config register CONFIG2L @ 0x300002
  3253                           ;	unspecified, using default values
  3254                           ;	Power-up Timer Enable bit
  3255                           ;	PWRT = 0x1, unprogrammed default
  3256                           ;	Brown-out Reset Enable bits
  3257                           ;	BOR = 0x3, unprogrammed default
  3258                           ;	Brown-out Reset Voltage bits
  3259                           ;	BORV = 0x3, unprogrammed default
  3260                           ;	USB Voltage Regulator Enable bit
  3261                           ;	VREGEN = 0x0, unprogrammed default
  3262   300002                     	org	3145730
  3263   300002  1F                 	db	31
  3264                           
  3265                           ;Config register CONFIG2H @ 0x300003
  3266                           ;	Watchdog Timer Enable bit
  3267                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3268                           ;	Watchdog Timer Postscale Select bits
  3269                           ;	WDTPS = 0xF, unprogrammed default
  3270   300003                     	org	3145731
  3271   300003  1E                 	db	30
  3272                           
  3273                           ; Padding undefined space
  3274   300004                     	org	3145732
  3275   300004  FF                 	db	255
  3276                           
  3277                           ;Config register CONFIG3H @ 0x300005
  3278                           ;	CCP2 MUX bit
  3279                           ;	CCP2MX = 0x1, unprogrammed default
  3280                           ;	PORTB A/D Enable bit
  3281                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3282                           ;	Low-Power Timer 1 Oscillator Enable bit
  3283                           ;	LPT1OSC = 0x0, unprogrammed default
  3284                           ;	MCLR Pin Enable bit
  3285                           ;	MCLRE = 0x1, unprogrammed default
  3286   300005                     	org	3145733
  3287   300005  81                 	db	129
  3288                           
  3289                           ;Config register CONFIG4L @ 0x300006
  3290                           ;	unspecified, using default values
  3291                           ;	Stack Full/Underflow Reset Enable bit
  3292                           ;	STVREN = 0x1, unprogrammed default
  3293                           ;	Single-Supply ICSP Enable bit
  3294                           ;	LVP = 0x1, unprogrammed default
  3295                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  3296                           ;	ICPRT = 0x0, unprogrammed default
  3297                           ;	Extended Instruction Set Enable bit
  3298                           ;	XINST = 0x0, unprogrammed default
  3299                           ;	Background Debugger Enable bit
  3300                           ;	DEBUG = 0x1, unprogrammed default
  3301   300006                     	org	3145734
  3302   300006  85                 	db	133
  3303                           
  3304                           ; Padding undefined space
  3305   300007                     	org	3145735
  3306   300007  FF                 	db	255
  3307                           
  3308                           ;Config register CONFIG5L @ 0x300008
  3309                           ;	unspecified, using default values
  3310                           ;	Code Protection bit
  3311                           ;	CP0 = 0x1, unprogrammed default
  3312                           ;	Code Protection bit
  3313                           ;	CP1 = 0x1, unprogrammed default
  3314                           ;	Code Protection bit
  3315                           ;	CP2 = 0x1, unprogrammed default
  3316                           ;	Code Protection bit
  3317                           ;	CP3 = 0x1, unprogrammed default
  3318   300008                     	org	3145736
  3319   300008  0F                 	db	15
  3320                           
  3321                           ;Config register CONFIG5H @ 0x300009
  3322                           ;	unspecified, using default values
  3323                           ;	Boot Block Code Protection bit
  3324                           ;	CPB = 0x1, unprogrammed default
  3325                           ;	Data EEPROM Code Protection bit
  3326                           ;	CPD = 0x1, unprogrammed default
  3327   300009                     	org	3145737
  3328   300009  C0                 	db	192
  3329                           
  3330                           ;Config register CONFIG6L @ 0x30000A
  3331                           ;	unspecified, using default values
  3332                           ;	Write Protection bit
  3333                           ;	WRT0 = 0x1, unprogrammed default
  3334                           ;	Write Protection bit
  3335                           ;	WRT1 = 0x1, unprogrammed default
  3336                           ;	Write Protection bit
  3337                           ;	WRT2 = 0x1, unprogrammed default
  3338                           ;	Write Protection bit
  3339                           ;	WRT3 = 0x1, unprogrammed default
  3340   30000A                     	org	3145738
  3341   30000A  0F                 	db	15
  3342                           
  3343                           ;Config register CONFIG6H @ 0x30000B
  3344                           ;	unspecified, using default values
  3345                           ;	Configuration Register Write Protection bit
  3346                           ;	WRTC = 0x1, unprogrammed default
  3347                           ;	Boot Block Write Protection bit
  3348                           ;	WRTB = 0x1, unprogrammed default
  3349                           ;	Data EEPROM Write Protection bit
  3350                           ;	WRTD = 0x1, unprogrammed default
  3351   30000B                     	org	3145739
  3352   30000B  E0                 	db	224
  3353                           
  3354                           ;Config register CONFIG7L @ 0x30000C
  3355                           ;	unspecified, using default values
  3356                           ;	Table Read Protection bit
  3357                           ;	EBTR0 = 0x1, unprogrammed default
  3358                           ;	Table Read Protection bit
  3359                           ;	EBTR1 = 0x1, unprogrammed default
  3360                           ;	Table Read Protection bit
  3361                           ;	EBTR2 = 0x1, unprogrammed default
  3362                           ;	Table Read Protection bit
  3363                           ;	EBTR3 = 0x1, unprogrammed default
  3364   30000C                     	org	3145740
  3365   30000C  0F                 	db	15
  3366                           
  3367                           ;Config register CONFIG7H @ 0x30000D
  3368                           ;	unspecified, using default values
  3369                           ;	Boot Block Table Read Protection bit
  3370                           ;	EBTRB = 0x1, unprogrammed default
  3371   30000D                     	org	3145741
  3372   30000D  40                 	db	64
  3373                           tosu	equ	0xFFF
  3374                           tosh	equ	0xFFE
  3375                           tosl	equ	0xFFD
  3376                           stkptr	equ	0xFFC
  3377                           pclatu	equ	0xFFB
  3378                           pclath	equ	0xFFA
  3379                           pcl	equ	0xFF9
  3380                           tblptru	equ	0xFF8
  3381                           tblptrh	equ	0xFF7
  3382                           tblptrl	equ	0xFF6
  3383                           tablat	equ	0xFF5
  3384                           prodh	equ	0xFF4
  3385                           prodl	equ	0xFF3
  3386                           indf0	equ	0xFEF
  3387                           postinc0	equ	0xFEE
  3388                           postdec0	equ	0xFED
  3389                           preinc0	equ	0xFEC
  3390                           plusw0	equ	0xFEB
  3391                           fsr0h	equ	0xFEA
  3392                           fsr0l	equ	0xFE9
  3393                           wreg	equ	0xFE8
  3394                           indf1	equ	0xFE7
  3395                           postinc1	equ	0xFE6
  3396                           postdec1	equ	0xFE5
  3397                           preinc1	equ	0xFE4
  3398                           plusw1	equ	0xFE3
  3399                           fsr1h	equ	0xFE2
  3400                           fsr1l	equ	0xFE1
  3401                           bsr	equ	0xFE0
  3402                           indf2	equ	0xFDF
  3403                           postinc2	equ	0xFDE
  3404                           postdec2	equ	0xFDD
  3405                           preinc2	equ	0xFDC
  3406                           plusw2	equ	0xFDB
  3407                           fsr2h	equ	0xFDA
  3408                           fsr2l	equ	0xFD9
  3409                           status	equ	0xFD8

Data Sizes:
    Strings     34
    Constant    0
    Data        1
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     24      32
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_4(CODE[5]), STR_3(CODE[6]), STR_2(CODE[10]), STR_1(CODE[13]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_4(CODE[5]), STR_3(CODE[6]), STR_2(CODE[10]), STR_1(CODE[13]), 

    MensajeLCD_Word@a	PTR unsigned char  size(1) Largest target is 13
		 -> STR_4(CODE[5]), STR_3(CODE[6]), STR_2(CODE[10]), STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _main->_TransmitirDatos
    _TransmitirDatos->_MensajeLCD_Word
    _TransmitirDatos->___awdiv
    _MensajeLCD_Word->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _LeerHT11->_LeerByte
    _LeerByte->_LeerBit
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    7352
                                             22 COMRAM     2     2      0
                           _BorraLCD
                           _ColorRGB
                  _ConvertirUnidades
                      _DireccionaLCD
                       _EscribeLCD_c
                       _GuardarDatos
                      _InicializaLCD
                          _LeerDatos
                           _LeerHT11
                    _MensajeLCD_Word
                    _TransmitirDatos
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (1) _TransmitirDatos                                     14    10      4    4752
                                             10 COMRAM    12     8      4
                           _BorraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
                    _MensajeLCD_Word
                         _Transmitir
                            ___awdiv
                            ___lbdiv
                            ___lbmod
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     615
                                              2 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     922
                                              2 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___lbmod                                              4     3      1     387
                                              2 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) ___lbdiv                                              4     3      1     390
                                              2 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Transmitir                                           1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MensajeLCD_Word                                      4     3      1     650
                                              6 COMRAM     4     3      1
                       _EscribeLCD_c
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               3     1      2     166
                                              2 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _EscribeLCD_c                                         1     1      0      90
                                              5 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _DireccionaLCD                                        1     1      0      90
                                              5 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _LeerHT11                                             1     1      0      75
                                              6 COMRAM     1     1      0
                           _LeerByte
 ---------------------------------------------------------------------------------
 (2) _LeerByte                                             3     3      0      75
                                              3 COMRAM     3     3      0
                            _LeerBit
 ---------------------------------------------------------------------------------
 (3) _LeerBit                                              1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LeerDatos                                            2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     150
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0      75
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _EnviaDato                                            1     1      0      60
                                              4 COMRAM     1     1      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _RetardoLCD                                           2     2      0      15
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GuardarDatos                                         3     0      3     196
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _ConvertirUnidades                                    1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ColorRGB                                             2     0      2     384
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  2     2      0       0
                                              0 COMRAM     2     2      0
                            _Recibir
 ---------------------------------------------------------------------------------
 (7) _Recibir                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _ColorRGB
   _ConvertirUnidades
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _GuardarDatos
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerDatos
   _LeerHT11
     _LeerByte
       _LeerBit
   _MensajeLCD_Word
     _EscribeLCD_c
     _strlen
   _TransmitirDatos
     _BorraLCD
     _DireccionaLCD
     _EscribeLCD_c
     _MensajeLCD_Word
     _Transmitir
     ___awdiv
     ___lbdiv
     ___lbmod
     ___lwdiv
     ___lwmod
     ___wmul
   ___lbdiv
   ___lbmod

 _ISR (ROOT)
   _Recibir

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      36        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     18      20       1       34.0%
BITBIGSFRhhhl       1A      0       0      21        0.0%
BITBIGSFRlhhl       12      0       0      32        0.0%
BITBIGSFRhlhhh       E      0       0      23        0.0%
BITBIGSFRhhhh        D      0       0      20        0.0%
BITBIGSFRll          D      0       0      34        0.0%
BITBIGSFRhlhlh       8      0       0      25        0.0%
BITBIGSFRhllhl       7      0       0      29        0.0%
BITBIGSFRhlhhl       7      0       0      24        0.0%
BITBIGSFRlhhh        5      0       0      31        0.0%
BITBIGSFRhllhhl      4      0       0      27        0.0%
BITBIGSFRhllll       4      0       0      30        0.0%
BITBIGSFRhllhhl      2      0       0      28        0.0%
BITBIGSFRhllhhh      1      0       0      26        0.0%
BITBIGSFRlhl         1      0       0      33        0.0%
BITBIGSFRhhl         1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      20      35        0.0%
DATA                 0      0      20       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Jun 02 09:45:19 2023

                        _A 001B                          _B 0019          Transmitir@BufferT 0003  
                       _GO 007E11                         _RD 007D30                         u50 102C  
                       _WR 007D31               ___awdiv@sign 0008                 EnviaDato@a 0005  
      ___wmul@multiplicand 0005                        l201 0FE2                        l212 1004  
            _InicializaLCD 0F10                        l217 1028                        l241 099A  
                      l236 0858                        l263 116A                        l269 10F0  
                      l198 0FD8                        l771 0EC4                        l781 0F06  
                      _GIE 007F97                        _RC0 007C10                        _RC1 007C11  
                      _RC2 007C12                        _RE0 007C20                        _RC4 007C14  
                      _RD3 007C1B                        u620 0DD8                        u700 0E9E  
                      _ISR 0008                        u800 0C84                        u810 0C96  
                      u730 0EE8                        u820 0CA2                        u660 0F6E  
                      u830 0CB4                        u850 0CD2                        u770 0C5A  
                      u930 0BF4                        u940 0BF6                        u870 0CEA  
                      u790 0C78                        u950 0C02                        u960 0C04  
                      u890 0D02                        u970 0C38                        u997 0ABE  
         TransmitirDatos@n 0011                        wreg 000FE8                       ?_ISR 0001  
                     l1051 0E1A                       l1053 0E2A                       l1061 0E60  
                     l1055 0E4C                       l1135 1102                       l1057 0E56  
                     l1145 118E                       l1099 1018                       l1611 108E  
                     l1623 0FB0                       l1711 107E                       l1703 1066  
                     l1609 108C                       l1803 0CDE                       l1619 0F96  
                     l1651 0DCC                       l1723 0E92                       l1653 0DD4  
                     l1645 0DB6                       l1725 0E9A                       l1671 0E0C  
                     l1663 0DF4                       l1639 0DA6                       l1735 0EBA  
                     l1751 0EFC                       l1743 0EDC                       l1809 0CF6  
                     l1681 0F64                       l1745 0EE4                       l1833 08A6  
                     l1825 0866                       l1841 08FE                       l1667 0DFE  
                     l1773 0C4E                       l1693 0F80                       l1685 0F6A  
                     l1829 087A                       l1791 0CA8                       l1839 08D4  
                     l1785 0C8A                       l1697 0F88                       l1779 0C6C  
                     l1797 0CC6                       l1973 0BB4                       l1983 0C0E  
                     l1967 0B7C                       l1985 0C22                       _CFGS 007D36  
                     _EEIF 007D0C                       STR_1 0801                       STR_2 080E  
                     STR_3 0818                       STR_4 081E                       u1007 0B6A  
                     u1017 0B8E                       u1107 0E40                       u1027 0BA8  
                     u1117 0E4E                       u1037 0BBE                       u1127 0E58  
                     u1047 0FCE                       u1137 1182                       u1057 0FDE  
                     u1067 100A                       u1077 101A                       _LATB 000F8A  
                     u1087 0E20                       _LATD 000F8C                       u1097 0E30  
                     _RCIF 007CF5                       _TMR0 000FD6                       _TRMT 007D61  
                     _WREN 007D32             ??_EscribeLCD_c 0006                       _Temp 001F  
                     _main 0AB4                       btemp 0021                       prodh 000FF4  
                     prodl 000FF3                       start 000E            __end_of_LeerBit 1030  
             ___param_bank 000000              ?_GuardarDatos 0003                      ??_ISR 0001  
          __end_of_Recibir 11A8             ?_InicializaLCD 0001                      ?_main 0001  
          __end_of___awdiv 0E16            __end_of___lbdiv 0F8C                      _ADRES 000FC3  
                    _EEADR 000FA9              EscribeLCD_c@a 0006            __end_of___lbmod 1086  
                    _EEPGD 007D37                      _T0CON 000FD5            ___awdiv@divisor 0005  
                    _LATC2 007C5A                      _LATE1 007C69                      _LATE2 007C6A  
          __end_of___lwdiv 0ECE            __end_of___lwmod 0F10                      i2l289 0D8E  
          ___awdiv@counter 0007                      _RCREG 000FAE                      _RCSTA 000FAB  
                    _SPBRG 000FAF                      _USBEN 007B6B                      _TRISA 000F92  
                    _TRISB 000F93                      _TRISC 000F94                      _TRISD 000F95  
                    _TRISE 000F96                      _TXREG 000FAD                      _TXSTA 000FAC  
                    tablat 000FF5                _HabilitaLCD 117E                      ttemp5 0022  
                    ttemp6 0025                      ttemp7 0029                      status 000FD8  
                    wtemp8 0022            ___lbdiv@divisor 0003            ___lbdiv@counter 0005  
         __end_of_BorraLCD 115C           __end_of_LeerHT11 1000           __end_of_ColorRGB 0D08  
          __initialization 1030             ??_GuardarDatos 0006           __end_of_LeerByte 111C  
             __end_of_main 0C3C                     ??_main 0017              __activetblptr 000002  
                   _ADCON0 000FC2                     _ADCON1 000FC1                     _ADCON2 000FC0  
                   _EEDATA 000FA8             DireccionaLCD@a 0006                     _EECON2 000FA7  
         ___awdiv@dividend 0003                     i2l1601 0D76                     i2l1591 0D38  
                   i2l1593 0D40                     i2l1585 0D22                     i2l1595 0D48  
                   i2l1589 0D28                     i2l1599 0D5A                     _OSCCON 000FD3  
                   _TMR0IE 007F95                     _TMR0IF 007F92                     _TMR0ON 007EAF  
                   _TRISC2 007CA2                  ??_LeerBit 0003      __end_of_DireccionaLCD 1148  
                   _UTRDIS 007B7B                 _RetardoLCD 0E16                  ??_Recibir 0001  
      TransmitirDatos@Ent1 000B        TransmitirDatos@Ent2 000D        TransmitirDatos@Simb 0013  
                   ___wmul 10AE                  ??___awdiv 0007                  ??___lbdiv 0004  
                ??___lbmod 0004                  ??___lwdiv 0007                  ??___lwmod 0007  
          ??_InicializaLCD 0006                     clear_0 1048           ___awdiv@quotient 0009  
                   isa$std 000001       __end_of_EscribeLCD_c 1132                     _strlen 1086  
             __pdataCOMRAM 0020               __mediumconst 0000                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8                 _Transmitir 118C  
         ___lbdiv@dividend 0004            ___lbmod@divisor 0003                 __accesstop 0060  
  __end_of__initialization 104E            ___lbmod@counter 0005              ___rparam_used 000001  
           __pcstackCOMRAM 0001          __end_of_LeerDatos 117E          __end_of_EnviaDato 11A0  
         ___lbdiv@quotient 0006       __end_of_GuardarDatos 10FA                  ?_BorraLCD 0001  
                ?_LeerHT11 0001                  ?_ColorRGB 0003                  ?_LeerByte 0001  
              ?_RetardoLCD 0001                RetardoLCD@a 0004                    ?___wmul 0003  
                  _BAUDCON 000FB8                    ?_strlen 0003                    i2u54_40 0D18  
                  i2u55_45 0D1A                 ??_BorraLCD 0006                 ??_LeerHT11 0007  
               ??_ColorRGB 0005                ?_Transmitir 0001          ??_MensajeLCD_Word 0008  
               ??_LeerByte 0004               ?_HabilitaLCD 0001                    _LeerBit 1000  
                  _Humedad 001E                    _Recibir 11A0                    __Hparam 0000  
                  __Lparam 0000       TransmitirDatos@TempC 0015                    ___awdiv 0D92  
                  ___lbdiv 0F52                    ___lbmod 105C                    ___lwdiv 0E7C  
                  ___lwmod 0ECE               __psmallconst 0800                    __pcinit 1030  
                  __ramtop 0800                    __ptext0 0AB4                    __ptext1 0824  
                  __ptext2 10AE                    __ptext3 0ECE                    __ptext4 0E7C  
                  __ptext5 105C                    __ptext6 0F52                    __ptext7 0D92  
                  __ptext8 118C                    __ptext9 0F8C             __pintcode_body 0D08  
     end_of_initialization 104E           GuardarDatos@dato 0005              __Lmediumconst 0000  
                  int_func 0D08               _EscribeLCD_c 111C          ??_TransmitirDatos 000F  
                  postinc0 000FEE                    strlen@s 0003           ___lbmod@dividend 0004  
                LeerByte@i 0006                ___lbmod@rem 0006               _GuardarDatos 10D4  
           __end_of___wmul 10D4              __pidataCOMRAM 11A8      __end_of_InicializaLCD 0F52  
                _LeerDatos 1170                  _EnviaDato 1198             __end_of_strlen 10AE  
      start_initialization 1030                __end_of_ISR 0D92               ??_RetardoLCD 0003  
                 ??___wmul 0007                 ?_LeerDatos 0003            _MensajeLCD_Word 0F8C  
                 ??_strlen 0005                 ?_EnviaDato 0001                __pbssCOMRAM 0019  
       __end_of_RetardoLCD 0E7C           MensajeLCD_Word@a 0007           MensajeLCD_Word@i 0009  
             ??_Transmitir 0003                   ?_LeerBit 0001              _DireccionaLCD 1132  
                 ?_Recibir 0001           ___lwdiv@dividend 0003                  __pintcode 0008  
                 ?___awdiv 0003                   ?___lbdiv 0003                   ?___lbmod 0003  
                 ?___lwdiv 0003                   ?___lwmod 0003         __end_of_Transmitir 1198  
              __smallconst 0800           ___lwdiv@quotient 0007            _TransmitirDatos 0824  
           ___wmul@product 0007             ?_DireccionaLCD 0001            GuardarDatos@dir 0003  
                 i2u114_47 0D80    __end_of_MensajeLCD_Word 0FC6                ??_LeerDatos 0005  
        ___wmul@multiplier 0003                ??_EnviaDato 0005          _ConvertirUnidades 115C  
       ?_ConvertirUnidades 0001                   _BorraLCD 1148                   _LeerHT11 0FC6  
                 _ColorRGB 0C3C                   _LeerByte 10FA        ??_ConvertirUnidades 0003  
                 __Hrparam 0000                   __Lrparam 0000  __end_of_ConvertirUnidades 1170  
  __end_of_TransmitirDatos 0AB4            ___lwdiv@divisor 0005            ___lwdiv@counter 0009  
                 __ptext10 1086                   __ptext11 111C                   __ptext20 0E16  
                 __ptext12 1132                   __ptext21 117E                   __ptext13 0FC6  
                 __ptext22 10D4                   __ptext14 10FA                   __ptext23 115C  
                 __ptext15 1000                   __ptext24 0C3C                   __ptext16 1170  
                 __ptext17 0F10                   __ptext26 11A0                   __ptext18 1148  
                 __ptext19 1198            ??_DireccionaLCD 0006                   _interfaz 0020  
                 isa$xinst 000000           ?_MensajeLCD_Word 0007                   int$flags 0021  
                 intlevel2 0000              ??_HabilitaLCD 0003           ___lwmod@dividend 0003  
              ColorRGB@val 0003            ___lwmod@divisor 0005                   strlen@cp 0005  
          ___lwmod@counter 0007               LeerDatos@dir 0003           ?_TransmitirDatos 000B  
   ConvertirUnidades@canal 0003              ?_EscribeLCD_c 0001        _TemperaturaGuardada 001D  
               LeerBit@res 0003        __end_of_HabilitaLCD 118C                LeerByte@res 0005  
