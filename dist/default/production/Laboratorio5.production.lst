

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed May 24 13:00:34 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    41                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    42                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    44   000000                     
    45                           ; Generated 09/02/2023 GMT
    46                           ; 
    47                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution. Publication is not required when
    61                           ;        this file is used in an embedded application.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F4550 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79   000000                     
    80                           	psect	idataCOMRAM
    81   0012BA                     __pidataCOMRAM:
    82                           	callstack 0
    83                           
    84                           ;initializer for _interfaz
    85   0012BA  08                 	db	8
    86   000000                     _EECON2	set	4007
    87   000000                     _RCREG	set	4014
    88   000000                     _TXREG	set	4013
    89   000000                     _TRISC	set	3988
    90   000000                     _TRISD	set	3989
    91   000000                     _SPBRG	set	4015
    92   000000                     _BAUDCON	set	4024
    93   000000                     _RC0	set	31760
    94   000000                     _RD	set	32048
    95   000000                     _WR	set	32049
    96   000000                     _WREN	set	32050
    97   000000                     _CFGS	set	32054
    98   000000                     _GO	set	32273
    99   000000                     _RB5	set	31757
   100   000000                     _RB6	set	31758
   101   000000                     _RB7	set	31759
   102   000000                     _TRMT	set	32097
   103   000000                     _RC2	set	31762
   104   000000                     _TRISC2	set	31906
   105   000000                     _RC5	set	31765
   106   000000                     _RC4	set	31764
   107   000000                     _TMR0ON	set	32431
   108   000000                     _GIE	set	32663
   109   000000                     _TMR0IE	set	32661
   110   000000                     _LATD7	set	31847
   111   000000                     _LATD6	set	31846
   112   000000                     _LATD	set	3980
   113   000000                     _USBEN	set	31595
   114   000000                     _TRISA	set	3986
   115   000000                     _TRISB	set	3987
   116   000000                     _RCSTA	set	4011
   117   000000                     _TXSTA	set	4012
   118   000000                     _OSCCON	set	4051
   119   000000                     _T0CON	set	4053
   120   000000                     _RBPU	set	32655
   121   000000                     _ADCON2	set	4032
   122   000000                     _ADCON1	set	4033
   123   000000                     _ADCON0	set	4034
   124   000000                     _ADRES	set	4035
   125   000000                     _RCIF	set	31989
   126   000000                     _UTRDIS	set	31611
   127   000000                     _RB0	set	31752
   128   000000                     _RC1	set	31761
   129   000000                     _LATC2	set	31834
   130   000000                     _TMR0IF	set	32658
   131   000000                     _TMR0	set	4054
   132   000000                     _EEDATA	set	4008
   133   000000                     _EEADR	set	4009
   134   000000                     _EEIF	set	32012
   135   000000                     _EEPGD	set	32055
   136                           
   137                           	psect	smallconst
   138   000800                     __psmallconst:
   139                           	callstack 0
   140   000800  00                 	db	0
   141   000801                     STR_1:
   142   000801  55                 	db	85	;'U'
   143   000802  6C                 	db	108	;'l'
   144   000803  74                 	db	116	;'t'
   145   000804  69                 	db	105	;'i'
   146   000805  6D                 	db	109	;'m'
   147   000806  61                 	db	97	;'a'
   148   000807  20                 	db	32
   149   000808  74                 	db	116	;'t'
   150   000809  65                 	db	101	;'e'
   151   00080A  6D                 	db	109	;'m'
   152   00080B  70                 	db	112	;'p'
   153   00080C  3A                 	db	58	;':'
   154   00080D  00                 	db	0
   155   00080E                     STR_2:
   156   00080E  49                 	db	73	;'I'
   157   00080F  6E                 	db	110	;'n'
   158   000810  69                 	db	105	;'i'
   159   000811  63                 	db	99	;'c'
   160   000812  69                 	db	105	;'i'
   161   000813  61                 	db	97	;'a'
   162   000814  6E                 	db	110	;'n'
   163   000815  64                 	db	100	;'d'
   164   000816  6F                 	db	111	;'o'
   165   000817  00                 	db	0
   166   000818                     STR_3:
   167   000818  54                 	db	84	;'T'
   168   000819  65                 	db	101	;'e'
   169   00081A  6D                 	db	109	;'m'
   170   00081B  70                 	db	112	;'p'
   171   00081C  3A                 	db	58	;':'
   172   00081D  00                 	db	0
   173   00081E                     STR_4:
   174   00081E  48                 	db	72	;'H'
   175   00081F  75                 	db	117	;'u'
   176   000820  6D                 	db	109	;'m'
   177   000821  3A                 	db	58	;':'
   178   000822  00                 	db	0
   179   000823  00                 	db	0	; dummy byte at the end
   180   000000                     
   181                           ; #config settings
   182                           
   183                           	psect	cinit
   184   00115A                     __pcinit:
   185                           	callstack 0
   186   00115A                     start_initialization:
   187                           	callstack 0
   188   00115A                     __initialization:
   189                           	callstack 0
   190                           
   191                           ; Initialize objects allocated to COMRAM (1 bytes)
   192                           ; load TBLPTR registers with __pidataCOMRAM
   193   00115A  0EBA               	movlw	low __pidataCOMRAM
   194   00115C  6EF6               	movwf	tblptrl,c
   195   00115E  0E12               	movlw	high __pidataCOMRAM
   196   001160  6EF7               	movwf	tblptrh,c
   197   001162  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   198   001164  6EF8               	movwf	tblptru,c
   199   001166  0009               	tblrd		*+	;fetch initializer
   200   001168  CFF5 F022          	movff	tablat,__pdataCOMRAM
   201                           
   202                           ; Clear objects allocated to COMRAM (8 bytes)
   203   00116C  EE00  F01A         	lfsr	0,__pbssCOMRAM
   204   001170  0E08               	movlw	8
   205   001172                     clear_0:
   206   001172  6AEE               	clrf	postinc0,c
   207   001174  06E8               	decf	wreg,f,c
   208   001176  E1FD               	bnz	clear_0
   209   001178                     end_of_initialization:
   210                           	callstack 0
   211   001178                     __end_of__initialization:
   212                           	callstack 0
   213   001178  9023               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   214   00117A  9223               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   215   00117C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   216   00117E  6EF8               	movwf	tblptru,c
   217   001180  0100               	movlb	0
   218   001182  EF5A  F005         	goto	_main	;jump to C main() function
   219                           
   220                           	psect	bssCOMRAM
   221   00001A                     __pbssCOMRAM:
   222                           	callstack 0
   223   00001A                     _B:
   224                           	callstack 0
   225   00001A                     	ds	2
   226   00001C                     _A:
   227                           	callstack 0
   228   00001C                     	ds	2
   229   00001E                     _TempEEPROM:
   230                           	callstack 0
   231   00001E                     	ds	1
   232   00001F                     _Che:
   233                           	callstack 0
   234   00001F                     	ds	1
   235   000020                     _Hum:
   236                           	callstack 0
   237   000020                     	ds	1
   238   000021                     _Temp:
   239                           	callstack 0
   240   000021                     	ds	1
   241                           
   242                           	psect	dataCOMRAM
   243   000022                     __pdataCOMRAM:
   244                           	callstack 0
   245   000022                     _interfaz:
   246                           	callstack 0
   247   000022                     	ds	1
   248                           
   249                           	psect	cstackCOMRAM
   250   000001                     __pcstackCOMRAM:
   251                           	callstack 0
   252   000001                     ??_ISR:
   253   000001                     
   254                           ; 2 bytes @ 0x0
   255   000001                     	ds	2
   256   000003                     ??_RetardoLCD:
   257   000003                     ?___wmul:
   258                           	callstack 0
   259   000003                     ?___awdiv:
   260                           	callstack 0
   261   000003                     ?___lwdiv:
   262                           	callstack 0
   263   000003                     ?___lwmod:
   264                           	callstack 0
   265   000003                     ConfiguraLCD@a:
   266                           	callstack 0
   267   000003                     LeerBit@res:
   268                           	callstack 0
   269   000003                     Transmitir@BufferT:
   270                           	callstack 0
   271   000003                     Conversion@canal:
   272                           	callstack 0
   273   000003                     ___lbdiv@divisor:
   274                           	callstack 0
   275   000003                     ___lbmod@divisor:
   276                           	callstack 0
   277   000003                     ColorRGB@val:
   278                           	callstack 0
   279   000003                     GuardarDatoEnEEPROM@dir:
   280                           	callstack 0
   281   000003                     leerDatoEnEEPROM@dir:
   282                           	callstack 0
   283   000003                     ___wmul@multiplier:
   284                           	callstack 0
   285   000003                     ___awdiv@dividend:
   286                           	callstack 0
   287   000003                     ___lwdiv@dividend:
   288                           	callstack 0
   289   000003                     ___lwmod@dividend:
   290                           	callstack 0
   291                           
   292                           ; 2 bytes @ 0x2
   293   000003                     	ds	1
   294   000004                     ??_LeerByte:
   295   000004                     RetardoLCD@a:
   296                           	callstack 0
   297   000004                     ___lbdiv@dividend:
   298                           	callstack 0
   299   000004                     ___lbmod@dividend:
   300                           	callstack 0
   301                           
   302                           ; 1 bytes @ 0x3
   303   000004                     	ds	1
   304   000005                     ??_EnviaDato:
   305   000005                     LeerByte@res:
   306                           	callstack 0
   307   000005                     GuardarDatoEnEEPROM@dato:
   308                           	callstack 0
   309   000005                     ___lbdiv@counter:
   310                           	callstack 0
   311   000005                     ___lbmod@counter:
   312                           	callstack 0
   313   000005                     ___wmul@multiplicand:
   314                           	callstack 0
   315   000005                     ___awdiv@divisor:
   316                           	callstack 0
   317   000005                     ___lwdiv@divisor:
   318                           	callstack 0
   319   000005                     ___lwmod@divisor:
   320                           	callstack 0
   321                           
   322                           ; 2 bytes @ 0x4
   323   000005                     	ds	1
   324   000006                     EnviaDato@a:
   325                           	callstack 0
   326   000006                     LeerByte@i:
   327                           	callstack 0
   328   000006                     ___lbdiv@quotient:
   329                           	callstack 0
   330   000006                     ___lbmod@rem:
   331                           	callstack 0
   332                           
   333                           ; 1 bytes @ 0x5
   334   000006                     	ds	1
   335   000007                     ??_LeerHT11:
   336   000007                     EscribeLCD_c@a:
   337                           	callstack 0
   338   000007                     DireccionaLCD@a:
   339                           	callstack 0
   340   000007                     ___awdiv@counter:
   341                           	callstack 0
   342   000007                     ___lwmod@counter:
   343                           	callstack 0
   344   000007                     ___wmul@product:
   345                           	callstack 0
   346   000007                     ___lwdiv@quotient:
   347                           	callstack 0
   348                           
   349                           ; 2 bytes @ 0x6
   350   000007                     	ds	1
   351   000008                     MensajeLCD_Word@a:
   352                           	callstack 0
   353   000008                     ___awdiv@sign:
   354                           	callstack 0
   355                           
   356                           ; 1 bytes @ 0x7
   357   000008                     	ds	1
   358   000009                     ??_MensajeLCD_Word:
   359   000009                     ___lwdiv@counter:
   360                           	callstack 0
   361   000009                     ___awdiv@quotient:
   362                           	callstack 0
   363                           
   364                           ; 2 bytes @ 0x8
   365   000009                     	ds	1
   366   00000A                     MensajeLCD_Word@i:
   367                           	callstack 0
   368                           
   369                           ; 2 bytes @ 0x9
   370   00000A                     	ds	2
   371   00000C                     TransmitirDatos@Ent1:
   372                           	callstack 0
   373                           
   374                           ; 2 bytes @ 0xB
   375   00000C                     	ds	2
   376   00000E                     TransmitirDatos@Ent2:
   377                           	callstack 0
   378                           
   379                           ; 2 bytes @ 0xD
   380   00000E                     	ds	2
   381   000010                     ??_TransmitirDatos:
   382                           
   383                           ; 1 bytes @ 0xF
   384   000010                     	ds	2
   385   000012                     TransmitirDatos@n:
   386                           	callstack 0
   387                           
   388                           ; 2 bytes @ 0x11
   389   000012                     	ds	2
   390   000014                     TransmitirDatos@Simb:
   391                           	callstack 0
   392                           
   393                           ; 2 bytes @ 0x13
   394   000014                     	ds	2
   395   000016                     TransmitirDatos@TempC:
   396                           	callstack 0
   397                           
   398                           ; 2 bytes @ 0x15
   399   000016                     	ds	2
   400   000018                     ??_main:
   401                           
   402                           ; 1 bytes @ 0x17
   403   000018                     	ds	2
   404                           
   405 ;;
   406 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   407 ;;
   408 ;; *************** function _main *****************
   409 ;; Defined at:
   410 ;;		line 37 in file "Laboratorio5.c"
   411 ;; Parameters:    Size  Location     Type
   412 ;;		None
   413 ;; Auto vars:     Size  Location     Type
   414 ;;		None
   415 ;; Return value:  Size  Location     Type
   416 ;;                  1    wreg      void 
   417 ;; Registers used:
   418 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   419 ;; Tracked objects:
   420 ;;		On entry : 0/0
   421 ;;		On exit  : 0/0
   422 ;;		Unchanged: 0/0
   423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   424 ;;      Params:         0       0       0       0       0       0       0       0       0
   425 ;;      Locals:         0       0       0       0       0       0       0       0       0
   426 ;;      Temps:          2       0       0       0       0       0       0       0       0
   427 ;;      Totals:         2       0       0       0       0       0       0       0       0
   428 ;;Total ram usage:        2 bytes
   429 ;; Hardware stack levels required when called: 7
   430 ;; This function calls:
   431 ;;		_BorraLCD
   432 ;;		_ColorRGB
   433 ;;		_ConfiguraLCD
   434 ;;		_Conversion
   435 ;;		_DireccionaLCD
   436 ;;		_EscribeLCD_c
   437 ;;		_GuardarDatoEnEEPROM
   438 ;;		_InicializaLCD
   439 ;;		_LeerHT11
   440 ;;		_MensajeLCD_Word
   441 ;;		_TransmitirDatos
   442 ;;		___lbdiv
   443 ;;		___lbmod
   444 ;;		_leerDatoEnEEPROM
   445 ;; This function is called by:
   446 ;;		Startup code after reset
   447 ;; This function uses a non-reentrant model
   448 ;;
   449                           
   450                           	psect	text0
   451   000AB4                     __ptext0:
   452                           	callstack 0
   453   000AB4                     _main:
   454                           	callstack 24
   455                           
   456                           ;Laboratorio5.c: 40: OSCCON = 0b01110000;
   457                           
   458                           ;incstack = 0
   459   000AB4  0E70               	movlw	112
   460   000AB6  6ED3               	movwf	211,c	;volatile
   461                           
   462                           ;Laboratorio5.c: 41: _delay((unsigned long)((1)*(8000000/4000.0)));
   463   000AB8  0E03               	movlw	3
   464   000ABA  6E18               	movwf	??_main^0,c
   465   000ABC  0E98               	movlw	152
   466   000ABE                     u1077:
   467   000ABE  2EE8               	decfsz	wreg,f,c
   468   000AC0  D7FE               	bra	u1077
   469   000AC2  2E18               	decfsz	??_main^0,f,c
   470   000AC4  D7FC               	bra	u1077
   471                           
   472                           ;Laboratorio5.c: 43: TXSTA = 0b00100000;
   473   000AC6  0E20               	movlw	32
   474   000AC8  6EAC               	movwf	172,c	;volatile
   475                           
   476                           ;Laboratorio5.c: 44: RCSTA = 0b10010000;
   477   000ACA  0E90               	movlw	144
   478   000ACC  6EAB               	movwf	171,c	;volatile
   479                           
   480                           ;Laboratorio5.c: 45: BAUDCON = 0b00000000;
   481   000ACE  0E00               	movlw	0
   482   000AD0  6EB8               	movwf	184,c	;volatile
   483                           
   484                           ;Laboratorio5.c: 47: SPBRG = 12;
   485   000AD2  0E0C               	movlw	12
   486   000AD4  6EAF               	movwf	175,c	;volatile
   487                           
   488                           ;Laboratorio5.c: 49: ADCON0 = 0b00000001;
   489   000AD6  0E01               	movlw	1
   490   000AD8  6EC2               	movwf	194,c	;volatile
   491                           
   492                           ;Laboratorio5.c: 50: ADCON1 = 13;
   493   000ADA  0E0D               	movlw	13
   494   000ADC  6EC1               	movwf	193,c	;volatile
   495                           
   496                           ;Laboratorio5.c: 51: ADCON2 = 0b10001000;
   497   000ADE  0E88               	movlw	136
   498   000AE0  6EC0               	movwf	192,c	;volatile
   499                           
   500                           ;Laboratorio5.c: 54: TRISB = 0;
   501   000AE2  0E00               	movlw	0
   502   000AE4  6E93               	movwf	147,c	;volatile
   503                           
   504                           ;Laboratorio5.c: 55: TRISD = 0;
   505   000AE6  0E00               	movlw	0
   506   000AE8  6E95               	movwf	149,c	;volatile
   507                           
   508                           ;Laboratorio5.c: 56: TRISA = 0b00000001;
   509   000AEA  0E01               	movlw	1
   510   000AEC  6E92               	movwf	146,c	;volatile
   511                           
   512                           ;Laboratorio5.c: 57: USBEN = 0;
   513   000AEE  966D               	bcf	3949,3,c	;volatile
   514                           
   515                           ;Laboratorio5.c: 58: UTRDIS = 1;
   516   000AF0  866F               	bsf	3951,3,c	;volatile
   517                           
   518                           ;Laboratorio5.c: 59: TRISC = 0b11110110;
   519   000AF2  0EF6               	movlw	246
   520   000AF4  6E94               	movwf	148,c	;volatile
   521                           
   522                           ;Laboratorio5.c: 60: RBPU = 0;
   523   000AF6  9EF1               	bcf	4081,7,c	;volatile
   524                           
   525                           ;Laboratorio5.c: 61: LATC2 = 0;
   526   000AF8  948B               	bcf	3979,2,c	;volatile
   527                           
   528                           ;Laboratorio5.c: 62: TempEEPROM = leerDatoEnEEPROM(0);
   529   000AFA  0E00               	movlw	0
   530   000AFC  6E04               	movwf	(leerDatoEnEEPROM@dir+1)^0,c
   531   000AFE  0E00               	movlw	0
   532   000B00  6E03               	movwf	leerDatoEnEEPROM@dir^0,c
   533   000B02  EC45  F009         	call	_leerDatoEnEEPROM	;wreg free
   534   000B06  6E1E               	movwf	_TempEEPROM^0,c
   535                           
   536                           ;Laboratorio5.c: 64: ConfiguraLCD(4);
   537   000B08  0E04               	movlw	4
   538   000B0A  EC0F  F009         	call	_ConfiguraLCD
   539                           
   540                           ;Laboratorio5.c: 65: InicializaLCD();
   541   000B0E  ECBE  F006         	call	_InicializaLCD	;wreg free
   542                           
   543                           ;Laboratorio5.c: 68: T0CON=0b10000011;
   544   000B12  0E83               	movlw	131
   545   000B14  6ED5               	movwf	213,c	;volatile
   546                           
   547                           ;Laboratorio5.c: 69: TMR0IF=0;
   548   000B16  94F2               	bcf	4082,2,c	;volatile
   549                           
   550                           ;Laboratorio5.c: 70: TMR0=3036;
   551   000B18  0E0B               	movlw	11
   552   000B1A  6ED7               	movwf	215,c	;volatile
   553   000B1C  0EDC               	movlw	220
   554   000B1E  6ED6               	movwf	214,c	;volatile
   555                           
   556                           ;Laboratorio5.c: 71: TMR0IE=1;
   557   000B20  8AF2               	bsf	4082,5,c	;volatile
   558                           
   559                           ;Laboratorio5.c: 72: GIE=1;
   560   000B22  8EF2               	bsf	4082,7,c	;volatile
   561                           
   562                           ;Laboratorio5.c: 73: TMR0ON=1;
   563   000B24  8ED5               	bsf	4053,7,c	;volatile
   564                           
   565                           ;Laboratorio5.c: 76: BorraLCD();
   566   000B26  EC31  F009         	call	_BorraLCD	;wreg free
   567                           
   568                           ;Laboratorio5.c: 78: if (TempEEPROM != 0xFF) {
   569   000B2A  281E               	incf	_TempEEPROM^0,w,c
   570   000B2C  B4D8               	btfsc	status,2,c
   571   000B2E  D028               	goto	l2004
   572                           
   573                           ;Laboratorio5.c: 79: MensajeLCD_Word("Ultima temp:");
   574   000B30  0E01               	movlw	low STR_1
   575   000B32  6E08               	movwf	MensajeLCD_Word@a^0,c
   576   000B34  ECEF  F007         	call	_MensajeLCD_Word	;wreg free
   577                           
   578                           ;Laboratorio5.c: 80: DireccionaLCD(192);
   579   000B38  0EC0               	movlw	192
   580   000B3A  EC26  F009         	call	_DireccionaLCD
   581                           
   582                           ;Laboratorio5.c: 81: EscribeLCD_c(TempEEPROM / 10 + 48);
   583   000B3E  0E0A               	movlw	10
   584   000B40  6E03               	movwf	___lbdiv@divisor^0,c
   585   000B42  501E               	movf	_TempEEPROM^0,w,c
   586   000B44  EC78  F008         	call	___lbdiv
   587   000B48  0F30               	addlw	48
   588   000B4A  EC1B  F009         	call	_EscribeLCD_c
   589                           
   590                           ;Laboratorio5.c: 82: EscribeLCD_c(TempEEPROM % 10 + 48);
   591   000B4E  0E0A               	movlw	10
   592   000B50  6E03               	movwf	___lbmod@divisor^0,c
   593   000B52  501E               	movf	_TempEEPROM^0,w,c
   594   000B54  ECC3  F008         	call	___lbmod
   595   000B58  0F30               	addlw	48
   596   000B5A  EC1B  F009         	call	_EscribeLCD_c
   597                           
   598                           ;Laboratorio5.c: 83: EscribeLCD_c('C');
   599   000B5E  0E43               	movlw	67
   600   000B60  EC1B  F009         	call	_EscribeLCD_c
   601                           
   602                           ;Laboratorio5.c: 84: _delay((unsigned long)((2000)*(8000000/4000.0)));
   603   000B64  0E15               	movlw	21
   604   000B66  6E19               	movwf	(??_main+1)^0,c
   605   000B68  0E4B               	movlw	75
   606   000B6A  6E18               	movwf	??_main^0,c
   607   000B6C  0EBE               	movlw	190
   608   000B6E                     u1087:
   609   000B6E  2EE8               	decfsz	wreg,f,c
   610   000B70  D7FE               	bra	u1087
   611   000B72  2E18               	decfsz	??_main^0,f,c
   612   000B74  D7FC               	bra	u1087
   613   000B76  2E19               	decfsz	(??_main+1)^0,f,c
   614   000B78  D7FA               	bra	u1087
   615   000B7A  D000               	nop2	
   616                           
   617                           ;Laboratorio5.c: 85: BorraLCD();
   618   000B7C  EC31  F009         	call	_BorraLCD	;wreg free
   619   000B80                     l2004:
   620                           
   621                           ;Laboratorio5.c: 86: };Laboratorio5.c: 88: MensajeLCD_Word("Iniciando");
   622   000B80  0E0E               	movlw	low STR_2
   623   000B82  6E08               	movwf	MensajeLCD_Word@a^0,c
   624   000B84  ECEF  F007         	call	_MensajeLCD_Word	;wreg free
   625                           
   626                           ;Laboratorio5.c: 89: _delay((unsigned long)((500)*(8000000/4000.0)));
   627   000B88  0E06               	movlw	6
   628   000B8A  6E19               	movwf	(??_main+1)^0,c
   629   000B8C  0E13               	movlw	19
   630   000B8E  6E18               	movwf	??_main^0,c
   631   000B90  0EAE               	movlw	174
   632   000B92                     u1097:
   633   000B92  2EE8               	decfsz	wreg,f,c
   634   000B94  D7FE               	bra	u1097
   635   000B96  2E18               	decfsz	??_main^0,f,c
   636   000B98  D7FC               	bra	u1097
   637   000B9A  2E19               	decfsz	(??_main+1)^0,f,c
   638   000B9C  D7FA               	bra	u1097
   639                           
   640                           ;Laboratorio5.c: 90: EscribeLCD_c(46);
   641   000B9E  0E2E               	movlw	46
   642   000BA0  EC1B  F009         	call	_EscribeLCD_c
   643                           
   644                           ;Laboratorio5.c: 91: _delay((unsigned long)((500)*(8000000/4000.0)));
   645   000BA4  0E06               	movlw	6
   646   000BA6  6E19               	movwf	(??_main+1)^0,c
   647   000BA8  0E13               	movlw	19
   648   000BAA  6E18               	movwf	??_main^0,c
   649   000BAC  0EAE               	movlw	174
   650   000BAE                     u1107:
   651   000BAE  2EE8               	decfsz	wreg,f,c
   652   000BB0  D7FE               	bra	u1107
   653   000BB2  2E18               	decfsz	??_main^0,f,c
   654   000BB4  D7FC               	bra	u1107
   655   000BB6  2E19               	decfsz	(??_main+1)^0,f,c
   656   000BB8  D7FA               	bra	u1107
   657                           
   658                           ;Laboratorio5.c: 92: EscribeLCD_c(46);
   659   000BBA  0E2E               	movlw	46
   660   000BBC  EC1B  F009         	call	_EscribeLCD_c
   661                           
   662                           ;Laboratorio5.c: 93: _delay((unsigned long)((500)*(8000000/4000.0)));
   663   000BC0  0E06               	movlw	6
   664   000BC2  6E19               	movwf	(??_main+1)^0,c
   665   000BC4  0E13               	movlw	19
   666   000BC6  6E18               	movwf	??_main^0,c
   667   000BC8  0EAE               	movlw	174
   668   000BCA                     u1117:
   669   000BCA  2EE8               	decfsz	wreg,f,c
   670   000BCC  D7FE               	bra	u1117
   671   000BCE  2E18               	decfsz	??_main^0,f,c
   672   000BD0  D7FC               	bra	u1117
   673   000BD2  2E19               	decfsz	(??_main+1)^0,f,c
   674   000BD4  D7FA               	bra	u1117
   675                           
   676                           ;Laboratorio5.c: 94: EscribeLCD_c(46);
   677   000BD6  0E2E               	movlw	46
   678   000BD8  EC1B  F009         	call	_EscribeLCD_c
   679                           
   680                           ;Laboratorio5.c: 95: _delay((unsigned long)((500)*(8000000/4000.0)));
   681   000BDC  0E06               	movlw	6
   682   000BDE  6E19               	movwf	(??_main+1)^0,c
   683   000BE0  0E13               	movlw	19
   684   000BE2  6E18               	movwf	??_main^0,c
   685   000BE4  0EAE               	movlw	174
   686   000BE6                     u1127:
   687   000BE6  2EE8               	decfsz	wreg,f,c
   688   000BE8  D7FE               	bra	u1127
   689   000BEA  2E18               	decfsz	??_main^0,f,c
   690   000BEC  D7FC               	bra	u1127
   691   000BEE  2E19               	decfsz	(??_main+1)^0,f,c
   692   000BF0  D7FA               	bra	u1127
   693                           
   694                           ;Laboratorio5.c: 96: BorraLCD();
   695   000BF2  EC31  F009         	call	_BorraLCD	;wreg free
   696   000BF6                     l2016:
   697                           
   698                           ;Laboratorio5.c: 100: _delay((unsigned long)((500)*(8000000/4000.0)));
   699   000BF6  0E06               	movlw	6
   700   000BF8  6E19               	movwf	(??_main+1)^0,c
   701   000BFA  0E13               	movlw	19
   702   000BFC  6E18               	movwf	??_main^0,c
   703   000BFE  0EAE               	movlw	174
   704   000C00                     u1137:
   705   000C00  2EE8               	decfsz	wreg,f,c
   706   000C02  D7FE               	bra	u1137
   707   000C04  2E18               	decfsz	??_main^0,f,c
   708   000C06  D7FC               	bra	u1137
   709   000C08  2E19               	decfsz	(??_main+1)^0,f,c
   710   000C0A  D7FA               	bra	u1137
   711                           
   712                           ;Laboratorio5.c: 102: _delay((unsigned long)((500)*(8000000/4000.0)));
   713   000C0C  0E06               	movlw	6
   714   000C0E  6E19               	movwf	(??_main+1)^0,c
   715   000C10  0E13               	movlw	19
   716   000C12  6E18               	movwf	??_main^0,c
   717   000C14  0EAE               	movlw	174
   718   000C16                     u1147:
   719   000C16  2EE8               	decfsz	wreg,f,c
   720   000C18  D7FE               	bra	u1147
   721   000C1A  2E18               	decfsz	??_main^0,f,c
   722   000C1C  D7FC               	bra	u1147
   723   000C1E  2E19               	decfsz	(??_main+1)^0,f,c
   724   000C20  D7FA               	bra	u1147
   725                           
   726                           ;Laboratorio5.c: 104: LeerHT11();
   727   000C22  EC5A  F008         	call	_LeerHT11	;wreg free
   728                           
   729                           ;Laboratorio5.c: 106: GuardarDatoEnEEPROM(0, Temp);
   730   000C26  0E00               	movlw	0
   731   000C28  6E04               	movwf	(GuardarDatoEnEEPROM@dir+1)^0,c
   732   000C2A  0E00               	movlw	0
   733   000C2C  6E03               	movwf	GuardarDatoEnEEPROM@dir^0,c
   734   000C2E  C021  F005         	movff	_Temp,GuardarDatoEnEEPROM@dato
   735   000C32  ECEB  F008         	call	_GuardarDatoEnEEPROM	;wreg free
   736                           
   737                           ;Laboratorio5.c: 107: ColorRGB(Temp);
   738   000C36  C021  F003         	movff	_Temp,ColorRGB@val
   739   000C3A  6A04               	clrf	(ColorRGB@val+1)^0,c
   740   000C3C  EC4A  F006         	call	_ColorRGB	;wreg free
   741                           
   742                           ;Laboratorio5.c: 110: if(!RC1) TransmitirDatos(RC4, RC5);
   743   000C40  B282               	btfsc	3970,1,c	;volatile
   744   000C42  D011               	goto	l2028
   745   000C44  A882               	btfss	3970,4,c	;volatile
   746   000C46  D002               	goto	u1010
   747   000C48  0E01               	movlw	1
   748   000C4A  D001               	goto	u1020
   749   000C4C                     u1010:
   750   000C4C  0E00               	movlw	0
   751   000C4E                     u1020:
   752   000C4E  6E0C               	movwf	TransmitirDatos@Ent1^0,c
   753   000C50  6A0D               	clrf	(TransmitirDatos@Ent1+1)^0,c
   754   000C52  AA82               	btfss	3970,5,c	;volatile
   755   000C54  D002               	goto	u1030
   756   000C56  0E01               	movlw	1
   757   000C58  D001               	goto	u1040
   758   000C5A                     u1030:
   759   000C5A  0E00               	movlw	0
   760   000C5C                     u1040:
   761   000C5C  6E0E               	movwf	TransmitirDatos@Ent2^0,c
   762   000C5E  6A0F               	clrf	(TransmitirDatos@Ent2+1)^0,c
   763   000C60  EC12  F004         	call	_TransmitirDatos	;wreg free
   764   000C64  D00A               	goto	l2030
   765   000C66                     l2028:
   766                           
   767                           ;Laboratorio5.c: 111: else TransmitirDatos(A, B);
   768   000C66  C01C  F00C         	movff	_A,TransmitirDatos@Ent1
   769   000C6A  C01D  F00D         	movff	_A+1,TransmitirDatos@Ent1+1
   770   000C6E  C01A  F00E         	movff	_B,TransmitirDatos@Ent2
   771   000C72  C01B  F00F         	movff	_B+1,TransmitirDatos@Ent2+1
   772   000C76  EC12  F004         	call	_TransmitirDatos	;wreg free
   773   000C7A                     l2030:
   774                           
   775                           ;Laboratorio5.c: 112: Conversion(0);
   776   000C7A  0E00               	movlw	0
   777   000C7C  EC3B  F009         	call	_Conversion
   778                           
   779                           ;Laboratorio5.c: 113: RB0 = (ADRES <= 511) ? 0 : 1;
   780   000C80  0E00               	movlw	0
   781   000C82  5CC3               	subwf	195,w,c	;volatile
   782   000C84  0E02               	movlw	2
   783   000C86  58C4               	subwfb	196,w,c	;volatile
   784   000C88  A0D8               	btfss	status,0,c
   785   000C8A  D002               	goto	u1050
   786   000C8C  8081               	bsf	3969,0,c	;volatile
   787   000C8E  D7B3               	goto	l2016
   788   000C90                     u1050:
   789   000C90  9081               	bcf	3969,0,c	;volatile
   790   000C92  D7B1               	goto	l2016
   791   000C94                     __end_of_main:
   792                           	callstack 0
   793                           
   794 ;; *************** function _leerDatoEnEEPROM *****************
   795 ;; Defined at:
   796 ;;		line 307 in file "Laboratorio5.c"
   797 ;; Parameters:    Size  Location     Type
   798 ;;  dir             2    2[COMRAM] unsigned int 
   799 ;; Auto vars:     Size  Location     Type
   800 ;;		None
   801 ;; Return value:  Size  Location     Type
   802 ;;                  1    wreg      unsigned char 
   803 ;; Registers used:
   804 ;;		wreg, status,2
   805 ;; Tracked objects:
   806 ;;		On entry : 0/0
   807 ;;		On exit  : 0/0
   808 ;;		Unchanged: 0/0
   809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   810 ;;      Params:         2       0       0       0       0       0       0       0       0
   811 ;;      Locals:         0       0       0       0       0       0       0       0       0
   812 ;;      Temps:          0       0       0       0       0       0       0       0       0
   813 ;;      Totals:         2       0       0       0       0       0       0       0       0
   814 ;;Total ram usage:        2 bytes
   815 ;; Hardware stack levels used: 1
   816 ;; Hardware stack levels required when called: 2
   817 ;; This function calls:
   818 ;;		Nothing
   819 ;; This function is called by:
   820 ;;		_main
   821 ;; This function uses a non-reentrant model
   822 ;;
   823                           
   824                           	psect	text1
   825   00128A                     __ptext1:
   826                           	callstack 0
   827   00128A                     _leerDatoEnEEPROM:
   828                           	callstack 28
   829                           
   830                           ;Laboratorio5.c: 308: EEADR = dir;
   831                           
   832                           ;incstack = 0
   833   00128A  C003  FFA9         	movff	leerDatoEnEEPROM@dir,4009	;volatile
   834                           
   835                           ;Laboratorio5.c: 309: EEPGD = 0;
   836   00128E  9EA6               	bcf	4006,7,c	;volsfr
   837                           
   838                           ;Laboratorio5.c: 310: CFGS = 0;
   839   001290  9CA6               	bcf	4006,6,c	;volsfr
   840                           
   841                           ;Laboratorio5.c: 311: RD = 1;
   842   001292  80A6               	bsf	4006,0,c	;volsfr
   843                           
   844                           ;Laboratorio5.c: 313: return EEDATA;
   845   001294  50A8               	movf	168,w,c	;volatile
   846   001296  0012               	return		;funcret
   847   001298                     __end_of_leerDatoEnEEPROM:
   848                           	callstack 0
   849                           
   850 ;; *************** function _TransmitirDatos *****************
   851 ;; Defined at:
   852 ;;		line 174 in file "Laboratorio5.c"
   853 ;; Parameters:    Size  Location     Type
   854 ;;  Ent1            2   11[COMRAM] unsigned int 
   855 ;;  Ent2            2   13[COMRAM] unsigned int 
   856 ;; Auto vars:     Size  Location     Type
   857 ;;  TempC           2   21[COMRAM] unsigned int 
   858 ;;  Simb            2   19[COMRAM] unsigned int 
   859 ;;  n               2   17[COMRAM] unsigned int 
   860 ;;  HumC            2    0        unsigned int 
   861 ;; Return value:  Size  Location     Type
   862 ;;                  1    wreg      void 
   863 ;; Registers used:
   864 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   865 ;; Tracked objects:
   866 ;;		On entry : 0/0
   867 ;;		On exit  : 0/0
   868 ;;		Unchanged: 0/0
   869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   870 ;;      Params:         4       0       0       0       0       0       0       0       0
   871 ;;      Locals:         6       0       0       0       0       0       0       0       0
   872 ;;      Temps:          2       0       0       0       0       0       0       0       0
   873 ;;      Totals:        12       0       0       0       0       0       0       0       0
   874 ;;Total ram usage:       12 bytes
   875 ;; Hardware stack levels used: 1
   876 ;; Hardware stack levels required when called: 6
   877 ;; This function calls:
   878 ;;		_BorraLCD
   879 ;;		_DireccionaLCD
   880 ;;		_EscribeLCD_c
   881 ;;		_MensajeLCD_Word
   882 ;;		_Transmitir
   883 ;;		___awdiv
   884 ;;		___lbdiv
   885 ;;		___lbmod
   886 ;;		___lwdiv
   887 ;;		___lwmod
   888 ;;		___wmul
   889 ;; This function is called by:
   890 ;;		_main
   891 ;; This function uses a non-reentrant model
   892 ;;
   893                           
   894                           	psect	text2
   895   000824                     __ptext2:
   896                           	callstack 0
   897   000824                     _TransmitirDatos:
   898                           	callstack 24
   899                           
   900                           ;Laboratorio5.c: 175: unsigned int n = Ent1 * 10 + Ent2, TempC = Temp, HumC = Hum;
   901                           
   902                           ;incstack = 0
   903   000824  C00C  F003         	movff	TransmitirDatos@Ent1,___wmul@multiplier
   904   000828  C00D  F004         	movff	TransmitirDatos@Ent1+1,___wmul@multiplier+1
   905   00082C  0E00               	movlw	0
   906   00082E  6E06               	movwf	(___wmul@multiplicand+1)^0,c
   907   000830  0E0A               	movlw	10
   908   000832  6E05               	movwf	___wmul@multiplicand^0,c
   909   000834  ECD8  F008         	call	___wmul	;wreg free
   910   000838  500E               	movf	TransmitirDatos@Ent2^0,w,c
   911   00083A  2403               	addwf	?___wmul^0,w,c
   912   00083C  6E12               	movwf	TransmitirDatos@n^0,c
   913   00083E  500F               	movf	(TransmitirDatos@Ent2+1)^0,w,c
   914   000840  2004               	addwfc	(?___wmul+1)^0,w,c
   915   000842  6E13               	movwf	(TransmitirDatos@n+1)^0,c
   916   000844  C021  F016         	movff	_Temp,TransmitirDatos@TempC
   917   000848  6A17               	clrf	(TransmitirDatos@TempC+1)^0,c
   918                           
   919                           ;Laboratorio5.c: 176: unsigned int Simb = 67;
   920   00084A  0E00               	movlw	0
   921   00084C  6E15               	movwf	(TransmitirDatos@Simb+1)^0,c
   922   00084E  0E43               	movlw	67
   923   000850  6E14               	movwf	TransmitirDatos@Simb^0,c
   924                           
   925                           ;Laboratorio5.c: 177: BorraLCD();
   926   000852  EC31  F009         	call	_BorraLCD	;wreg free
   927                           
   928                           ;Laboratorio5.c: 178: switch (n) {
   929   000856  D03E               	goto	l1874
   930   000858                     l253:
   931                           
   932                           ;Laboratorio5.c: 180: TempC = Temp;
   933   000858  C021  F016         	movff	_Temp,TransmitirDatos@TempC
   934   00085C  6A17               	clrf	(TransmitirDatos@TempC+1)^0,c
   935                           
   936                           ;Laboratorio5.c: 181: Simb = 67;
   937   00085E  0E00               	movlw	0
   938   000860  6E15               	movwf	(TransmitirDatos@Simb+1)^0,c
   939   000862  0E43               	movlw	67
   940   000864  D035               	goto	L3
   941   000866                     l1860:
   942                           
   943                           ;Laboratorio5.c: 184: TempC = Temp + 273;
   944   000866  0E11               	movlw	17
   945   000868  2421               	addwf	_Temp^0,w,c
   946   00086A  6E16               	movwf	TransmitirDatos@TempC^0,c
   947   00086C  6A17               	clrf	(TransmitirDatos@TempC+1)^0,c
   948   00086E  0E01               	movlw	1
   949   000870  2217               	addwfc	(TransmitirDatos@TempC+1)^0,f,c
   950                           
   951                           ;Laboratorio5.c: 185: Simb = 75;
   952   000872  0E00               	movlw	0
   953   000874  6E15               	movwf	(TransmitirDatos@Simb+1)^0,c
   954   000876  0E4B               	movlw	75
   955   000878  D02B               	goto	L3
   956   00087A                     l1864:
   957                           
   958                           ;Laboratorio5.c: 188: TempC = Temp * 9 / 5 + 492;
   959   00087A  5021               	movf	_Temp^0,w,c
   960   00087C  0D09               	mullw	9
   961   00087E  CFF3 F003          	movff	prodl,___awdiv@dividend
   962   000882  CFF4 F004          	movff	prodh,___awdiv@dividend+1
   963   000886  0E00               	movlw	0
   964   000888  6E06               	movwf	(___awdiv@divisor+1)^0,c
   965   00088A  0E05               	movlw	5
   966   00088C  6E05               	movwf	___awdiv@divisor^0,c
   967   00088E  EC51  F007         	call	___awdiv	;wreg free
   968   000892  0EEC               	movlw	236
   969   000894  2403               	addwf	?___awdiv^0,w,c
   970   000896  6E16               	movwf	TransmitirDatos@TempC^0,c
   971   000898  0E01               	movlw	1
   972   00089A  2004               	addwfc	(?___awdiv+1)^0,w,c
   973   00089C  6E17               	movwf	(TransmitirDatos@TempC+1)^0,c
   974                           
   975                           ;Laboratorio5.c: 189: Simb = 82;
   976   00089E  0E00               	movlw	0
   977   0008A0  6E15               	movwf	(TransmitirDatos@Simb+1)^0,c
   978   0008A2  0E52               	movlw	82
   979   0008A4  D015               	goto	L3
   980   0008A6                     l1868:
   981                           
   982                           ;Laboratorio5.c: 192: TempC = Temp * 9 / 5 + 32;
   983   0008A6  5021               	movf	_Temp^0,w,c
   984   0008A8  0D09               	mullw	9
   985   0008AA  CFF3 F003          	movff	prodl,___awdiv@dividend
   986   0008AE  CFF4 F004          	movff	prodh,___awdiv@dividend+1
   987   0008B2  0E00               	movlw	0
   988   0008B4  6E06               	movwf	(___awdiv@divisor+1)^0,c
   989   0008B6  0E05               	movlw	5
   990   0008B8  6E05               	movwf	___awdiv@divisor^0,c
   991   0008BA  EC51  F007         	call	___awdiv	;wreg free
   992   0008BE  0E20               	movlw	32
   993   0008C0  2403               	addwf	?___awdiv^0,w,c
   994   0008C2  6E16               	movwf	TransmitirDatos@TempC^0,c
   995   0008C4  0E00               	movlw	0
   996   0008C6  2004               	addwfc	(?___awdiv+1)^0,w,c
   997   0008C8  6E17               	movwf	(TransmitirDatos@TempC+1)^0,c
   998                           
   999                           ;Laboratorio5.c: 193: Simb = 70;
  1000   0008CA  0E00               	movlw	0
  1001   0008CC  6E15               	movwf	(TransmitirDatos@Simb+1)^0,c
  1002   0008CE  0E46               	movlw	70
  1003   0008D0                     L3:
  1004   0008D0  6E14               	movwf	TransmitirDatos@Simb^0,c
  1005                           
  1006                           ;Laboratorio5.c: 194: break;
  1007   0008D2  D015               	goto	l1876
  1008   0008D4                     l1874:
  1009   0008D4  C012  F010         	movff	TransmitirDatos@n,??_TransmitirDatos
  1010   0008D8  C013  F011         	movff	TransmitirDatos@n+1,??_TransmitirDatos+1
  1011                           
  1012                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1013                           ; Switch size 1, requested type "simple"
  1014                           ; Number of cases is 1, Range of values is 0 to 0
  1015                           ; switch strategies available:
  1016                           ; Name         Instructions Cycles
  1017                           ; simple_byte            4     3 (average)
  1018                           ;	Chosen strategy is simple_byte
  1019   0008DC  5011               	movf	(??_TransmitirDatos+1)^0,w,c
  1020   0008DE  0A00               	xorlw	0	; case 0
  1021   0008E0  A4D8               	btfss	status,2,c
  1022   0008E2  D00D               	goto	l1876
  1023                           
  1024                           ; Switch size 1, requested type "simple"
  1025                           ; Number of cases is 4, Range of values is 0 to 11
  1026                           ; switch strategies available:
  1027                           ; Name         Instructions Cycles
  1028                           ; simple_byte           13     7 (average)
  1029                           ;	Chosen strategy is simple_byte
  1030   0008E4  5010               	movf	??_TransmitirDatos^0,w,c
  1031   0008E6  0A00               	xorlw	0	; case 0
  1032   0008E8  B4D8               	btfsc	status,2,c
  1033   0008EA  D7B6               	goto	l253
  1034   0008EC  0A01               	xorlw	1	; case 1
  1035   0008EE  B4D8               	btfsc	status,2,c
  1036   0008F0  D7BA               	goto	l1860
  1037   0008F2  0A0B               	xorlw	11	; case 10
  1038   0008F4  B4D8               	btfsc	status,2,c
  1039   0008F6  D7C1               	goto	l1864
  1040   0008F8  0A01               	xorlw	1	; case 11
  1041   0008FA  B4D8               	btfsc	status,2,c
  1042   0008FC  D7D4               	goto	l1868
  1043   0008FE                     l1876:
  1044                           
  1045                           ;Laboratorio5.c: 196: Transmitir('T');
  1046   0008FE  0E54               	movlw	84
  1047   000900  EC53  F009         	call	_Transmitir
  1048                           
  1049                           ;Laboratorio5.c: 197: Transmitir('e');
  1050   000904  0E65               	movlw	101
  1051   000906  EC53  F009         	call	_Transmitir
  1052                           
  1053                           ;Laboratorio5.c: 198: Transmitir('m');
  1054   00090A  0E6D               	movlw	109
  1055   00090C  EC53  F009         	call	_Transmitir
  1056                           
  1057                           ;Laboratorio5.c: 199: Transmitir('p');
  1058   000910  0E70               	movlw	112
  1059   000912  EC53  F009         	call	_Transmitir
  1060                           
  1061                           ;Laboratorio5.c: 200: Transmitir(':');
  1062   000916  0E3A               	movlw	58
  1063   000918  EC53  F009         	call	_Transmitir
  1064                           
  1065                           ;Laboratorio5.c: 201: Transmitir(' ');
  1066   00091C  0E20               	movlw	32
  1067   00091E  EC53  F009         	call	_Transmitir
  1068                           
  1069                           ;Laboratorio5.c: 203: MensajeLCD_Word("Temp:");
  1070   000922  0E18               	movlw	low STR_3
  1071   000924  6E08               	movwf	MensajeLCD_Word@a^0,c
  1072   000926  ECEF  F007         	call	_MensajeLCD_Word	;wreg free
  1073                           
  1074                           ;Laboratorio5.c: 204: if (TempC / 100 > 0) {
  1075   00092A  C016  F003         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1076   00092E  C017  F004         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1077   000932  0E00               	movlw	0
  1078   000934  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1079   000936  0E64               	movlw	100
  1080   000938  6E05               	movwf	___lwdiv@divisor^0,c
  1081   00093A  ECC6  F007         	call	___lwdiv	;wreg free
  1082   00093E  5003               	movf	?___lwdiv^0,w,c
  1083   000940  1004               	iorwf	(?___lwdiv+1)^0,w,c
  1084   000942  B4D8               	btfsc	status,2,c
  1085   000944  D02A               	goto	l258
  1086                           
  1087                           ;Laboratorio5.c: 205: Transmitir(TempC / 100 + 48);
  1088   000946  C016  F003         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1089   00094A  C017  F004         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1090   00094E  0E00               	movlw	0
  1091   000950  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1092   000952  0E64               	movlw	100
  1093   000954  6E05               	movwf	___lwdiv@divisor^0,c
  1094   000956  ECC6  F007         	call	___lwdiv	;wreg free
  1095   00095A  5003               	movf	?___lwdiv^0,w,c
  1096   00095C  0F30               	addlw	48
  1097   00095E  EC53  F009         	call	_Transmitir
  1098                           
  1099                           ;Laboratorio5.c: 206: EscribeLCD_c(TempC / 100 + 48);
  1100   000962  C016  F003         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1101   000966  C017  F004         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1102   00096A  0E00               	movlw	0
  1103   00096C  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1104   00096E  0E64               	movlw	100
  1105   000970  6E05               	movwf	___lwdiv@divisor^0,c
  1106   000972  ECC6  F007         	call	___lwdiv	;wreg free
  1107   000976  5003               	movf	?___lwdiv^0,w,c
  1108   000978  0F30               	addlw	48
  1109   00097A  EC1B  F009         	call	_EscribeLCD_c
  1110                           
  1111                           ;Laboratorio5.c: 207: TempC = TempC % 100;
  1112   00097E  C016  F003         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1113   000982  C017  F004         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1114   000986  0E00               	movlw	0
  1115   000988  6E06               	movwf	(___lwmod@divisor+1)^0,c
  1116   00098A  0E64               	movlw	100
  1117   00098C  6E05               	movwf	___lwmod@divisor^0,c
  1118   00098E  EC39  F008         	call	___lwmod	;wreg free
  1119   000992  C003  F016         	movff	?___lwmod,TransmitirDatos@TempC
  1120   000996  C004  F017         	movff	?___lwmod+1,TransmitirDatos@TempC+1
  1121   00099A                     l258:
  1122                           
  1123                           ;Laboratorio5.c: 208: };Laboratorio5.c: 209: Transmitir(TempC / 10 + 48);
  1124   00099A  C016  F003         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1125   00099E  C017  F004         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1126   0009A2  0E00               	movlw	0
  1127   0009A4  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1128   0009A6  0E0A               	movlw	10
  1129   0009A8  6E05               	movwf	___lwdiv@divisor^0,c
  1130   0009AA  ECC6  F007         	call	___lwdiv	;wreg free
  1131   0009AE  5003               	movf	?___lwdiv^0,w,c
  1132   0009B0  0F30               	addlw	48
  1133   0009B2  EC53  F009         	call	_Transmitir
  1134                           
  1135                           ;Laboratorio5.c: 210: Transmitir(TempC % 10 + 48);
  1136   0009B6  C016  F003         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1137   0009BA  C017  F004         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1138   0009BE  0E00               	movlw	0
  1139   0009C0  6E06               	movwf	(___lwmod@divisor+1)^0,c
  1140   0009C2  0E0A               	movlw	10
  1141   0009C4  6E05               	movwf	___lwmod@divisor^0,c
  1142   0009C6  EC39  F008         	call	___lwmod	;wreg free
  1143   0009CA  5003               	movf	?___lwmod^0,w,c
  1144   0009CC  0F30               	addlw	48
  1145   0009CE  EC53  F009         	call	_Transmitir
  1146                           
  1147                           ;Laboratorio5.c: 211: Transmitir(167);
  1148   0009D2  0EA7               	movlw	167
  1149   0009D4  EC53  F009         	call	_Transmitir
  1150                           
  1151                           ;Laboratorio5.c: 212: Transmitir(Simb);
  1152   0009D8  5014               	movf	TransmitirDatos@Simb^0,w,c
  1153   0009DA  EC53  F009         	call	_Transmitir
  1154                           
  1155                           ;Laboratorio5.c: 213: Transmitir(' ');
  1156   0009DE  0E20               	movlw	32
  1157   0009E0  EC53  F009         	call	_Transmitir
  1158                           
  1159                           ;Laboratorio5.c: 214: Transmitir('\n');
  1160   0009E4  0E0A               	movlw	10
  1161   0009E6  EC53  F009         	call	_Transmitir
  1162                           
  1163                           ;Laboratorio5.c: 215: Transmitir('H');
  1164   0009EA  0E48               	movlw	72
  1165   0009EC  EC53  F009         	call	_Transmitir
  1166                           
  1167                           ;Laboratorio5.c: 216: Transmitir('u');
  1168   0009F0  0E75               	movlw	117
  1169   0009F2  EC53  F009         	call	_Transmitir
  1170                           
  1171                           ;Laboratorio5.c: 217: Transmitir('m');
  1172   0009F6  0E6D               	movlw	109
  1173   0009F8  EC53  F009         	call	_Transmitir
  1174                           
  1175                           ;Laboratorio5.c: 218: Transmitir(':');
  1176   0009FC  0E3A               	movlw	58
  1177   0009FE  EC53  F009         	call	_Transmitir
  1178                           
  1179                           ;Laboratorio5.c: 219: Transmitir(' ');
  1180   000A02  0E20               	movlw	32
  1181   000A04  EC53  F009         	call	_Transmitir
  1182                           
  1183                           ;Laboratorio5.c: 220: Transmitir(Hum / 10 + 48);
  1184   000A08  0E0A               	movlw	10
  1185   000A0A  6E03               	movwf	___lbdiv@divisor^0,c
  1186   000A0C  5020               	movf	_Hum^0,w,c
  1187   000A0E  EC78  F008         	call	___lbdiv
  1188   000A12  0F30               	addlw	48
  1189   000A14  EC53  F009         	call	_Transmitir
  1190                           
  1191                           ;Laboratorio5.c: 221: Transmitir(Hum % 10 + 48);
  1192   000A18  0E0A               	movlw	10
  1193   000A1A  6E03               	movwf	___lbmod@divisor^0,c
  1194   000A1C  5020               	movf	_Hum^0,w,c
  1195   000A1E  ECC3  F008         	call	___lbmod
  1196   000A22  0F30               	addlw	48
  1197   000A24  EC53  F009         	call	_Transmitir
  1198                           
  1199                           ;Laboratorio5.c: 222: Transmitir(' ');
  1200   000A28  0E20               	movlw	32
  1201   000A2A  EC53  F009         	call	_Transmitir
  1202                           
  1203                           ;Laboratorio5.c: 223: Transmitir('%');
  1204   000A2E  0E25               	movlw	37
  1205   000A30  EC53  F009         	call	_Transmitir
  1206                           
  1207                           ;Laboratorio5.c: 224: Transmitir('\n');
  1208   000A34  0E0A               	movlw	10
  1209   000A36  EC53  F009         	call	_Transmitir
  1210                           
  1211                           ;Laboratorio5.c: 225: Transmitir(' ');
  1212   000A3A  0E20               	movlw	32
  1213   000A3C  EC53  F009         	call	_Transmitir
  1214                           
  1215                           ;Laboratorio5.c: 233: EscribeLCD_c(TempC / 10 + 48);
  1216   000A40  C016  F003         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1217   000A44  C017  F004         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1218   000A48  0E00               	movlw	0
  1219   000A4A  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1220   000A4C  0E0A               	movlw	10
  1221   000A4E  6E05               	movwf	___lwdiv@divisor^0,c
  1222   000A50  ECC6  F007         	call	___lwdiv	;wreg free
  1223   000A54  5003               	movf	?___lwdiv^0,w,c
  1224   000A56  0F30               	addlw	48
  1225   000A58  EC1B  F009         	call	_EscribeLCD_c
  1226                           
  1227                           ;Laboratorio5.c: 234: EscribeLCD_c(TempC % 10 + 48);
  1228   000A5C  C016  F003         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1229   000A60  C017  F004         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1230   000A64  0E00               	movlw	0
  1231   000A66  6E06               	movwf	(___lwmod@divisor+1)^0,c
  1232   000A68  0E0A               	movlw	10
  1233   000A6A  6E05               	movwf	___lwmod@divisor^0,c
  1234   000A6C  EC39  F008         	call	___lwmod	;wreg free
  1235   000A70  5003               	movf	?___lwmod^0,w,c
  1236   000A72  0F30               	addlw	48
  1237   000A74  EC1B  F009         	call	_EscribeLCD_c
  1238                           
  1239                           ;Laboratorio5.c: 235: EscribeLCD_c(Simb);
  1240   000A78  5014               	movf	TransmitirDatos@Simb^0,w,c
  1241   000A7A  EC1B  F009         	call	_EscribeLCD_c
  1242                           
  1243                           ;Laboratorio5.c: 236: DireccionaLCD(192);
  1244   000A7E  0EC0               	movlw	192
  1245   000A80  EC26  F009         	call	_DireccionaLCD
  1246                           
  1247                           ;Laboratorio5.c: 237: MensajeLCD_Word("Hum:");
  1248   000A84  0E1E               	movlw	low STR_4
  1249   000A86  6E08               	movwf	MensajeLCD_Word@a^0,c
  1250   000A88  ECEF  F007         	call	_MensajeLCD_Word	;wreg free
  1251                           
  1252                           ;Laboratorio5.c: 238: EscribeLCD_c(Hum / 10 + 48);
  1253   000A8C  0E0A               	movlw	10
  1254   000A8E  6E03               	movwf	___lbdiv@divisor^0,c
  1255   000A90  5020               	movf	_Hum^0,w,c
  1256   000A92  EC78  F008         	call	___lbdiv
  1257   000A96  0F30               	addlw	48
  1258   000A98  EC1B  F009         	call	_EscribeLCD_c
  1259                           
  1260                           ;Laboratorio5.c: 239: EscribeLCD_c(Hum % 10 + 48);
  1261   000A9C  0E0A               	movlw	10
  1262   000A9E  6E03               	movwf	___lbmod@divisor^0,c
  1263   000AA0  5020               	movf	_Hum^0,w,c
  1264   000AA2  ECC3  F008         	call	___lbmod
  1265   000AA6  0F30               	addlw	48
  1266   000AA8  EC1B  F009         	call	_EscribeLCD_c
  1267                           
  1268                           ;Laboratorio5.c: 240: EscribeLCD_c('%');
  1269   000AAC  0E25               	movlw	37
  1270   000AAE  EC1B  F009         	call	_EscribeLCD_c
  1271   000AB2  0012               	return		;funcret
  1272   000AB4                     __end_of_TransmitirDatos:
  1273                           	callstack 0
  1274                           
  1275 ;; *************** function ___wmul *****************
  1276 ;; Defined at:
  1277 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  1278 ;; Parameters:    Size  Location     Type
  1279 ;;  multiplier      2    2[COMRAM] unsigned int 
  1280 ;;  multiplicand    2    4[COMRAM] unsigned int 
  1281 ;; Auto vars:     Size  Location     Type
  1282 ;;  product         2    6[COMRAM] unsigned int 
  1283 ;; Return value:  Size  Location     Type
  1284 ;;                  2    2[COMRAM] unsigned int 
  1285 ;; Registers used:
  1286 ;;		wreg, status,2, status,0, prodl, prodh
  1287 ;; Tracked objects:
  1288 ;;		On entry : 0/0
  1289 ;;		On exit  : 0/0
  1290 ;;		Unchanged: 0/0
  1291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1292 ;;      Params:         4       0       0       0       0       0       0       0       0
  1293 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1294 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1295 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1296 ;;Total ram usage:        6 bytes
  1297 ;; Hardware stack levels used: 1
  1298 ;; Hardware stack levels required when called: 2
  1299 ;; This function calls:
  1300 ;;		Nothing
  1301 ;; This function is called by:
  1302 ;;		_TransmitirDatos
  1303 ;; This function uses a non-reentrant model
  1304 ;;
  1305                           
  1306                           	psect	text3
  1307   0011B0                     __ptext3:
  1308                           	callstack 0
  1309   0011B0                     ___wmul:
  1310                           	callstack 27
  1311                           
  1312                           ;incstack = 0
  1313   0011B0  5003               	movf	___wmul@multiplier^0,w,c
  1314   0011B2  0205               	mulwf	___wmul@multiplicand^0,c
  1315   0011B4  CFF3 F007          	movff	prodl,___wmul@product
  1316   0011B8  CFF4 F008          	movff	prodh,___wmul@product+1
  1317   0011BC  5003               	movf	___wmul@multiplier^0,w,c
  1318   0011BE  0206               	mulwf	(___wmul@multiplicand+1)^0,c
  1319   0011C0  50F3               	movf	243,w,c
  1320   0011C2  2608               	addwf	(___wmul@product+1)^0,f,c
  1321   0011C4  5004               	movf	(___wmul@multiplier+1)^0,w,c
  1322   0011C6  0205               	mulwf	___wmul@multiplicand^0,c
  1323   0011C8  50F3               	movf	243,w,c
  1324   0011CA  2608               	addwf	(___wmul@product+1)^0,f,c
  1325   0011CC  C007  F003         	movff	___wmul@product,?___wmul
  1326   0011D0  C008  F004         	movff	___wmul@product+1,?___wmul+1
  1327   0011D4  0012               	return		;funcret
  1328   0011D6                     __end_of___wmul:
  1329                           	callstack 0
  1330                           
  1331 ;; *************** function ___lwmod *****************
  1332 ;; Defined at:
  1333 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  1334 ;; Parameters:    Size  Location     Type
  1335 ;;  dividend        2    2[COMRAM] unsigned int 
  1336 ;;  divisor         2    4[COMRAM] unsigned int 
  1337 ;; Auto vars:     Size  Location     Type
  1338 ;;  counter         1    6[COMRAM] unsigned char 
  1339 ;; Return value:  Size  Location     Type
  1340 ;;                  2    2[COMRAM] unsigned int 
  1341 ;; Registers used:
  1342 ;;		wreg, status,2, status,0
  1343 ;; Tracked objects:
  1344 ;;		On entry : 0/0
  1345 ;;		On exit  : 0/0
  1346 ;;		Unchanged: 0/0
  1347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1348 ;;      Params:         4       0       0       0       0       0       0       0       0
  1349 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1350 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1351 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1352 ;;Total ram usage:        5 bytes
  1353 ;; Hardware stack levels used: 1
  1354 ;; Hardware stack levels required when called: 2
  1355 ;; This function calls:
  1356 ;;		Nothing
  1357 ;; This function is called by:
  1358 ;;		_TransmitirDatos
  1359 ;; This function uses a non-reentrant model
  1360 ;;
  1361                           
  1362                           	psect	text4
  1363   001072                     __ptext4:
  1364                           	callstack 0
  1365   001072                     ___lwmod:
  1366                           	callstack 27
  1367                           
  1368                           ;incstack = 0
  1369   001072  5005               	movf	___lwmod@divisor^0,w,c
  1370   001074  1006               	iorwf	(___lwmod@divisor+1)^0,w,c
  1371   001076  B4D8               	btfsc	status,2,c
  1372   001078  D018               	goto	l798
  1373   00107A  0E01               	movlw	1
  1374   00107C  6E07               	movwf	___lwmod@counter^0,c
  1375   00107E  D004               	goto	l1780
  1376   001080                     l1778:
  1377   001080  90D8               	bcf	status,0,c
  1378   001082  3605               	rlcf	___lwmod@divisor^0,f,c
  1379   001084  3606               	rlcf	(___lwmod@divisor+1)^0,f,c
  1380   001086  2A07               	incf	___lwmod@counter^0,f,c
  1381   001088                     l1780:
  1382   001088  AE06               	btfss	(___lwmod@divisor+1)^0,7,c
  1383   00108A  D7FA               	goto	l1778
  1384   00108C                     u810:
  1385   00108C  5005               	movf	___lwmod@divisor^0,w,c
  1386   00108E  5C03               	subwf	___lwmod@dividend^0,w,c
  1387   001090  5006               	movf	(___lwmod@divisor+1)^0,w,c
  1388   001092  5804               	subwfb	(___lwmod@dividend+1)^0,w,c
  1389   001094  A0D8               	btfss	status,0,c
  1390   001096  D004               	goto	l1786
  1391   001098  5005               	movf	___lwmod@divisor^0,w,c
  1392   00109A  5E03               	subwf	___lwmod@dividend^0,f,c
  1393   00109C  5006               	movf	(___lwmod@divisor+1)^0,w,c
  1394   00109E  5A04               	subwfb	(___lwmod@dividend+1)^0,f,c
  1395   0010A0                     l1786:
  1396   0010A0  90D8               	bcf	status,0,c
  1397   0010A2  3206               	rrcf	(___lwmod@divisor+1)^0,f,c
  1398   0010A4  3205               	rrcf	___lwmod@divisor^0,f,c
  1399   0010A6  2E07               	decfsz	___lwmod@counter^0,f,c
  1400   0010A8  D7F1               	goto	u810
  1401   0010AA                     l798:
  1402   0010AA  C003  F003         	movff	___lwmod@dividend,?___lwmod
  1403   0010AE  C004  F004         	movff	___lwmod@dividend+1,?___lwmod+1
  1404   0010B2  0012               	return		;funcret
  1405   0010B4                     __end_of___lwmod:
  1406                           	callstack 0
  1407                           
  1408 ;; *************** function ___lwdiv *****************
  1409 ;; Defined at:
  1410 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  1411 ;; Parameters:    Size  Location     Type
  1412 ;;  dividend        2    2[COMRAM] unsigned int 
  1413 ;;  divisor         2    4[COMRAM] unsigned int 
  1414 ;; Auto vars:     Size  Location     Type
  1415 ;;  quotient        2    6[COMRAM] unsigned int 
  1416 ;;  counter         1    8[COMRAM] unsigned char 
  1417 ;; Return value:  Size  Location     Type
  1418 ;;                  2    2[COMRAM] unsigned int 
  1419 ;; Registers used:
  1420 ;;		wreg, status,2, status,0
  1421 ;; Tracked objects:
  1422 ;;		On entry : 0/0
  1423 ;;		On exit  : 0/0
  1424 ;;		Unchanged: 0/0
  1425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1426 ;;      Params:         4       0       0       0       0       0       0       0       0
  1427 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1428 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1429 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1430 ;;Total ram usage:        7 bytes
  1431 ;; Hardware stack levels used: 1
  1432 ;; Hardware stack levels required when called: 2
  1433 ;; This function calls:
  1434 ;;		Nothing
  1435 ;; This function is called by:
  1436 ;;		_TransmitirDatos
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439                           
  1440                           	psect	text5
  1441   000F8C                     __ptext5:
  1442                           	callstack 0
  1443   000F8C                     ___lwdiv:
  1444                           	callstack 27
  1445                           
  1446                           ;incstack = 0
  1447   000F8C  0E00               	movlw	0
  1448   000F8E  6E08               	movwf	(___lwdiv@quotient+1)^0,c
  1449   000F90  0E00               	movlw	0
  1450   000F92  6E07               	movwf	___lwdiv@quotient^0,c
  1451   000F94  5005               	movf	___lwdiv@divisor^0,w,c
  1452   000F96  1006               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1453   000F98  B4D8               	btfsc	status,2,c
  1454   000F9A  D01C               	goto	l788
  1455   000F9C  0E01               	movlw	1
  1456   000F9E  6E09               	movwf	___lwdiv@counter^0,c
  1457   000FA0  D004               	goto	l1760
  1458   000FA2                     l1758:
  1459   000FA2  90D8               	bcf	status,0,c
  1460   000FA4  3605               	rlcf	___lwdiv@divisor^0,f,c
  1461   000FA6  3606               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1462   000FA8  2A09               	incf	___lwdiv@counter^0,f,c
  1463   000FAA                     l1760:
  1464   000FAA  AE06               	btfss	(___lwdiv@divisor+1)^0,7,c
  1465   000FAC  D7FA               	goto	l1758
  1466   000FAE                     u780:
  1467   000FAE  90D8               	bcf	status,0,c
  1468   000FB0  3607               	rlcf	___lwdiv@quotient^0,f,c
  1469   000FB2  3608               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1470   000FB4  5005               	movf	___lwdiv@divisor^0,w,c
  1471   000FB6  5C03               	subwf	___lwdiv@dividend^0,w,c
  1472   000FB8  5006               	movf	(___lwdiv@divisor+1)^0,w,c
  1473   000FBA  5804               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1474   000FBC  A0D8               	btfss	status,0,c
  1475   000FBE  D005               	goto	l1770
  1476   000FC0  5005               	movf	___lwdiv@divisor^0,w,c
  1477   000FC2  5E03               	subwf	___lwdiv@dividend^0,f,c
  1478   000FC4  5006               	movf	(___lwdiv@divisor+1)^0,w,c
  1479   000FC6  5A04               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1480   000FC8  8007               	bsf	___lwdiv@quotient^0,0,c
  1481   000FCA                     l1770:
  1482   000FCA  90D8               	bcf	status,0,c
  1483   000FCC  3206               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1484   000FCE  3205               	rrcf	___lwdiv@divisor^0,f,c
  1485   000FD0  2E09               	decfsz	___lwdiv@counter^0,f,c
  1486   000FD2  D7ED               	goto	u780
  1487   000FD4                     l788:
  1488   000FD4  C007  F003         	movff	___lwdiv@quotient,?___lwdiv
  1489   000FD8  C008  F004         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1490   000FDC  0012               	return		;funcret
  1491   000FDE                     __end_of___lwdiv:
  1492                           	callstack 0
  1493                           
  1494 ;; *************** function ___lbmod *****************
  1495 ;; Defined at:
  1496 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lbmod.c"
  1497 ;; Parameters:    Size  Location     Type
  1498 ;;  dividend        1    wreg     unsigned char 
  1499 ;;  divisor         1    2[COMRAM] unsigned char 
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;  dividend        1    3[COMRAM] unsigned char 
  1502 ;;  rem             1    5[COMRAM] unsigned char 
  1503 ;;  counter         1    4[COMRAM] unsigned char 
  1504 ;; Return value:  Size  Location     Type
  1505 ;;                  1    wreg      unsigned char 
  1506 ;; Registers used:
  1507 ;;		wreg, status,2, status,0
  1508 ;; Tracked objects:
  1509 ;;		On entry : 0/0
  1510 ;;		On exit  : 0/0
  1511 ;;		Unchanged: 0/0
  1512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1513 ;;      Params:         1       0       0       0       0       0       0       0       0
  1514 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1515 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1516 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1517 ;;Total ram usage:        4 bytes
  1518 ;; Hardware stack levels used: 1
  1519 ;; Hardware stack levels required when called: 2
  1520 ;; This function calls:
  1521 ;;		Nothing
  1522 ;; This function is called by:
  1523 ;;		_main
  1524 ;;		_TransmitirDatos
  1525 ;; This function uses a non-reentrant model
  1526 ;;
  1527                           
  1528                           	psect	text6
  1529   001186                     __ptext6:
  1530                           	callstack 0
  1531   001186                     ___lbmod:
  1532                           	callstack 28
  1533                           
  1534                           ;incstack = 0
  1535                           ;___lbmod@dividend stored from wreg
  1536   001186  6E04               	movwf	___lbmod@dividend^0,c
  1537   001188  0E08               	movlw	8
  1538   00118A  6E05               	movwf	___lbmod@counter^0,c
  1539   00118C  0E00               	movlw	0
  1540   00118E  6E06               	movwf	___lbmod@rem^0,c
  1541   001190                     l1738:
  1542   001190  90D8               	bcf	status,0,c
  1543   001192  3404               	rlcf	___lbmod@dividend^0,w,c
  1544   001194  3406               	rlcf	___lbmod@rem^0,w,c
  1545   001196  6E06               	movwf	___lbmod@rem^0,c
  1546   001198  90D8               	bcf	status,0,c
  1547   00119A  3604               	rlcf	___lbmod@dividend^0,f,c
  1548   00119C  5003               	movf	___lbmod@divisor^0,w,c
  1549   00119E  5C06               	subwf	___lbmod@rem^0,w,c
  1550   0011A0  A0D8               	btfss	status,0,c
  1551   0011A2  D002               	goto	l1746
  1552   0011A4  5003               	movf	___lbmod@divisor^0,w,c
  1553   0011A6  5E06               	subwf	___lbmod@rem^0,f,c
  1554   0011A8                     l1746:
  1555   0011A8  2E05               	decfsz	___lbmod@counter^0,f,c
  1556   0011AA  D7F2               	goto	l1738
  1557   0011AC  5006               	movf	___lbmod@rem^0,w,c
  1558   0011AE  0012               	return		;funcret
  1559   0011B0                     __end_of___lbmod:
  1560                           	callstack 0
  1561                           
  1562 ;; *************** function ___lbdiv *****************
  1563 ;; Defined at:
  1564 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lbdiv.c"
  1565 ;; Parameters:    Size  Location     Type
  1566 ;;  dividend        1    wreg     unsigned char 
  1567 ;;  divisor         1    2[COMRAM] unsigned char 
  1568 ;; Auto vars:     Size  Location     Type
  1569 ;;  dividend        1    3[COMRAM] unsigned char 
  1570 ;;  quotient        1    5[COMRAM] unsigned char 
  1571 ;;  counter         1    4[COMRAM] unsigned char 
  1572 ;; Return value:  Size  Location     Type
  1573 ;;                  1    wreg      unsigned char 
  1574 ;; Registers used:
  1575 ;;		wreg, status,2, status,0
  1576 ;; Tracked objects:
  1577 ;;		On entry : 0/0
  1578 ;;		On exit  : 0/0
  1579 ;;		Unchanged: 0/0
  1580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1581 ;;      Params:         1       0       0       0       0       0       0       0       0
  1582 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1583 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1584 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1585 ;;Total ram usage:        4 bytes
  1586 ;; Hardware stack levels used: 1
  1587 ;; Hardware stack levels required when called: 2
  1588 ;; This function calls:
  1589 ;;		Nothing
  1590 ;; This function is called by:
  1591 ;;		_main
  1592 ;;		_TransmitirDatos
  1593 ;; This function uses a non-reentrant model
  1594 ;;
  1595                           
  1596                           	psect	text7
  1597   0010F0                     __ptext7:
  1598                           	callstack 0
  1599   0010F0                     ___lbdiv:
  1600                           	callstack 28
  1601                           
  1602                           ;incstack = 0
  1603                           ;___lbdiv@dividend stored from wreg
  1604   0010F0  6E04               	movwf	___lbdiv@dividend^0,c
  1605   0010F2  0E00               	movlw	0
  1606   0010F4  6E06               	movwf	___lbdiv@quotient^0,c
  1607   0010F6  5003               	movf	___lbdiv@divisor^0,w,c
  1608   0010F8  B4D8               	btfsc	status,2,c
  1609   0010FA  D015               	goto	l1732
  1610   0010FC  0E01               	movlw	1
  1611   0010FE  6E05               	movwf	___lbdiv@counter^0,c
  1612   001100  D003               	goto	l1720
  1613   001102                     l1716:
  1614   001102  90D8               	bcf	status,0,c
  1615   001104  3603               	rlcf	___lbdiv@divisor^0,f,c
  1616   001106  2A05               	incf	___lbdiv@counter^0,f,c
  1617   001108                     l1720:
  1618   001108  AE03               	btfss	___lbdiv@divisor^0,7,c
  1619   00110A  D7FB               	goto	l1716
  1620   00110C                     u740:
  1621   00110C  90D8               	bcf	status,0,c
  1622   00110E  3606               	rlcf	___lbdiv@quotient^0,f,c
  1623   001110  5003               	movf	___lbdiv@divisor^0,w,c
  1624   001112  5C04               	subwf	___lbdiv@dividend^0,w,c
  1625   001114  A0D8               	btfss	status,0,c
  1626   001116  D003               	goto	l1728
  1627   001118  5003               	movf	___lbdiv@divisor^0,w,c
  1628   00111A  5E04               	subwf	___lbdiv@dividend^0,f,c
  1629   00111C  8006               	bsf	___lbdiv@quotient^0,0,c
  1630   00111E                     l1728:
  1631   00111E  90D8               	bcf	status,0,c
  1632   001120  3203               	rrcf	___lbdiv@divisor^0,f,c
  1633   001122  2E05               	decfsz	___lbdiv@counter^0,f,c
  1634   001124  D7F3               	goto	u740
  1635   001126                     l1732:
  1636   001126  5006               	movf	___lbdiv@quotient^0,w,c
  1637   001128  0012               	return		;funcret
  1638   00112A                     __end_of___lbdiv:
  1639                           	callstack 0
  1640                           
  1641 ;; *************** function ___awdiv *****************
  1642 ;; Defined at:
  1643 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  1644 ;; Parameters:    Size  Location     Type
  1645 ;;  dividend        2    2[COMRAM] int 
  1646 ;;  divisor         2    4[COMRAM] int 
  1647 ;; Auto vars:     Size  Location     Type
  1648 ;;  quotient        2    8[COMRAM] int 
  1649 ;;  sign            1    7[COMRAM] unsigned char 
  1650 ;;  counter         1    6[COMRAM] unsigned char 
  1651 ;; Return value:  Size  Location     Type
  1652 ;;                  2    2[COMRAM] int 
  1653 ;; Registers used:
  1654 ;;		wreg, status,2, status,0
  1655 ;; Tracked objects:
  1656 ;;		On entry : 0/0
  1657 ;;		On exit  : 0/0
  1658 ;;		Unchanged: 0/0
  1659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1660 ;;      Params:         4       0       0       0       0       0       0       0       0
  1661 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1662 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1663 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1664 ;;Total ram usage:        8 bytes
  1665 ;; Hardware stack levels used: 1
  1666 ;; Hardware stack levels required when called: 2
  1667 ;; This function calls:
  1668 ;;		Nothing
  1669 ;; This function is called by:
  1670 ;;		_TransmitirDatos
  1671 ;; This function uses a non-reentrant model
  1672 ;;
  1673                           
  1674                           	psect	text8
  1675   000EA2                     __ptext8:
  1676                           	callstack 0
  1677   000EA2                     ___awdiv:
  1678                           	callstack 27
  1679                           
  1680                           ;incstack = 0
  1681   000EA2  0E00               	movlw	0
  1682   000EA4  6E08               	movwf	___awdiv@sign^0,c
  1683   000EA6  AE06               	btfss	(___awdiv@divisor+1)^0,7,c
  1684   000EA8  D006               	goto	l1674
  1685   000EAA  6C05               	negf	___awdiv@divisor^0,c
  1686   000EAC  1E06               	comf	(___awdiv@divisor+1)^0,f,c
  1687   000EAE  B0D8               	btfsc	status,0,c
  1688   000EB0  2A06               	incf	(___awdiv@divisor+1)^0,f,c
  1689   000EB2  0E01               	movlw	1
  1690   000EB4  6E08               	movwf	___awdiv@sign^0,c
  1691   000EB6                     l1674:
  1692   000EB6  AE04               	btfss	(___awdiv@dividend+1)^0,7,c
  1693   000EB8  D006               	goto	l1680
  1694   000EBA  6C03               	negf	___awdiv@dividend^0,c
  1695   000EBC  1E04               	comf	(___awdiv@dividend+1)^0,f,c
  1696   000EBE  B0D8               	btfsc	status,0,c
  1697   000EC0  2A04               	incf	(___awdiv@dividend+1)^0,f,c
  1698   000EC2  0E01               	movlw	1
  1699   000EC4  1A08               	xorwf	___awdiv@sign^0,f,c
  1700   000EC6                     l1680:
  1701   000EC6  0E00               	movlw	0
  1702   000EC8  6E0A               	movwf	(___awdiv@quotient+1)^0,c
  1703   000ECA  0E00               	movlw	0
  1704   000ECC  6E09               	movwf	___awdiv@quotient^0,c
  1705   000ECE  5005               	movf	___awdiv@divisor^0,w,c
  1706   000ED0  1006               	iorwf	(___awdiv@divisor+1)^0,w,c
  1707   000ED2  B4D8               	btfsc	status,2,c
  1708   000ED4  D01C               	goto	l1702
  1709   000ED6  0E01               	movlw	1
  1710   000ED8  6E07               	movwf	___awdiv@counter^0,c
  1711   000EDA  D004               	goto	l1688
  1712   000EDC                     l1686:
  1713   000EDC  90D8               	bcf	status,0,c
  1714   000EDE  3605               	rlcf	___awdiv@divisor^0,f,c
  1715   000EE0  3606               	rlcf	(___awdiv@divisor+1)^0,f,c
  1716   000EE2  2A07               	incf	___awdiv@counter^0,f,c
  1717   000EE4                     l1688:
  1718   000EE4  AE06               	btfss	(___awdiv@divisor+1)^0,7,c
  1719   000EE6  D7FA               	goto	l1686
  1720   000EE8                     u700:
  1721   000EE8  90D8               	bcf	status,0,c
  1722   000EEA  3609               	rlcf	___awdiv@quotient^0,f,c
  1723   000EEC  360A               	rlcf	(___awdiv@quotient+1)^0,f,c
  1724   000EEE  5005               	movf	___awdiv@divisor^0,w,c
  1725   000EF0  5C03               	subwf	___awdiv@dividend^0,w,c
  1726   000EF2  5006               	movf	(___awdiv@divisor+1)^0,w,c
  1727   000EF4  5804               	subwfb	(___awdiv@dividend+1)^0,w,c
  1728   000EF6  A0D8               	btfss	status,0,c
  1729   000EF8  D005               	goto	l1698
  1730   000EFA  5005               	movf	___awdiv@divisor^0,w,c
  1731   000EFC  5E03               	subwf	___awdiv@dividend^0,f,c
  1732   000EFE  5006               	movf	(___awdiv@divisor+1)^0,w,c
  1733   000F00  5A04               	subwfb	(___awdiv@dividend+1)^0,f,c
  1734   000F02  8009               	bsf	___awdiv@quotient^0,0,c
  1735   000F04                     l1698:
  1736   000F04  90D8               	bcf	status,0,c
  1737   000F06  3206               	rrcf	(___awdiv@divisor+1)^0,f,c
  1738   000F08  3205               	rrcf	___awdiv@divisor^0,f,c
  1739   000F0A  2E07               	decfsz	___awdiv@counter^0,f,c
  1740   000F0C  D7ED               	goto	u700
  1741   000F0E                     l1702:
  1742   000F0E  5008               	movf	___awdiv@sign^0,w,c
  1743   000F10  B4D8               	btfsc	status,2,c
  1744   000F12  D004               	goto	l1706
  1745   000F14  6C09               	negf	___awdiv@quotient^0,c
  1746   000F16  1E0A               	comf	(___awdiv@quotient+1)^0,f,c
  1747   000F18  B0D8               	btfsc	status,0,c
  1748   000F1A  2A0A               	incf	(___awdiv@quotient+1)^0,f,c
  1749   000F1C                     l1706:
  1750   000F1C  C009  F003         	movff	___awdiv@quotient,?___awdiv
  1751   000F20  C00A  F004         	movff	___awdiv@quotient+1,?___awdiv+1
  1752   000F24  0012               	return		;funcret
  1753   000F26                     __end_of___awdiv:
  1754                           	callstack 0
  1755                           
  1756 ;; *************** function _Transmitir *****************
  1757 ;; Defined at:
  1758 ;;		line 164 in file "Laboratorio5.c"
  1759 ;; Parameters:    Size  Location     Type
  1760 ;;  BufferT         1    wreg     unsigned char 
  1761 ;; Auto vars:     Size  Location     Type
  1762 ;;  BufferT         1    2[COMRAM] unsigned char 
  1763 ;; Return value:  Size  Location     Type
  1764 ;;                  1    wreg      void 
  1765 ;; Registers used:
  1766 ;;		wreg
  1767 ;; Tracked objects:
  1768 ;;		On entry : 0/0
  1769 ;;		On exit  : 0/0
  1770 ;;		Unchanged: 0/0
  1771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1772 ;;      Params:         0       0       0       0       0       0       0       0       0
  1773 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1774 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1775 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1776 ;;Total ram usage:        1 bytes
  1777 ;; Hardware stack levels used: 1
  1778 ;; Hardware stack levels required when called: 2
  1779 ;; This function calls:
  1780 ;;		Nothing
  1781 ;; This function is called by:
  1782 ;;		_TransmitirDatos
  1783 ;; This function uses a non-reentrant model
  1784 ;;
  1785                           
  1786                           	psect	text9
  1787   0012A6                     __ptext9:
  1788                           	callstack 0
  1789   0012A6                     _Transmitir:
  1790                           	callstack 27
  1791                           
  1792                           ;incstack = 0
  1793                           ;Transmitir@BufferT stored from wreg
  1794   0012A6  6E03               	movwf	Transmitir@BufferT^0,c
  1795   0012A8                     
  1796                           ;Laboratorio5.c: 165: while (TRMT == 0);
  1797   0012A8  A2AC               	btfss	4012,1,c	;volatile
  1798   0012AA  D7FE               	goto	l1160
  1799                           
  1800                           ;Laboratorio5.c: 166: TXREG = BufferT;
  1801   0012AC  C003  FFAD         	movff	Transmitir@BufferT,4013	;volatile
  1802   0012B0  0012               	return		;funcret
  1803   0012B2                     __end_of_Transmitir:
  1804                           	callstack 0
  1805                           
  1806 ;; *************** function _MensajeLCD_Word *****************
  1807 ;; Defined at:
  1808 ;;		line 247 in file "LibLCDXC8.h"
  1809 ;; Parameters:    Size  Location     Type
  1810 ;;  a               1    7[COMRAM] PTR unsigned char 
  1811 ;;		 -> STR_4(5), STR_3(6), STR_2(10), STR_1(13), 
  1812 ;; Auto vars:     Size  Location     Type
  1813 ;;  i               2    9[COMRAM] int 
  1814 ;; Return value:  Size  Location     Type
  1815 ;;                  1    wreg      void 
  1816 ;; Registers used:
  1817 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1818 ;; Tracked objects:
  1819 ;;		On entry : 0/0
  1820 ;;		On exit  : 0/0
  1821 ;;		Unchanged: 0/0
  1822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1823 ;;      Params:         1       0       0       0       0       0       0       0       0
  1824 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1825 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1826 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1827 ;;Total ram usage:        4 bytes
  1828 ;; Hardware stack levels used: 1
  1829 ;; Hardware stack levels required when called: 5
  1830 ;; This function calls:
  1831 ;;		_EscribeLCD_c
  1832 ;; This function is called by:
  1833 ;;		_main
  1834 ;;		_TransmitirDatos
  1835 ;; This function uses a non-reentrant model
  1836 ;;
  1837                           
  1838                           	psect	text10
  1839   000FDE                     __ptext10:
  1840                           	callstack 0
  1841   000FDE                     _MensajeLCD_Word:
  1842                           	callstack 24
  1843                           
  1844                           ;LibLCDXC8.h: 251: for(int i = 0; i<16; i++){
  1845                           
  1846                           ;incstack = 0
  1847   000FDE  0E00               	movlw	0
  1848   000FE0  6E0B               	movwf	(MensajeLCD_Word@i+1)^0,c
  1849   000FE2  0E00               	movlw	0
  1850   000FE4  6E0A               	movwf	MensajeLCD_Word@i^0,c
  1851   000FE6                     l1650:
  1852                           
  1853                           ;LibLCDXC8.h: 252: if(a[i] == (0)){
  1854   000FE6  5008               	movf	MensajeLCD_Word@a^0,w,c
  1855   000FE8  240A               	addwf	MensajeLCD_Word@i^0,w,c
  1856   000FEA  6E09               	movwf	??_MensajeLCD_Word^0,c
  1857   000FEC  C009  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  1858   000FF0                     	if	1	;There is more than 1 active tblptr byte
  1859   000FF0  0E08               	movlw	high __smallconst
  1860   000FF2  6EF7               	movwf	tblptrh,c
  1861   000FF4                     	endif
  1862   000FF4                     	if	0	;tblptru may be non-zero
  1863   000FF4                     	endif
  1864   000FF4                     	if	0	;tblptru may be non-zero
  1865   000FF4                     	endif
  1866   000FF4  0008               	tblrd		*
  1867   000FF6  50F5               	movf	tablat,w,c
  1868   000FF8  0900               	iorlw	0
  1869   000FFA  B4D8               	btfsc	status,2,c
  1870   000FFC  0012               	return	
  1871                           
  1872                           ;LibLCDXC8.h: 254: };LibLCDXC8.h: 255: EscribeLCD_c(a[i]);
  1873   000FFE  5008               	movf	MensajeLCD_Word@a^0,w,c
  1874   001000  240A               	addwf	MensajeLCD_Word@i^0,w,c
  1875   001002  6E09               	movwf	??_MensajeLCD_Word^0,c
  1876   001004  C009  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  1877   001008                     	if	1	;There is more than 1 active tblptr byte
  1878   001008  0E08               	movlw	high __smallconst
  1879   00100A  6EF7               	movwf	tblptrh,c
  1880   00100C                     	endif
  1881   00100C                     	if	0	;tblptru may be non-zero
  1882   00100C                     	endif
  1883   00100C                     	if	0	;tblptru may be non-zero
  1884   00100C                     	endif
  1885   00100C  0008               	tblrd		*
  1886   00100E  50F5               	movf	tablat,w,c
  1887   001010  EC1B  F009         	call	_EscribeLCD_c
  1888   001014  4A0A               	infsnz	MensajeLCD_Word@i^0,f,c
  1889   001016  2A0B               	incf	(MensajeLCD_Word@i+1)^0,f,c
  1890   001018  BE0B               	btfsc	(MensajeLCD_Word@i+1)^0,7,c
  1891   00101A  D7E5               	goto	l1650
  1892   00101C  500B               	movf	(MensajeLCD_Word@i+1)^0,w,c
  1893   00101E  E105               	bnz	u660
  1894   001020  0E10               	movlw	16
  1895   001022  5C0A               	subwf	MensajeLCD_Word@i^0,w,c
  1896   001024  B0D8               	btfsc	status,0,c
  1897   001026  0012               	return	
  1898   001028  D7DE               	goto	l1650
  1899   00102A                     u660:
  1900   00102A  0012               	return		;funcret
  1901   00102C                     __end_of_MensajeLCD_Word:
  1902                           	callstack 0
  1903                           
  1904 ;; *************** function _EscribeLCD_c *****************
  1905 ;; Defined at:
  1906 ;;		line 148 in file "LibLCDXC8.h"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;  a               1    wreg     unsigned char 
  1909 ;; Auto vars:     Size  Location     Type
  1910 ;;  a               1    6[COMRAM] unsigned char 
  1911 ;; Return value:  Size  Location     Type
  1912 ;;                  1    wreg      void 
  1913 ;; Registers used:
  1914 ;;		wreg, status,2, status,0, cstack
  1915 ;; Tracked objects:
  1916 ;;		On entry : 0/0
  1917 ;;		On exit  : 0/0
  1918 ;;		Unchanged: 0/0
  1919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1920 ;;      Params:         0       0       0       0       0       0       0       0       0
  1921 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1922 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1923 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1924 ;;Total ram usage:        1 bytes
  1925 ;; Hardware stack levels used: 1
  1926 ;; Hardware stack levels required when called: 4
  1927 ;; This function calls:
  1928 ;;		_EnviaDato
  1929 ;;		_HabilitaLCD
  1930 ;;		_RetardoLCD
  1931 ;; This function is called by:
  1932 ;;		_MensajeLCD_Word
  1933 ;;		_main
  1934 ;;		_TransmitirDatos
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           
  1938                           	psect	text11
  1939   001236                     __ptext11:
  1940                           	callstack 0
  1941   001236                     _EscribeLCD_c:
  1942                           	callstack 24
  1943                           
  1944                           ;incstack = 0
  1945                           ;EscribeLCD_c@a stored from wreg
  1946   001236  6E07               	movwf	EscribeLCD_c@a^0,c
  1947                           
  1948                           ;LibLCDXC8.h: 152: LATD6=1;
  1949   001238  8C8C               	bsf	3980,6,c	;volatile
  1950                           
  1951                           ;LibLCDXC8.h: 153: EnviaDato(a);
  1952   00123A  5007               	movf	EscribeLCD_c@a^0,w,c
  1953   00123C  EC16  F008         	call	_EnviaDato
  1954                           
  1955                           ;LibLCDXC8.h: 154: HabilitaLCD();
  1956   001240  EC4C  F009         	call	_HabilitaLCD	;wreg free
  1957                           
  1958                           ;LibLCDXC8.h: 155: RetardoLCD(4);
  1959   001244  0E04               	movlw	4
  1960   001246  EC93  F007         	call	_RetardoLCD
  1961   00124A  0012               	return		;funcret
  1962   00124C                     __end_of_EscribeLCD_c:
  1963                           	callstack 0
  1964                           
  1965 ;; *************** function _DireccionaLCD *****************
  1966 ;; Defined at:
  1967 ;;		line 259 in file "LibLCDXC8.h"
  1968 ;; Parameters:    Size  Location     Type
  1969 ;;  a               1    wreg     unsigned char 
  1970 ;; Auto vars:     Size  Location     Type
  1971 ;;  a               1    6[COMRAM] unsigned char 
  1972 ;; Return value:  Size  Location     Type
  1973 ;;                  1    wreg      void 
  1974 ;; Registers used:
  1975 ;;		wreg, status,2, status,0, cstack
  1976 ;; Tracked objects:
  1977 ;;		On entry : 0/0
  1978 ;;		On exit  : 0/0
  1979 ;;		Unchanged: 0/0
  1980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1981 ;;      Params:         0       0       0       0       0       0       0       0       0
  1982 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1983 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1984 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1985 ;;Total ram usage:        1 bytes
  1986 ;; Hardware stack levels used: 1
  1987 ;; Hardware stack levels required when called: 4
  1988 ;; This function calls:
  1989 ;;		_EnviaDato
  1990 ;;		_HabilitaLCD
  1991 ;;		_RetardoLCD
  1992 ;; This function is called by:
  1993 ;;		_main
  1994 ;;		_TransmitirDatos
  1995 ;; This function uses a non-reentrant model
  1996 ;;
  1997                           
  1998                           	psect	text12
  1999   00124C                     __ptext12:
  2000                           	callstack 0
  2001   00124C                     _DireccionaLCD:
  2002                           	callstack 25
  2003                           
  2004                           ;incstack = 0
  2005                           ;DireccionaLCD@a stored from wreg
  2006   00124C  6E07               	movwf	DireccionaLCD@a^0,c
  2007                           
  2008                           ;LibLCDXC8.h: 262: LATD6=0;
  2009   00124E  9C8C               	bcf	3980,6,c	;volatile
  2010                           
  2011                           ;LibLCDXC8.h: 263: EnviaDato(a);
  2012   001250  5007               	movf	DireccionaLCD@a^0,w,c
  2013   001252  EC16  F008         	call	_EnviaDato
  2014                           
  2015                           ;LibLCDXC8.h: 264: HabilitaLCD();
  2016   001256  EC4C  F009         	call	_HabilitaLCD	;wreg free
  2017                           
  2018                           ;LibLCDXC8.h: 265: RetardoLCD(4);
  2019   00125A  0E04               	movlw	4
  2020   00125C  EC93  F007         	call	_RetardoLCD
  2021   001260  0012               	return		;funcret
  2022   001262                     __end_of_DireccionaLCD:
  2023                           	callstack 0
  2024                           
  2025 ;; *************** function _LeerHT11 *****************
  2026 ;; Defined at:
  2027 ;;		line 117 in file "Laboratorio5.c"
  2028 ;; Parameters:    Size  Location     Type
  2029 ;;		None
  2030 ;; Auto vars:     Size  Location     Type
  2031 ;;		None
  2032 ;; Return value:  Size  Location     Type
  2033 ;;                  1    wreg      void 
  2034 ;; Registers used:
  2035 ;;		wreg, status,2, status,0, cstack
  2036 ;; Tracked objects:
  2037 ;;		On entry : 0/0
  2038 ;;		On exit  : 0/0
  2039 ;;		Unchanged: 0/0
  2040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2041 ;;      Params:         0       0       0       0       0       0       0       0       0
  2042 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2043 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2044 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2045 ;;Total ram usage:        1 bytes
  2046 ;; Hardware stack levels used: 1
  2047 ;; Hardware stack levels required when called: 4
  2048 ;; This function calls:
  2049 ;;		_LeerByte
  2050 ;; This function is called by:
  2051 ;;		_main
  2052 ;; This function uses a non-reentrant model
  2053 ;;
  2054                           
  2055                           	psect	text13
  2056   0010B4                     __ptext13:
  2057                           	callstack 0
  2058   0010B4                     _LeerHT11:
  2059                           	callstack 26
  2060                           
  2061                           ;Laboratorio5.c: 119: TRISC2 = 0;
  2062                           
  2063                           ;incstack = 0
  2064   0010B4  9494               	bcf	3988,2,c	;volatile
  2065                           
  2066                           ;Laboratorio5.c: 120: _delay((unsigned long)((18)*(8000000/4000.0)));
  2067   0010B6  0E2F               	movlw	47
  2068   0010B8  6E07               	movwf	??_LeerHT11^0,c
  2069   0010BA  0EC0               	movlw	192
  2070   0010BC                     u1157:
  2071   0010BC  2EE8               	decfsz	wreg,f,c
  2072   0010BE  D7FE               	bra	u1157
  2073   0010C0  2E07               	decfsz	??_LeerHT11^0,f,c
  2074   0010C2  D7FC               	bra	u1157
  2075                           
  2076                           ;Laboratorio5.c: 121: TRISC2 = 1;
  2077   0010C4  8494               	bsf	3988,2,c	;volatile
  2078   0010C6                     l211:
  2079   0010C6  B482               	btfsc	3970,2,c	;volatile
  2080   0010C8  D7FE               	goto	l211
  2081                           
  2082                           ;Laboratorio5.c: 124: _delay((unsigned long)((120)*(8000000/4000000.0)));
  2083   0010CA  0E50               	movlw	80
  2084   0010CC                     u1167:
  2085   0010CC  2EE8               	decfsz	wreg,f,c
  2086   0010CE  D7FE               	bra	u1167
  2087   0010D0                     l214:
  2088   0010D0  B482               	btfsc	3970,2,c	;volatile
  2089   0010D2  D7FE               	goto	l214
  2090                           
  2091                           ;Laboratorio5.c: 127: Hum = LeerByte();
  2092   0010D4  ECFE  F008         	call	_LeerByte	;wreg free
  2093   0010D8  6E20               	movwf	_Hum^0,c
  2094                           
  2095                           ;Laboratorio5.c: 128: LeerByte();
  2096   0010DA  ECFE  F008         	call	_LeerByte	;wreg free
  2097                           
  2098                           ;Laboratorio5.c: 129: Temp = LeerByte();
  2099   0010DE  ECFE  F008         	call	_LeerByte	;wreg free
  2100   0010E2  6E21               	movwf	_Temp^0,c
  2101                           
  2102                           ;Laboratorio5.c: 130: LeerByte();
  2103   0010E4  ECFE  F008         	call	_LeerByte	;wreg free
  2104                           
  2105                           ;Laboratorio5.c: 131: Che = LeerByte();
  2106   0010E8  ECFE  F008         	call	_LeerByte	;wreg free
  2107   0010EC  6E1F               	movwf	_Che^0,c
  2108   0010EE  0012               	return		;funcret
  2109   0010F0                     __end_of_LeerHT11:
  2110                           	callstack 0
  2111                           
  2112 ;; *************** function _LeerByte *****************
  2113 ;; Defined at:
  2114 ;;		line 136 in file "Laboratorio5.c"
  2115 ;; Parameters:    Size  Location     Type
  2116 ;;		None
  2117 ;; Auto vars:     Size  Location     Type
  2118 ;;  i               1    5[COMRAM] unsigned char 
  2119 ;;  res             1    4[COMRAM] unsigned char 
  2120 ;; Return value:  Size  Location     Type
  2121 ;;                  1    wreg      unsigned char 
  2122 ;; Registers used:
  2123 ;;		wreg, status,2, status,0, cstack
  2124 ;; Tracked objects:
  2125 ;;		On entry : 0/0
  2126 ;;		On exit  : 0/0
  2127 ;;		Unchanged: 0/0
  2128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2129 ;;      Params:         0       0       0       0       0       0       0       0       0
  2130 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2131 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2132 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2133 ;;Total ram usage:        3 bytes
  2134 ;; Hardware stack levels used: 1
  2135 ;; Hardware stack levels required when called: 3
  2136 ;; This function calls:
  2137 ;;		_LeerBit
  2138 ;; This function is called by:
  2139 ;;		_LeerHT11
  2140 ;; This function uses a non-reentrant model
  2141 ;;
  2142                           
  2143                           	psect	text14
  2144   0011FC                     __ptext14:
  2145                           	callstack 0
  2146   0011FC                     _LeerByte:
  2147                           	callstack 26
  2148                           
  2149                           ;Laboratorio5.c: 137: unsigned char res = 0, i;
  2150                           
  2151                           ;incstack = 0
  2152   0011FC  0E00               	movlw	0
  2153   0011FE  6E05               	movwf	LeerByte@res^0,c
  2154                           
  2155                           ;Laboratorio5.c: 138: for (i = 8; i > 0; i--) {
  2156   001200  0E08               	movlw	8
  2157   001202  6E06               	movwf	LeerByte@i^0,c
  2158   001204                     l1150:
  2159                           
  2160                           ;Laboratorio5.c: 139: res = (res << 1) | LeerBit();
  2161   001204  EC95  F008         	call	_LeerBit	;wreg free
  2162   001208  6E04               	movwf	??_LeerByte^0,c
  2163   00120A  5005               	movf	LeerByte@res^0,w,c
  2164   00120C  2405               	addwf	LeerByte@res^0,w,c
  2165   00120E  1004               	iorwf	??_LeerByte^0,w,c
  2166   001210  6E05               	movwf	LeerByte@res^0,c
  2167   001212  0606               	decf	LeerByte@i^0,f,c
  2168   001214  5006               	movf	LeerByte@i^0,w,c
  2169   001216  A4D8               	btfss	status,2,c
  2170   001218  D7F5               	goto	l1150
  2171                           
  2172                           ;Laboratorio5.c: 140: };Laboratorio5.c: 141: return res;
  2173   00121A  5005               	movf	LeerByte@res^0,w,c
  2174   00121C  0012               	return		;funcret
  2175   00121E                     __end_of_LeerByte:
  2176                           	callstack 0
  2177                           
  2178 ;; *************** function _LeerBit *****************
  2179 ;; Defined at:
  2180 ;;		line 144 in file "Laboratorio5.c"
  2181 ;; Parameters:    Size  Location     Type
  2182 ;;		None
  2183 ;; Auto vars:     Size  Location     Type
  2184 ;;  res             1    2[COMRAM] unsigned char 
  2185 ;; Return value:  Size  Location     Type
  2186 ;;                  1    wreg      unsigned char 
  2187 ;; Registers used:
  2188 ;;		wreg, status,2
  2189 ;; Tracked objects:
  2190 ;;		On entry : 0/0
  2191 ;;		On exit  : 0/0
  2192 ;;		Unchanged: 0/0
  2193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2194 ;;      Params:         0       0       0       0       0       0       0       0       0
  2195 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2196 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2197 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2198 ;;Total ram usage:        1 bytes
  2199 ;; Hardware stack levels used: 1
  2200 ;; Hardware stack levels required when called: 2
  2201 ;; This function calls:
  2202 ;;		Nothing
  2203 ;; This function is called by:
  2204 ;;		_LeerByte
  2205 ;; This function uses a non-reentrant model
  2206 ;;
  2207                           
  2208                           	psect	text15
  2209   00112A                     __ptext15:
  2210                           	callstack 0
  2211   00112A                     _LeerBit:
  2212                           	callstack 26
  2213                           
  2214                           ;Laboratorio5.c: 145: unsigned char res = 0;
  2215                           
  2216                           ;incstack = 0
  2217   00112A  0E00               	movlw	0
  2218   00112C  6E03               	movwf	LeerBit@res^0,c
  2219   00112E                     l225:
  2220   00112E  A482               	btfss	3970,2,c	;volatile
  2221   001130  D7FE               	goto	l225
  2222                           
  2223                           ;Laboratorio5.c: 147: _delay((unsigned long)((13)*(8000000/4000000.0)));
  2224   001132  0E08               	movlw	8
  2225   001134                     u1177:
  2226   001134  2EE8               	decfsz	wreg,f,c
  2227   001136  D7FE               	bra	u1177
  2228   001138  D000               	nop2	
  2229                           
  2230                           ;Laboratorio5.c: 148: if (RC2 == 1) res = 0;
  2231   00113A  A482               	btfss	3970,2,c	;volatile
  2232   00113C  D002               	goto	l1104
  2233   00113E  0E00               	movlw	0
  2234   001140  6E03               	movwf	LeerBit@res^0,c
  2235   001142                     l1104:
  2236                           
  2237                           ;Laboratorio5.c: 149: _delay((unsigned long)((22)*(8000000/4000000.0)));
  2238   001142  0E0E               	movlw	14
  2239   001144                     u1187:
  2240   001144  2EE8               	decfsz	wreg,f,c
  2241   001146  D7FE               	bra	u1187
  2242   001148  D000               	nop2	
  2243                           
  2244                           ;Laboratorio5.c: 150: if (RC2 == 1) {
  2245   00114A  A482               	btfss	3970,2,c	;volatile
  2246   00114C  D004               	goto	u60
  2247                           
  2248                           ;Laboratorio5.c: 151: res = 1;
  2249   00114E  0E01               	movlw	1
  2250   001150  6E03               	movwf	LeerBit@res^0,c
  2251   001152                     l230:
  2252   001152  B482               	btfsc	3970,2,c	;volatile
  2253   001154  D7FE               	goto	l230
  2254   001156                     u60:
  2255                           
  2256                           ;Laboratorio5.c: 153: };Laboratorio5.c: 154: return res;
  2257   001156  5003               	movf	LeerBit@res^0,w,c
  2258   001158  0012               	return		;funcret
  2259   00115A                     __end_of_LeerBit:
  2260                           	callstack 0
  2261                           
  2262 ;; *************** function _InicializaLCD *****************
  2263 ;; Defined at:
  2264 ;;		line 70 in file "LibLCDXC8.h"
  2265 ;; Parameters:    Size  Location     Type
  2266 ;;		None
  2267 ;; Auto vars:     Size  Location     Type
  2268 ;;		None
  2269 ;; Return value:  Size  Location     Type
  2270 ;;                  1    wreg      void 
  2271 ;; Registers used:
  2272 ;;		wreg, status,2, status,0, cstack
  2273 ;; Tracked objects:
  2274 ;;		On entry : 0/0
  2275 ;;		On exit  : 0/0
  2276 ;;		Unchanged: 0/0
  2277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2278 ;;      Params:         0       0       0       0       0       0       0       0       0
  2279 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2280 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2281 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2282 ;;Total ram usage:        0 bytes
  2283 ;; Hardware stack levels used: 1
  2284 ;; Hardware stack levels required when called: 5
  2285 ;; This function calls:
  2286 ;;		_BorraLCD
  2287 ;;		_EnviaDato
  2288 ;;		_HabilitaLCD
  2289 ;;		_RetardoLCD
  2290 ;; This function is called by:
  2291 ;;		_main
  2292 ;; This function uses a non-reentrant model
  2293 ;;
  2294                           
  2295                           	psect	text16
  2296   000D7C                     __ptext16:
  2297                           	callstack 0
  2298   000D7C                     _InicializaLCD:
  2299                           	callstack 25
  2300                           
  2301                           ;LibLCDXC8.h: 72: LATD6=0;
  2302                           
  2303                           ;incstack = 0
  2304   000D7C  9C8C               	bcf	3980,6,c	;volatile
  2305                           
  2306                           ;LibLCDXC8.h: 73: if(interfaz==4)
  2307   000D7E  0E04               	movlw	4
  2308   000D80  1822               	xorwf	_interfaz^0,w,c
  2309   000D82  A4D8               	btfss	status,2,c
  2310   000D84  D004               	goto	l1304
  2311                           
  2312                           ;LibLCDXC8.h: 74: LATD=(LATD & 0b00001111) | 0x30;
  2313   000D86  508C               	movf	140,w,c	;volatile
  2314   000D88  0B0F               	andlw	15
  2315   000D8A  0930               	iorlw	48
  2316   000D8C  D001               	goto	L4
  2317   000D8E                     l1304:
  2318                           
  2319                           ;LibLCDXC8.h: 75: else;LibLCDXC8.h: 76: LATD=0x3F;
  2320   000D8E  0E3F               	movlw	63
  2321   000D90                     L4:
  2322   000D90  6E8C               	movwf	140,c	;volatile
  2323                           
  2324                           ;LibLCDXC8.h: 77: HabilitaLCD();
  2325   000D92  EC4C  F009         	call	_HabilitaLCD	;wreg free
  2326                           
  2327                           ;LibLCDXC8.h: 78: RetardoLCD(1);
  2328   000D96  0E01               	movlw	1
  2329   000D98  EC93  F007         	call	_RetardoLCD
  2330                           
  2331                           ;LibLCDXC8.h: 79: if(interfaz==4)
  2332   000D9C  0E04               	movlw	4
  2333   000D9E  1822               	xorwf	_interfaz^0,w,c
  2334   000DA0  A4D8               	btfss	status,2,c
  2335   000DA2  D004               	goto	l1314
  2336                           
  2337                           ;LibLCDXC8.h: 80: LATD=(LATD & 0b00001111) | 0x30;
  2338   000DA4  508C               	movf	140,w,c	;volatile
  2339   000DA6  0B0F               	andlw	15
  2340   000DA8  0930               	iorlw	48
  2341   000DAA  D001               	goto	L5
  2342   000DAC                     l1314:
  2343                           
  2344                           ;LibLCDXC8.h: 81: else;LibLCDXC8.h: 82: LATD=0x3F;
  2345   000DAC  0E3F               	movlw	63
  2346   000DAE                     L5:
  2347   000DAE  6E8C               	movwf	140,c	;volatile
  2348                           
  2349                           ;LibLCDXC8.h: 83: HabilitaLCD();
  2350   000DB0  EC4C  F009         	call	_HabilitaLCD	;wreg free
  2351                           
  2352                           ;LibLCDXC8.h: 84: RetardoLCD(3);
  2353   000DB4  0E03               	movlw	3
  2354   000DB6  EC93  F007         	call	_RetardoLCD
  2355                           
  2356                           ;LibLCDXC8.h: 85: if(interfaz==4)
  2357   000DBA  0E04               	movlw	4
  2358   000DBC  1822               	xorwf	_interfaz^0,w,c
  2359   000DBE  A4D8               	btfss	status,2,c
  2360   000DC0  D004               	goto	l1324
  2361                           
  2362                           ;LibLCDXC8.h: 86: LATD=(LATD & 0b00001111) | 0x30;
  2363   000DC2  508C               	movf	140,w,c	;volatile
  2364   000DC4  0B0F               	andlw	15
  2365   000DC6  0930               	iorlw	48
  2366   000DC8  D001               	goto	L6
  2367   000DCA                     l1324:
  2368                           
  2369                           ;LibLCDXC8.h: 87: else;LibLCDXC8.h: 88: LATD=0x3F;
  2370   000DCA  0E3F               	movlw	63
  2371   000DCC                     L6:
  2372   000DCC  6E8C               	movwf	140,c	;volatile
  2373                           
  2374                           ;LibLCDXC8.h: 89: HabilitaLCD();
  2375   000DCE  EC4C  F009         	call	_HabilitaLCD	;wreg free
  2376                           
  2377                           ;LibLCDXC8.h: 90: RetardoLCD(4);
  2378   000DD2  0E04               	movlw	4
  2379   000DD4  EC93  F007         	call	_RetardoLCD
  2380                           
  2381                           ;LibLCDXC8.h: 91: if(interfaz==4){
  2382   000DD8  0E04               	movlw	4
  2383   000DDA  1822               	xorwf	_interfaz^0,w,c
  2384   000DDC  A4D8               	btfss	status,2,c
  2385   000DDE  D011               	goto	l1344
  2386                           
  2387                           ;LibLCDXC8.h: 92: LATD=(LATD & 0b00001111) | 0x20;
  2388   000DE0  508C               	movf	140,w,c	;volatile
  2389   000DE2  0B0F               	andlw	15
  2390   000DE4  0920               	iorlw	32
  2391   000DE6  6E8C               	movwf	140,c	;volatile
  2392                           
  2393                           ;LibLCDXC8.h: 93: HabilitaLCD();
  2394   000DE8  EC4C  F009         	call	_HabilitaLCD	;wreg free
  2395                           
  2396                           ;LibLCDXC8.h: 94: RetardoLCD(4);
  2397   000DEC  0E04               	movlw	4
  2398   000DEE  EC93  F007         	call	_RetardoLCD
  2399                           
  2400                           ;LibLCDXC8.h: 95: EnviaDato(0x2F);
  2401   000DF2  0E2F               	movlw	47
  2402   000DF4  EC16  F008         	call	_EnviaDato
  2403                           
  2404                           ;LibLCDXC8.h: 96: HabilitaLCD();
  2405   000DF8  EC4C  F009         	call	_HabilitaLCD	;wreg free
  2406                           
  2407                           ;LibLCDXC8.h: 97: RetardoLCD(4);
  2408   000DFC  0E04               	movlw	4
  2409   000DFE  EC93  F007         	call	_RetardoLCD
  2410   000E02                     l1344:
  2411                           
  2412                           ;LibLCDXC8.h: 98: };LibLCDXC8.h: 99: BorraLCD();
  2413   000E02  EC31  F009         	call	_BorraLCD	;wreg free
  2414                           
  2415                           ;LibLCDXC8.h: 100: EnviaDato(0xF);
  2416   000E06  0E0F               	movlw	15
  2417   000E08  EC16  F008         	call	_EnviaDato
  2418                           
  2419                           ;LibLCDXC8.h: 101: HabilitaLCD();
  2420   000E0C  EC4C  F009         	call	_HabilitaLCD	;wreg free
  2421                           
  2422                           ;LibLCDXC8.h: 102: RetardoLCD(4);
  2423   000E10  0E04               	movlw	4
  2424   000E12  EC93  F007         	call	_RetardoLCD
  2425   000E16  0012               	return		;funcret
  2426   000E18                     __end_of_InicializaLCD:
  2427                           	callstack 0
  2428                           
  2429 ;; *************** function _BorraLCD *****************
  2430 ;; Defined at:
  2431 ;;		line 111 in file "LibLCDXC8.h"
  2432 ;; Parameters:    Size  Location     Type
  2433 ;;		None
  2434 ;; Auto vars:     Size  Location     Type
  2435 ;;		None
  2436 ;; Return value:  Size  Location     Type
  2437 ;;                  1    wreg      void 
  2438 ;; Registers used:
  2439 ;;		wreg, status,2, status,0, cstack
  2440 ;; Tracked objects:
  2441 ;;		On entry : 0/0
  2442 ;;		On exit  : 0/0
  2443 ;;		Unchanged: 0/0
  2444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2445 ;;      Params:         0       0       0       0       0       0       0       0       0
  2446 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2447 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2448 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2449 ;;Total ram usage:        0 bytes
  2450 ;; Hardware stack levels used: 1
  2451 ;; Hardware stack levels required when called: 4
  2452 ;; This function calls:
  2453 ;;		_EnviaDato
  2454 ;;		_HabilitaLCD
  2455 ;;		_RetardoLCD
  2456 ;; This function is called by:
  2457 ;;		_InicializaLCD
  2458 ;;		_main
  2459 ;;		_TransmitirDatos
  2460 ;; This function uses a non-reentrant model
  2461 ;;
  2462                           
  2463                           	psect	text17
  2464   001262                     __ptext17:
  2465                           	callstack 0
  2466   001262                     _BorraLCD:
  2467                           	callstack 25
  2468                           
  2469                           ;LibLCDXC8.h: 113: LATD6=0;
  2470                           
  2471                           ;incstack = 0
  2472   001262  9C8C               	bcf	3980,6,c	;volatile
  2473                           
  2474                           ;LibLCDXC8.h: 114: EnviaDato(0x01);
  2475   001264  0E01               	movlw	1
  2476   001266  EC16  F008         	call	_EnviaDato
  2477                           
  2478                           ;LibLCDXC8.h: 115: HabilitaLCD();
  2479   00126A  EC4C  F009         	call	_HabilitaLCD	;wreg free
  2480                           
  2481                           ;LibLCDXC8.h: 116: RetardoLCD(2);
  2482   00126E  0E02               	movlw	2
  2483   001270  EC93  F007         	call	_RetardoLCD
  2484   001274  0012               	return		;funcret
  2485   001276                     __end_of_BorraLCD:
  2486                           	callstack 0
  2487                           
  2488 ;; *************** function _EnviaDato *****************
  2489 ;; Defined at:
  2490 ;;		line 58 in file "LibLCDXC8.h"
  2491 ;; Parameters:    Size  Location     Type
  2492 ;;  a               1    wreg     unsigned char 
  2493 ;; Auto vars:     Size  Location     Type
  2494 ;;  a               1    5[COMRAM] unsigned char 
  2495 ;; Return value:  Size  Location     Type
  2496 ;;                  1    wreg      void 
  2497 ;; Registers used:
  2498 ;;		wreg, status,2, status,0, cstack
  2499 ;; Tracked objects:
  2500 ;;		On entry : 0/0
  2501 ;;		On exit  : 0/0
  2502 ;;		Unchanged: 0/0
  2503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2504 ;;      Params:         0       0       0       0       0       0       0       0       0
  2505 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2506 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2507 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2508 ;;Total ram usage:        2 bytes
  2509 ;; Hardware stack levels used: 1
  2510 ;; Hardware stack levels required when called: 3
  2511 ;; This function calls:
  2512 ;;		_HabilitaLCD
  2513 ;;		_RetardoLCD
  2514 ;; This function is called by:
  2515 ;;		_InicializaLCD
  2516 ;;		_BorraLCD
  2517 ;;		_EscribeLCD_c
  2518 ;;		_DireccionaLCD
  2519 ;; This function uses a non-reentrant model
  2520 ;;
  2521                           
  2522                           	psect	text18
  2523   00102C                     __ptext18:
  2524                           	callstack 0
  2525   00102C                     _EnviaDato:
  2526                           	callstack 24
  2527                           
  2528                           ;incstack = 0
  2529                           ;EnviaDato@a stored from wreg
  2530   00102C  6E06               	movwf	EnviaDato@a^0,c
  2531                           
  2532                           ;LibLCDXC8.h: 59: if(interfaz==4){
  2533   00102E  0E04               	movlw	4
  2534   001030  1822               	xorwf	_interfaz^0,w,c
  2535   001032  A4D8               	btfss	status,2,c
  2536   001034  D017               	goto	l1084
  2537                           
  2538                           ;LibLCDXC8.h: 60: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  2539   001036  C006  F005         	movff	EnviaDato@a,??_EnviaDato
  2540   00103A  0EF0               	movlw	240
  2541   00103C  1605               	andwf	??_EnviaDato^0,f,c
  2542   00103E  508C               	movf	140,w,c	;volatile
  2543   001040  0B0F               	andlw	15
  2544   001042  1005               	iorwf	??_EnviaDato^0,w,c
  2545   001044  6E8C               	movwf	140,c	;volatile
  2546                           
  2547                           ;LibLCDXC8.h: 61: HabilitaLCD();
  2548   001046  EC4C  F009         	call	_HabilitaLCD	;wreg free
  2549                           
  2550                           ;LibLCDXC8.h: 62: RetardoLCD(1);
  2551   00104A  0E01               	movlw	1
  2552   00104C  EC93  F007         	call	_RetardoLCD
  2553                           
  2554                           ;LibLCDXC8.h: 63: LATD=(LATD & 0b00001111) | (a<<4);
  2555   001050  C006  F005         	movff	EnviaDato@a,??_EnviaDato
  2556   001054  3A05               	swapf	??_EnviaDato^0,f,c
  2557   001056  0EF0               	movlw	240
  2558   001058  1605               	andwf	??_EnviaDato^0,f,c
  2559   00105A  508C               	movf	140,w,c	;volatile
  2560   00105C  0B0F               	andlw	15
  2561   00105E  1005               	iorwf	??_EnviaDato^0,w,c
  2562   001060  6E8C               	movwf	140,c	;volatile
  2563                           
  2564                           ;LibLCDXC8.h: 66: }else if(interfaz==8){
  2565   001062  0012               	return	
  2566   001064                     l1084:
  2567   001064  0E08               	movlw	8
  2568   001066  1822               	xorwf	_interfaz^0,w,c
  2569   001068  A4D8               	btfss	status,2,c
  2570   00106A  0012               	return	
  2571                           
  2572                           ;LibLCDXC8.h: 67: LATD=a;
  2573   00106C  C006  FF8C         	movff	EnviaDato@a,3980	;volatile
  2574   001070  0012               	return		;funcret
  2575   001072                     __end_of_EnviaDato:
  2576                           	callstack 0
  2577                           
  2578 ;; *************** function _RetardoLCD *****************
  2579 ;; Defined at:
  2580 ;;		line 295 in file "LibLCDXC8.h"
  2581 ;; Parameters:    Size  Location     Type
  2582 ;;  a               1    wreg     unsigned char 
  2583 ;; Auto vars:     Size  Location     Type
  2584 ;;  a               1    3[COMRAM] unsigned char 
  2585 ;; Return value:  Size  Location     Type
  2586 ;;                  1    wreg      void 
  2587 ;; Registers used:
  2588 ;;		wreg, status,2, status,0
  2589 ;; Tracked objects:
  2590 ;;		On entry : 0/0
  2591 ;;		On exit  : 0/0
  2592 ;;		Unchanged: 0/0
  2593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2594 ;;      Params:         0       0       0       0       0       0       0       0       0
  2595 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2596 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2597 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2598 ;;Total ram usage:        2 bytes
  2599 ;; Hardware stack levels used: 1
  2600 ;; Hardware stack levels required when called: 2
  2601 ;; This function calls:
  2602 ;;		Nothing
  2603 ;; This function is called by:
  2604 ;;		_EnviaDato
  2605 ;;		_InicializaLCD
  2606 ;;		_BorraLCD
  2607 ;;		_EscribeLCD_c
  2608 ;;		_DireccionaLCD
  2609 ;; This function uses a non-reentrant model
  2610 ;;
  2611                           
  2612                           	psect	text19
  2613   000F26                     __ptext19:
  2614                           	callstack 0
  2615   000F26                     _RetardoLCD:
  2616                           	callstack 25
  2617                           
  2618                           ;incstack = 0
  2619                           ;RetardoLCD@a stored from wreg
  2620   000F26  6E04               	movwf	RetardoLCD@a^0,c
  2621                           
  2622                           ;LibLCDXC8.h: 296: switch(a){
  2623   000F28  D023               	goto	l1072
  2624   000F2A                     l1062:
  2625   000F2A  0E62               	movlw	98
  2626   000F2C  6E03               	movwf	??_RetardoLCD^0,c
  2627   000F2E  0E66               	movlw	102
  2628   000F30                     u1197:
  2629   000F30  2EE8               	decfsz	wreg,f,c
  2630   000F32  D7FE               	bra	u1197
  2631   000F34  2E03               	decfsz	??_RetardoLCD^0,f,c
  2632   000F36  D7FC               	bra	u1197
  2633                           
  2634                           ;LibLCDXC8.h: 299: break;
  2635   000F38  0012               	return	
  2636   000F3A                     l1064:
  2637   000F3A  0E07               	movlw	7
  2638   000F3C  6E03               	movwf	??_RetardoLCD^0,c
  2639   000F3E  0E7D               	movlw	125
  2640   000F40                     u1207:
  2641   000F40  2EE8               	decfsz	wreg,f,c
  2642   000F42  D7FE               	bra	u1207
  2643   000F44  2E03               	decfsz	??_RetardoLCD^0,f,c
  2644   000F46  D7FC               	bra	u1207
  2645   000F48  F000               	nop	
  2646                           
  2647                           ;LibLCDXC8.h: 301: _delay((unsigned long)((640)*(20000000/4000000.0)));
  2648   000F4A  0E05               	movlw	5
  2649   000F4C  6E03               	movwf	??_RetardoLCD^0,c
  2650   000F4E  0E26               	movlw	38
  2651   000F50                     u1217:
  2652   000F50  2EE8               	decfsz	wreg,f,c
  2653   000F52  D7FE               	bra	u1217
  2654   000F54  2E03               	decfsz	??_RetardoLCD^0,f,c
  2655   000F56  D7FC               	bra	u1217
  2656   000F58  D000               	nop2	
  2657                           
  2658                           ;LibLCDXC8.h: 303: break;
  2659   000F5A  0012               	return	
  2660   000F5C                     l1066:
  2661   000F5C  0EA6               	movlw	166
  2662   000F5E                     u1227:
  2663   000F5E  2EE8               	decfsz	wreg,f,c
  2664   000F60  D7FE               	bra	u1227
  2665   000F62  D000               	nop2	
  2666                           
  2667                           ;LibLCDXC8.h: 306: break;
  2668   000F64  0012               	return	
  2669   000F66                     l1068:
  2670   000F66  0E42               	movlw	66
  2671   000F68                     u1237:
  2672   000F68  2EE8               	decfsz	wreg,f,c
  2673   000F6A  D7FE               	bra	u1237
  2674   000F6C  D000               	nop2	
  2675                           
  2676                           ;LibLCDXC8.h: 309: break;
  2677   000F6E  0012               	return	
  2678   000F70                     l1072:
  2679   000F70  5004               	movf	RetardoLCD@a^0,w,c
  2680                           
  2681                           ; Switch size 1, requested type "simple"
  2682                           ; Number of cases is 4, Range of values is 1 to 4
  2683                           ; switch strategies available:
  2684                           ; Name         Instructions Cycles
  2685                           ; simple_byte           13     7 (average)
  2686                           ;	Chosen strategy is simple_byte
  2687   000F72  0A01               	xorlw	1	; case 1
  2688   000F74  B4D8               	btfsc	status,2,c
  2689   000F76  D7D9               	goto	l1062
  2690   000F78  0A03               	xorlw	3	; case 2
  2691   000F7A  B4D8               	btfsc	status,2,c
  2692   000F7C  D7DE               	goto	l1064
  2693   000F7E  0A01               	xorlw	1	; case 3
  2694   000F80  B4D8               	btfsc	status,2,c
  2695   000F82  D7EC               	goto	l1066
  2696   000F84  0A07               	xorlw	7	; case 4
  2697   000F86  A4D8               	btfss	status,2,c
  2698   000F88  0012               	return	
  2699   000F8A  D7ED               	goto	l1068
  2700   000F8C                     __end_of_RetardoLCD:
  2701                           	callstack 0
  2702                           
  2703 ;; *************** function _HabilitaLCD *****************
  2704 ;; Defined at:
  2705 ;;		line 104 in file "LibLCDXC8.h"
  2706 ;; Parameters:    Size  Location     Type
  2707 ;;		None
  2708 ;; Auto vars:     Size  Location     Type
  2709 ;;		None
  2710 ;; Return value:  Size  Location     Type
  2711 ;;                  1    wreg      void 
  2712 ;; Registers used:
  2713 ;;		wreg
  2714 ;; Tracked objects:
  2715 ;;		On entry : 0/0
  2716 ;;		On exit  : 0/0
  2717 ;;		Unchanged: 0/0
  2718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2719 ;;      Params:         0       0       0       0       0       0       0       0       0
  2720 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2721 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2722 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2723 ;;Total ram usage:        0 bytes
  2724 ;; Hardware stack levels used: 1
  2725 ;; Hardware stack levels required when called: 2
  2726 ;; This function calls:
  2727 ;;		Nothing
  2728 ;; This function is called by:
  2729 ;;		_EnviaDato
  2730 ;;		_InicializaLCD
  2731 ;;		_BorraLCD
  2732 ;;		_EscribeLCD_c
  2733 ;;		_DireccionaLCD
  2734 ;; This function uses a non-reentrant model
  2735 ;;
  2736                           
  2737                           	psect	text20
  2738   001298                     __ptext20:
  2739                           	callstack 0
  2740   001298                     _HabilitaLCD:
  2741                           	callstack 25
  2742                           
  2743                           ;LibLCDXC8.h: 106: LATD7=1;
  2744                           
  2745                           ;incstack = 0
  2746   001298  8E8C               	bsf	3980,7,c	;volatile
  2747                           
  2748                           ;LibLCDXC8.h: 107: _delay((unsigned long)((40)*(20000000/4000000.0)));
  2749   00129A  0E42               	movlw	66
  2750   00129C                     u1247:
  2751   00129C  2EE8               	decfsz	wreg,f,c
  2752   00129E  D7FE               	bra	u1247
  2753   0012A0  D000               	nop2	
  2754                           
  2755                           ;LibLCDXC8.h: 109: LATD7=0;
  2756   0012A2  9E8C               	bcf	3980,7,c	;volatile
  2757   0012A4  0012               	return		;funcret
  2758   0012A6                     __end_of_HabilitaLCD:
  2759                           	callstack 0
  2760                           
  2761 ;; *************** function _GuardarDatoEnEEPROM *****************
  2762 ;; Defined at:
  2763 ;;		line 287 in file "Laboratorio5.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;  dir             2    2[COMRAM] unsigned int 
  2766 ;;  dato            1    4[COMRAM] unsigned char 
  2767 ;; Auto vars:     Size  Location     Type
  2768 ;;		None
  2769 ;; Return value:  Size  Location     Type
  2770 ;;                  1    wreg      void 
  2771 ;; Registers used:
  2772 ;;		wreg, status,2
  2773 ;; Tracked objects:
  2774 ;;		On entry : 0/0
  2775 ;;		On exit  : 0/0
  2776 ;;		Unchanged: 0/0
  2777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2778 ;;      Params:         3       0       0       0       0       0       0       0       0
  2779 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2780 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2781 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2782 ;;Total ram usage:        3 bytes
  2783 ;; Hardware stack levels used: 1
  2784 ;; Hardware stack levels required when called: 2
  2785 ;; This function calls:
  2786 ;;		Nothing
  2787 ;; This function is called by:
  2788 ;;		_main
  2789 ;; This function uses a non-reentrant model
  2790 ;;
  2791                           
  2792                           	psect	text21
  2793   0011D6                     __ptext21:
  2794                           	callstack 0
  2795   0011D6                     _GuardarDatoEnEEPROM:
  2796                           	callstack 28
  2797                           
  2798                           ;Laboratorio5.c: 288: EEADR = dir;
  2799                           
  2800                           ;incstack = 0
  2801   0011D6  C003  FFA9         	movff	GuardarDatoEnEEPROM@dir,4009	;volatile
  2802                           
  2803                           ;Laboratorio5.c: 289: EEDATA = dato;
  2804   0011DA  C005  FFA8         	movff	GuardarDatoEnEEPROM@dato,4008	;volatile
  2805                           
  2806                           ;Laboratorio5.c: 291: EEPGD = 0;
  2807   0011DE  9EA6               	bcf	4006,7,c	;volsfr
  2808                           
  2809                           ;Laboratorio5.c: 292: CFGS = 0;
  2810   0011E0  9CA6               	bcf	4006,6,c	;volsfr
  2811                           
  2812                           ;Laboratorio5.c: 293: WREN = 1;
  2813   0011E2  84A6               	bsf	4006,2,c	;volsfr
  2814                           
  2815                           ;Laboratorio5.c: 295: GIE = 0;
  2816   0011E4  9EF2               	bcf	4082,7,c	;volatile
  2817                           
  2818                           ;Laboratorio5.c: 297: EECON2 = 0x55;
  2819   0011E6  0E55               	movlw	85
  2820   0011E8  6EA7               	movwf	167,c	;volsfr
  2821                           
  2822                           ;Laboratorio5.c: 298: EECON2 = 0xAA;
  2823   0011EA  0EAA               	movlw	170
  2824   0011EC  6EA7               	movwf	167,c	;volsfr
  2825                           
  2826                           ;Laboratorio5.c: 299: WR = 1;
  2827   0011EE  82A6               	bsf	4006,1,c	;volsfr
  2828                           
  2829                           ;Laboratorio5.c: 300: GIE = 1;
  2830   0011F0  8EF2               	bsf	4082,7,c	;volatile
  2831   0011F2                     l286:
  2832   0011F2  A8A1               	btfss	4001,4,c	;volatile
  2833   0011F4  D7FE               	goto	l286
  2834                           
  2835                           ;Laboratorio5.c: 302: EEIF = 0;
  2836   0011F6  98A1               	bcf	4001,4,c	;volatile
  2837                           
  2838                           ;Laboratorio5.c: 303: WREN = 0;
  2839   0011F8  94A6               	bcf	4006,2,c	;volsfr
  2840   0011FA  0012               	return		;funcret
  2841   0011FC                     __end_of_GuardarDatoEnEEPROM:
  2842                           	callstack 0
  2843                           
  2844 ;; *************** function _Conversion *****************
  2845 ;; Defined at:
  2846 ;;		line 280 in file "Laboratorio5.c"
  2847 ;; Parameters:    Size  Location     Type
  2848 ;;  canal           1    wreg     unsigned char 
  2849 ;; Auto vars:     Size  Location     Type
  2850 ;;  canal           1    2[COMRAM] unsigned char 
  2851 ;; Return value:  Size  Location     Type
  2852 ;;                  2   80[None  ] unsigned int 
  2853 ;; Registers used:
  2854 ;;		wreg, status,2, status,0
  2855 ;; Tracked objects:
  2856 ;;		On entry : 0/0
  2857 ;;		On exit  : 0/0
  2858 ;;		Unchanged: 0/0
  2859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2860 ;;      Params:         0       0       0       0       0       0       0       0       0
  2861 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2862 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2863 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2864 ;;Total ram usage:        1 bytes
  2865 ;; Hardware stack levels used: 1
  2866 ;; Hardware stack levels required when called: 2
  2867 ;; This function calls:
  2868 ;;		Nothing
  2869 ;; This function is called by:
  2870 ;;		_main
  2871 ;; This function uses a non-reentrant model
  2872 ;;
  2873                           
  2874                           	psect	text22
  2875   001276                     __ptext22:
  2876                           	callstack 0
  2877   001276                     _Conversion:
  2878                           	callstack 28
  2879                           
  2880                           ;incstack = 0
  2881                           ;Conversion@canal stored from wreg
  2882   001276  6E03               	movwf	Conversion@canal^0,c
  2883                           
  2884                           ;Laboratorio5.c: 281: ADCON0 = 0b00000001 | (canal << 2);
  2885   001278  4403               	rlncf	Conversion@canal^0,w,c
  2886   00127A  46E8               	rlncf	wreg,f,c
  2887   00127C  0BFC               	andlw	252
  2888   00127E  0901               	iorlw	1
  2889   001280  6EC2               	movwf	194,c	;volatile
  2890                           
  2891                           ;Laboratorio5.c: 282: GO = 1;
  2892   001282  82C2               	bsf	4034,1,c	;volatile
  2893   001284                     l280:
  2894   001284  A2C2               	btfss	4034,1,c	;volatile
  2895   001286  0012               	return	
  2896   001288  D7FD               	goto	l280
  2897   00128A                     __end_of_Conversion:
  2898                           	callstack 0
  2899                           
  2900 ;; *************** function _ConfiguraLCD *****************
  2901 ;; Defined at:
  2902 ;;		line 54 in file "LibLCDXC8.h"
  2903 ;; Parameters:    Size  Location     Type
  2904 ;;  a               1    wreg     unsigned char 
  2905 ;; Auto vars:     Size  Location     Type
  2906 ;;  a               1    2[COMRAM] unsigned char 
  2907 ;; Return value:  Size  Location     Type
  2908 ;;                  1    wreg      void 
  2909 ;; Registers used:
  2910 ;;		wreg, status,2, status,0
  2911 ;; Tracked objects:
  2912 ;;		On entry : 0/0
  2913 ;;		On exit  : 0/0
  2914 ;;		Unchanged: 0/0
  2915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2916 ;;      Params:         0       0       0       0       0       0       0       0       0
  2917 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2918 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2919 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2920 ;;Total ram usage:        1 bytes
  2921 ;; Hardware stack levels used: 1
  2922 ;; Hardware stack levels required when called: 2
  2923 ;; This function calls:
  2924 ;;		Nothing
  2925 ;; This function is called by:
  2926 ;;		_main
  2927 ;; This function uses a non-reentrant model
  2928 ;;
  2929                           
  2930                           	psect	text23
  2931   00121E                     __ptext23:
  2932                           	callstack 0
  2933   00121E                     _ConfiguraLCD:
  2934                           	callstack 28
  2935                           
  2936                           ;incstack = 0
  2937                           ;ConfiguraLCD@a stored from wreg
  2938   00121E  6E03               	movwf	ConfiguraLCD@a^0,c
  2939                           
  2940                           ;LibLCDXC8.h: 55: if(a==4 | a ==8)
  2941   001220  0E04               	movlw	4
  2942   001222  1803               	xorwf	ConfiguraLCD@a^0,w,c
  2943   001224  B4D8               	btfsc	status,2,c
  2944   001226  D004               	goto	u280
  2945   001228  0E08               	movlw	8
  2946   00122A  1803               	xorwf	ConfiguraLCD@a^0,w,c
  2947   00122C  A4D8               	btfss	status,2,c
  2948   00122E  0012               	return	
  2949   001230                     u280:
  2950                           
  2951                           ;LibLCDXC8.h: 56: interfaz=a;
  2952   001230  C003  F022         	movff	ConfiguraLCD@a,_interfaz
  2953   001234  0012               	return		;funcret
  2954   001236                     __end_of_ConfiguraLCD:
  2955                           	callstack 0
  2956                           
  2957 ;; *************** function _ColorRGB *****************
  2958 ;; Defined at:
  2959 ;;		line 244 in file "Laboratorio5.c"
  2960 ;; Parameters:    Size  Location     Type
  2961 ;;  val             2    2[COMRAM] unsigned int 
  2962 ;; Auto vars:     Size  Location     Type
  2963 ;;		None
  2964 ;; Return value:  Size  Location     Type
  2965 ;;                  1    wreg      void 
  2966 ;; Registers used:
  2967 ;;		wreg, status,2, status,0
  2968 ;; Tracked objects:
  2969 ;;		On entry : 0/0
  2970 ;;		On exit  : 0/0
  2971 ;;		Unchanged: 0/0
  2972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2973 ;;      Params:         2       0       0       0       0       0       0       0       0
  2974 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2975 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2976 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2977 ;;Total ram usage:        2 bytes
  2978 ;; Hardware stack levels used: 1
  2979 ;; Hardware stack levels required when called: 2
  2980 ;; This function calls:
  2981 ;;		Nothing
  2982 ;; This function is called by:
  2983 ;;		_main
  2984 ;; This function uses a non-reentrant model
  2985 ;;
  2986                           
  2987                           	psect	text24
  2988   000C94                     __ptext24:
  2989                           	callstack 0
  2990   000C94                     _ColorRGB:
  2991                           	callstack 28
  2992                           
  2993                           ;Laboratorio5.c: 245: if (val < 22) {
  2994                           
  2995                           ;incstack = 0
  2996   000C94  5004               	movf	(ColorRGB@val+1)^0,w,c
  2997   000C96  E108               	bnz	l1808
  2998   000C98  0E16               	movlw	22
  2999   000C9A  5C03               	subwf	ColorRGB@val^0,w,c
  3000   000C9C  B0D8               	btfsc	status,0,c
  3001   000C9E  D004               	goto	l1808
  3002                           
  3003                           ;Laboratorio5.c: 246: RB7 = 0;
  3004   000CA0  9E81               	bcf	3969,7,c	;volatile
  3005                           
  3006                           ;Laboratorio5.c: 247: RB6 = 0;
  3007   000CA2  9C81               	bcf	3969,6,c	;volatile
  3008                           
  3009                           ;Laboratorio5.c: 248: RB5 = 0;
  3010   000CA4  9A81               	bcf	3969,5,c	;volatile
  3011                           
  3012                           ;Laboratorio5.c: 249: } else if (val >= 22 && val < 25) {
  3013   000CA6  0012               	return	
  3014   000CA8                     l1808:
  3015   000CA8  5004               	movf	(ColorRGB@val+1)^0,w,c
  3016   000CAA  E104               	bnz	u850
  3017   000CAC  0E16               	movlw	22
  3018   000CAE  5C03               	subwf	ColorRGB@val^0,w,c
  3019   000CB0  A0D8               	btfss	status,0,c
  3020   000CB2  D00A               	goto	l1814
  3021   000CB4                     u850:
  3022   000CB4  5004               	movf	(ColorRGB@val+1)^0,w,c
  3023   000CB6  E108               	bnz	l1814
  3024   000CB8  0E19               	movlw	25
  3025   000CBA  5C03               	subwf	ColorRGB@val^0,w,c
  3026   000CBC  B0D8               	btfsc	status,0,c
  3027   000CBE  D004               	goto	l1814
  3028                           
  3029                           ;Laboratorio5.c: 250: RB7 = 1;
  3030   000CC0  8E81               	bsf	3969,7,c	;volatile
  3031                           
  3032                           ;Laboratorio5.c: 251: RB6 = 0;
  3033   000CC2  9C81               	bcf	3969,6,c	;volatile
  3034                           
  3035                           ;Laboratorio5.c: 252: RB5 = 1;
  3036   000CC4  8A81               	bsf	3969,5,c	;volatile
  3037                           
  3038                           ;Laboratorio5.c: 253: } else if (val >= 25 && val < 28) {
  3039   000CC6  0012               	return	
  3040   000CC8                     l1814:
  3041   000CC8  5004               	movf	(ColorRGB@val+1)^0,w,c
  3042   000CCA  E104               	bnz	u870
  3043   000CCC  0E19               	movlw	25
  3044   000CCE  5C03               	subwf	ColorRGB@val^0,w,c
  3045   000CD0  A0D8               	btfss	status,0,c
  3046   000CD2  D00A               	goto	l1820
  3047   000CD4                     u870:
  3048   000CD4  5004               	movf	(ColorRGB@val+1)^0,w,c
  3049   000CD6  E108               	bnz	l1820
  3050   000CD8  0E1C               	movlw	28
  3051   000CDA  5C03               	subwf	ColorRGB@val^0,w,c
  3052   000CDC  B0D8               	btfsc	status,0,c
  3053   000CDE  D004               	goto	l1820
  3054                           
  3055                           ;Laboratorio5.c: 254: RB7 = 0;
  3056   000CE0  9E81               	bcf	3969,7,c	;volatile
  3057                           
  3058                           ;Laboratorio5.c: 255: RB6 = 0;
  3059   000CE2  9C81               	bcf	3969,6,c	;volatile
  3060                           
  3061                           ;Laboratorio5.c: 256: RB5 = 1;
  3062   000CE4  8A81               	bsf	3969,5,c	;volatile
  3063                           
  3064                           ;Laboratorio5.c: 257: } else if (val >= 28 && val < 31) {
  3065   000CE6  0012               	return	
  3066   000CE8                     l1820:
  3067   000CE8  5004               	movf	(ColorRGB@val+1)^0,w,c
  3068   000CEA  E104               	bnz	u890
  3069   000CEC  0E1C               	movlw	28
  3070   000CEE  5C03               	subwf	ColorRGB@val^0,w,c
  3071   000CF0  A0D8               	btfss	status,0,c
  3072   000CF2  D00A               	goto	l1826
  3073   000CF4                     u890:
  3074   000CF4  5004               	movf	(ColorRGB@val+1)^0,w,c
  3075   000CF6  E108               	bnz	l1826
  3076   000CF8  0E1F               	movlw	31
  3077   000CFA  5C03               	subwf	ColorRGB@val^0,w,c
  3078   000CFC  B0D8               	btfsc	status,0,c
  3079   000CFE  D004               	goto	l1826
  3080                           
  3081                           ;Laboratorio5.c: 258: RB7 = 0;
  3082   000D00  9E81               	bcf	3969,7,c	;volatile
  3083                           
  3084                           ;Laboratorio5.c: 259: RB6 = 1;
  3085   000D02  8C81               	bsf	3969,6,c	;volatile
  3086                           
  3087                           ;Laboratorio5.c: 260: RB5 = 1;
  3088   000D04  8A81               	bsf	3969,5,c	;volatile
  3089                           
  3090                           ;Laboratorio5.c: 261: } else if (val >= 31 && val < 34) {
  3091   000D06  0012               	return	
  3092   000D08                     l1826:
  3093   000D08  5004               	movf	(ColorRGB@val+1)^0,w,c
  3094   000D0A  E104               	bnz	u910
  3095   000D0C  0E1F               	movlw	31
  3096   000D0E  5C03               	subwf	ColorRGB@val^0,w,c
  3097   000D10  A0D8               	btfss	status,0,c
  3098   000D12  D00A               	goto	l1832
  3099   000D14                     u910:
  3100   000D14  5004               	movf	(ColorRGB@val+1)^0,w,c
  3101   000D16  E108               	bnz	l1832
  3102   000D18  0E22               	movlw	34
  3103   000D1A  5C03               	subwf	ColorRGB@val^0,w,c
  3104   000D1C  B0D8               	btfsc	status,0,c
  3105   000D1E  D004               	goto	l1832
  3106                           
  3107                           ;Laboratorio5.c: 262: RB7 = 0;
  3108   000D20  9E81               	bcf	3969,7,c	;volatile
  3109                           
  3110                           ;Laboratorio5.c: 263: RB6 = 1;
  3111   000D22  8C81               	bsf	3969,6,c	;volatile
  3112                           
  3113                           ;Laboratorio5.c: 264: RB5 = 0;
  3114   000D24  9A81               	bcf	3969,5,c	;volatile
  3115                           
  3116                           ;Laboratorio5.c: 265: } else if (val >= 34 && val < 37) {
  3117   000D26  0012               	return	
  3118   000D28                     l1832:
  3119   000D28  5004               	movf	(ColorRGB@val+1)^0,w,c
  3120   000D2A  E104               	bnz	u930
  3121   000D2C  0E22               	movlw	34
  3122   000D2E  5C03               	subwf	ColorRGB@val^0,w,c
  3123   000D30  A0D8               	btfss	status,0,c
  3124   000D32  D00A               	goto	l1838
  3125   000D34                     u930:
  3126   000D34  5004               	movf	(ColorRGB@val+1)^0,w,c
  3127   000D36  E108               	bnz	l1838
  3128   000D38  0E25               	movlw	37
  3129   000D3A  5C03               	subwf	ColorRGB@val^0,w,c
  3130   000D3C  B0D8               	btfsc	status,0,c
  3131   000D3E  D004               	goto	l1838
  3132                           
  3133                           ;Laboratorio5.c: 266: RB7 = 1;
  3134   000D40  8E81               	bsf	3969,7,c	;volatile
  3135                           
  3136                           ;Laboratorio5.c: 267: RB6 = 1;
  3137   000D42  8C81               	bsf	3969,6,c	;volatile
  3138                           
  3139                           ;Laboratorio5.c: 268: RB5 = 0;
  3140   000D44  9A81               	bcf	3969,5,c	;volatile
  3141                           
  3142                           ;Laboratorio5.c: 269: } else if (val >= 37 && val < 40) {
  3143   000D46  0012               	return	
  3144   000D48                     l1838:
  3145   000D48  5004               	movf	(ColorRGB@val+1)^0,w,c
  3146   000D4A  E104               	bnz	u950
  3147   000D4C  0E25               	movlw	37
  3148   000D4E  5C03               	subwf	ColorRGB@val^0,w,c
  3149   000D50  A0D8               	btfss	status,0,c
  3150   000D52  D00A               	goto	l1844
  3151   000D54                     u950:
  3152   000D54  5004               	movf	(ColorRGB@val+1)^0,w,c
  3153   000D56  E108               	bnz	l1844
  3154   000D58  0E28               	movlw	40
  3155   000D5A  5C03               	subwf	ColorRGB@val^0,w,c
  3156   000D5C  B0D8               	btfsc	status,0,c
  3157   000D5E  D004               	goto	l1844
  3158                           
  3159                           ;Laboratorio5.c: 270: RB7 = 1;
  3160   000D60  8E81               	bsf	3969,7,c	;volatile
  3161                           
  3162                           ;Laboratorio5.c: 271: RB6 = 0;
  3163   000D62  9C81               	bcf	3969,6,c	;volatile
  3164                           
  3165                           ;Laboratorio5.c: 272: RB5 = 0;
  3166   000D64  9A81               	bcf	3969,5,c	;volatile
  3167                           
  3168                           ;Laboratorio5.c: 273: } else if (val >= 40) {
  3169   000D66  0012               	return	
  3170   000D68                     l1844:
  3171   000D68  5004               	movf	(ColorRGB@val+1)^0,w,c
  3172   000D6A  E104               	bnz	u970
  3173   000D6C  0E28               	movlw	40
  3174   000D6E  5C03               	subwf	ColorRGB@val^0,w,c
  3175   000D70  A0D8               	btfss	status,0,c
  3176   000D72  0012               	return	
  3177   000D74                     u970:
  3178                           
  3179                           ;Laboratorio5.c: 274: RB7 = 1;
  3180   000D74  8E81               	bsf	3969,7,c	;volatile
  3181                           
  3182                           ;Laboratorio5.c: 275: RB6 = 1;
  3183   000D76  8C81               	bsf	3969,6,c	;volatile
  3184                           
  3185                           ;Laboratorio5.c: 276: RB5 = 1;
  3186   000D78  8A81               	bsf	3969,5,c	;volatile
  3187   000D7A  0012               	return	
  3188   000D7C                     __end_of_ColorRGB:
  3189                           	callstack 0
  3190                           
  3191 ;; *************** function _ISR *****************
  3192 ;; Defined at:
  3193 ;;		line 317 in file "Laboratorio5.c"
  3194 ;; Parameters:    Size  Location     Type
  3195 ;;		None
  3196 ;; Auto vars:     Size  Location     Type
  3197 ;;		None
  3198 ;; Return value:  Size  Location     Type
  3199 ;;                  1    wreg      void 
  3200 ;; Registers used:
  3201 ;;		wreg, status,2, status,0, cstack
  3202 ;; Tracked objects:
  3203 ;;		On entry : 0/0
  3204 ;;		On exit  : 0/0
  3205 ;;		Unchanged: 0/0
  3206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3207 ;;      Params:         0       0       0       0       0       0       0       0       0
  3208 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3209 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3210 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3211 ;;Total ram usage:        2 bytes
  3212 ;; Hardware stack levels used: 1
  3213 ;; Hardware stack levels required when called: 1
  3214 ;; This function calls:
  3215 ;;		_Recibir
  3216 ;; This function is called by:
  3217 ;;		Interrupt level 2
  3218 ;; This function uses a non-reentrant model
  3219 ;;
  3220                           
  3221                           	psect	intcode
  3222   000008                     __pintcode:
  3223                           	callstack 0
  3224   000008                     _ISR:
  3225                           	callstack 24
  3226                           
  3227                           ;incstack = 0
  3228   000008  8223               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3229   00000A  ED0C  F007         	call	int_func,f	;refresh shadow registers
  3230                           
  3231                           	psect	intcode_body
  3232   000E18                     __pintcode_body:
  3233                           	callstack 24
  3234   000E18                     int_func:
  3235                           	callstack 24
  3236   000E18  0006               	pop		; remove dummy address from shadow register refresh
  3237                           
  3238                           ;Laboratorio5.c: 318: if(TMR0IF){
  3239   000E1A  A4F2               	btfss	4082,2,c	;volatile
  3240   000E1C  D00A               	goto	i2l1622
  3241                           
  3242                           ;Laboratorio5.c: 319: TMR0IF=0;
  3243   000E1E  94F2               	bcf	4082,2,c	;volatile
  3244                           
  3245                           ;Laboratorio5.c: 320: RC0 = !RC0;
  3246   000E20  B082               	btfsc	3970,0,c	;volatile
  3247   000E22  D002               	goto	i2u62_40
  3248   000E24  8082               	bsf	3970,0,c	;volatile
  3249   000E26  D001               	goto	i2u63_45
  3250   000E28                     i2u62_40:
  3251   000E28  9082               	bcf	3970,0,c	;volatile
  3252   000E2A                     i2u63_45:
  3253                           
  3254                           ;Laboratorio5.c: 321: TMR0 = 3036;
  3255   000E2A  0E0B               	movlw	11
  3256   000E2C  6ED7               	movwf	215,c	;volatile
  3257   000E2E  0EDC               	movlw	220
  3258   000E30  6ED6               	movwf	214,c	;volatile
  3259   000E32                     i2l1622:
  3260                           
  3261                           ;Laboratorio5.c: 323: };Laboratorio5.c: 324: if(RCIF){
  3262   000E32  BA9E               	btfsc	3998,5,c	;volatile
  3263   000E34  D01A               	goto	i2l1636
  3264   000E36  D033               	goto	i2l306
  3265   000E38                     i2l1626:
  3266                           
  3267                           ;Laboratorio5.c: 327: A=0;
  3268   000E38  0E00               	movlw	0
  3269   000E3A  6E1D               	movwf	(_A+1)^0,c
  3270   000E3C  0E00               	movlw	0
  3271   000E3E  6E1C               	movwf	_A^0,c
  3272                           
  3273                           ;Laboratorio5.c: 328: B=0;
  3274   000E40  0E00               	movlw	0
  3275   000E42  6E1B               	movwf	(_B+1)^0,c
  3276   000E44  0E00               	movlw	0
  3277   000E46  D00F               	goto	L9
  3278   000E48                     i2l1628:
  3279                           
  3280                           ;Laboratorio5.c: 331: A=0;
  3281   000E48  0E00               	movlw	0
  3282   000E4A  6E1D               	movwf	(_A+1)^0,c
  3283   000E4C  0E00               	movlw	0
  3284   000E4E  D007               	goto	L11
  3285   000E50                     i2l1630:
  3286                           
  3287                           ;Laboratorio5.c: 335: A=1;
  3288   000E50  0E00               	movlw	0
  3289   000E52  6E1D               	movwf	(_A+1)^0,c
  3290   000E54  0E01               	movlw	1
  3291   000E56  D7F3               	goto	L10
  3292   000E58                     i2l1632:
  3293                           
  3294                           ;Laboratorio5.c: 339: A=1;
  3295   000E58  0E00               	movlw	0
  3296   000E5A  6E1D               	movwf	(_A+1)^0,c
  3297   000E5C  0E01               	movlw	1
  3298   000E5E                     L11:
  3299   000E5E  6E1C               	movwf	_A^0,c
  3300                           
  3301                           ;Laboratorio5.c: 340: B=1;
  3302   000E60  0E00               	movlw	0
  3303   000E62  6E1B               	movwf	(_B+1)^0,c
  3304   000E64  0E01               	movlw	1
  3305   000E66                     L9:
  3306   000E66  6E1A               	movwf	_B^0,c
  3307                           
  3308                           ;Laboratorio5.c: 341: break;
  3309   000E68  D00E               	goto	i2l1638
  3310   000E6A                     i2l1636:
  3311   000E6A  EC59  F009         	call	_Recibir	;wreg free
  3312                           
  3313                           ; Switch size 1, requested type "simple"
  3314                           ; Number of cases is 4, Range of values is 67 to 82
  3315                           ; switch strategies available:
  3316                           ; Name         Instructions Cycles
  3317                           ; simple_byte           13     7 (average)
  3318                           ;	Chosen strategy is simple_byte
  3319   000E6E  0A43               	xorlw	67	; case 67
  3320   000E70  B4D8               	btfsc	status,2,c
  3321   000E72  D7E2               	goto	i2l1626
  3322   000E74  0A05               	xorlw	5	; case 70
  3323   000E76  B4D8               	btfsc	status,2,c
  3324   000E78  D7EF               	goto	i2l1632
  3325   000E7A  0A0D               	xorlw	13	; case 75
  3326   000E7C  B4D8               	btfsc	status,2,c
  3327   000E7E  D7E4               	goto	i2l1628
  3328   000E80  0A19               	xorlw	25	; case 82
  3329   000E82  B4D8               	btfsc	status,2,c
  3330   000E84  D7E5               	goto	i2l1630
  3331   000E86                     i2l1638:
  3332                           
  3333                           ;Laboratorio5.c: 345: _delay((unsigned long)((100)*(8000000/4000.0)));
  3334   000E86  0E02               	movlw	2
  3335   000E88  6E02               	movwf	(??_ISR+1)^0,c
  3336   000E8A  0E04               	movlw	4
  3337   000E8C  6E01               	movwf	??_ISR^0,c
  3338   000E8E  0EBA               	movlw	186
  3339   000E90                     i2u125_47:
  3340   000E90  2EE8               	decfsz	wreg,f,c
  3341   000E92  D7FE               	bra	i2u125_47
  3342   000E94  2E01               	decfsz	??_ISR^0,f,c
  3343   000E96  D7FC               	bra	i2u125_47
  3344   000E98  2E02               	decfsz	(??_ISR+1)^0,f,c
  3345   000E9A  D7FA               	bra	i2u125_47
  3346   000E9C  D000               	nop2	
  3347   000E9E                     i2l306:
  3348   000E9E  9223               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3349   000EA0  0011               	retfie		f
  3350   000EA2                     __end_of_ISR:
  3351                           	callstack 0
  3352                           
  3353 ;; *************** function _Recibir *****************
  3354 ;; Defined at:
  3355 ;;		line 169 in file "Laboratorio5.c"
  3356 ;; Parameters:    Size  Location     Type
  3357 ;;		None
  3358 ;; Auto vars:     Size  Location     Type
  3359 ;;		None
  3360 ;; Return value:  Size  Location     Type
  3361 ;;                  1    wreg      unsigned char 
  3362 ;; Registers used:
  3363 ;;		wreg, status,2
  3364 ;; Tracked objects:
  3365 ;;		On entry : 0/0
  3366 ;;		On exit  : 0/0
  3367 ;;		Unchanged: 0/0
  3368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3369 ;;      Params:         0       0       0       0       0       0       0       0       0
  3370 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3371 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3372 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3373 ;;Total ram usage:        0 bytes
  3374 ;; Hardware stack levels used: 1
  3375 ;; This function calls:
  3376 ;;		Nothing
  3377 ;; This function is called by:
  3378 ;;		_ISR
  3379 ;; This function uses a non-reentrant model
  3380 ;;
  3381                           
  3382                           	psect	text26
  3383   0012B2                     __ptext26:
  3384                           	callstack 0
  3385   0012B2                     _Recibir:
  3386                           	callstack 24
  3387                           
  3388                           ;Laboratorio5.c: 170: while(RCIF==0);
  3389                           
  3390                           ;incstack = 0
  3391   0012B2  AA9E               	btfss	3998,5,c	;volatile
  3392   0012B4  D7FE               	goto	__ptext26
  3393                           
  3394                           ;Laboratorio5.c: 171: return RCREG;
  3395   0012B6  50AE               	movf	174,w,c	;volatile
  3396   0012B8  0012               	return		;funcret
  3397   0012BA                     __end_of_Recibir:
  3398                           	callstack 0
  3399                           
  3400                           	psect	rparam
  3401   000000                     
  3402                           	psect	temp
  3403   000023                     btemp:
  3404                           	callstack 0
  3405   000023                     	ds	1
  3406   000000                     int$flags	set	btemp
  3407   000000                     wtemp8	set	btemp+1
  3408   000000                     ttemp5	set	btemp+1
  3409   000000                     ttemp6	set	btemp+4
  3410   000000                     ttemp7	set	btemp+8
  3411                           
  3412                           	psect	idloc
  3413                           
  3414                           ;Config register IDLOC0 @ 0x200000
  3415                           ;	unspecified, using default values
  3416   200000                     	org	2097152
  3417   200000  FF                 	db	255
  3418                           
  3419                           ;Config register IDLOC1 @ 0x200001
  3420                           ;	unspecified, using default values
  3421   200001                     	org	2097153
  3422   200001  FF                 	db	255
  3423                           
  3424                           ;Config register IDLOC2 @ 0x200002
  3425                           ;	unspecified, using default values
  3426   200002                     	org	2097154
  3427   200002  FF                 	db	255
  3428                           
  3429                           ;Config register IDLOC3 @ 0x200003
  3430                           ;	unspecified, using default values
  3431   200003                     	org	2097155
  3432   200003  FF                 	db	255
  3433                           
  3434                           ;Config register IDLOC4 @ 0x200004
  3435                           ;	unspecified, using default values
  3436   200004                     	org	2097156
  3437   200004  FF                 	db	255
  3438                           
  3439                           ;Config register IDLOC5 @ 0x200005
  3440                           ;	unspecified, using default values
  3441   200005                     	org	2097157
  3442   200005  FF                 	db	255
  3443                           
  3444                           ;Config register IDLOC6 @ 0x200006
  3445                           ;	unspecified, using default values
  3446   200006                     	org	2097158
  3447   200006  FF                 	db	255
  3448                           
  3449                           ;Config register IDLOC7 @ 0x200007
  3450                           ;	unspecified, using default values
  3451   200007                     	org	2097159
  3452   200007  FF                 	db	255
  3453                           
  3454                           	psect	config
  3455                           
  3456                           ;Config register CONFIG1L @ 0x300000
  3457                           ;	unspecified, using default values
  3458                           ;	PLL Prescaler Selection bits
  3459                           ;	PLLDIV = 0x0, unprogrammed default
  3460                           ;	System Clock Postscaler Selection bits
  3461                           ;	CPUDIV = 0x0, unprogrammed default
  3462                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3463                           ;	USBDIV = 0x0, unprogrammed default
  3464   300000                     	org	3145728
  3465   300000  00                 	db	0
  3466                           
  3467                           ;Config register CONFIG1H @ 0x300001
  3468                           ;	Oscillator Selection bits
  3469                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  3470                           ;	Fail-Safe Clock Monitor Enable bit
  3471                           ;	FCMEN = 0x0, unprogrammed default
  3472                           ;	Internal/External Oscillator Switchover bit
  3473                           ;	IESO = 0x0, unprogrammed default
  3474   300001                     	org	3145729
  3475   300001  09                 	db	9
  3476                           
  3477                           ;Config register CONFIG2L @ 0x300002
  3478                           ;	unspecified, using default values
  3479                           ;	Power-up Timer Enable bit
  3480                           ;	PWRT = 0x1, unprogrammed default
  3481                           ;	Brown-out Reset Enable bits
  3482                           ;	BOR = 0x3, unprogrammed default
  3483                           ;	Brown-out Reset Voltage bits
  3484                           ;	BORV = 0x3, unprogrammed default
  3485                           ;	USB Voltage Regulator Enable bit
  3486                           ;	VREGEN = 0x0, unprogrammed default
  3487   300002                     	org	3145730
  3488   300002  1F                 	db	31
  3489                           
  3490                           ;Config register CONFIG2H @ 0x300003
  3491                           ;	Watchdog Timer Enable bit
  3492                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3493                           ;	Watchdog Timer Postscale Select bits
  3494                           ;	WDTPS = 0xF, unprogrammed default
  3495   300003                     	org	3145731
  3496   300003  1E                 	db	30
  3497                           
  3498                           ; Padding undefined space
  3499   300004                     	org	3145732
  3500   300004  FF                 	db	255
  3501                           
  3502                           ;Config register CONFIG3H @ 0x300005
  3503                           ;	CCP2 MUX bit
  3504                           ;	CCP2MX = 0x1, unprogrammed default
  3505                           ;	PORTB A/D Enable bit
  3506                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3507                           ;	Low-Power Timer 1 Oscillator Enable bit
  3508                           ;	LPT1OSC = 0x0, unprogrammed default
  3509                           ;	MCLR Pin Enable bit
  3510                           ;	MCLRE = 0x1, unprogrammed default
  3511   300005                     	org	3145733
  3512   300005  81                 	db	129
  3513                           
  3514                           ;Config register CONFIG4L @ 0x300006
  3515                           ;	unspecified, using default values
  3516                           ;	Stack Full/Underflow Reset Enable bit
  3517                           ;	STVREN = 0x1, unprogrammed default
  3518                           ;	Single-Supply ICSP Enable bit
  3519                           ;	LVP = 0x1, unprogrammed default
  3520                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  3521                           ;	ICPRT = 0x0, unprogrammed default
  3522                           ;	Extended Instruction Set Enable bit
  3523                           ;	XINST = 0x0, unprogrammed default
  3524                           ;	Background Debugger Enable bit
  3525                           ;	DEBUG = 0x1, unprogrammed default
  3526   300006                     	org	3145734
  3527   300006  85                 	db	133
  3528                           
  3529                           ; Padding undefined space
  3530   300007                     	org	3145735
  3531   300007  FF                 	db	255
  3532                           
  3533                           ;Config register CONFIG5L @ 0x300008
  3534                           ;	unspecified, using default values
  3535                           ;	Code Protection bit
  3536                           ;	CP0 = 0x1, unprogrammed default
  3537                           ;	Code Protection bit
  3538                           ;	CP1 = 0x1, unprogrammed default
  3539                           ;	Code Protection bit
  3540                           ;	CP2 = 0x1, unprogrammed default
  3541                           ;	Code Protection bit
  3542                           ;	CP3 = 0x1, unprogrammed default
  3543   300008                     	org	3145736
  3544   300008  0F                 	db	15
  3545                           
  3546                           ;Config register CONFIG5H @ 0x300009
  3547                           ;	unspecified, using default values
  3548                           ;	Boot Block Code Protection bit
  3549                           ;	CPB = 0x1, unprogrammed default
  3550                           ;	Data EEPROM Code Protection bit
  3551                           ;	CPD = 0x1, unprogrammed default
  3552   300009                     	org	3145737
  3553   300009  C0                 	db	192
  3554                           
  3555                           ;Config register CONFIG6L @ 0x30000A
  3556                           ;	unspecified, using default values
  3557                           ;	Write Protection bit
  3558                           ;	WRT0 = 0x1, unprogrammed default
  3559                           ;	Write Protection bit
  3560                           ;	WRT1 = 0x1, unprogrammed default
  3561                           ;	Write Protection bit
  3562                           ;	WRT2 = 0x1, unprogrammed default
  3563                           ;	Write Protection bit
  3564                           ;	WRT3 = 0x1, unprogrammed default
  3565   30000A                     	org	3145738
  3566   30000A  0F                 	db	15
  3567                           
  3568                           ;Config register CONFIG6H @ 0x30000B
  3569                           ;	unspecified, using default values
  3570                           ;	Configuration Register Write Protection bit
  3571                           ;	WRTC = 0x1, unprogrammed default
  3572                           ;	Boot Block Write Protection bit
  3573                           ;	WRTB = 0x1, unprogrammed default
  3574                           ;	Data EEPROM Write Protection bit
  3575                           ;	WRTD = 0x1, unprogrammed default
  3576   30000B                     	org	3145739
  3577   30000B  E0                 	db	224
  3578                           
  3579                           ;Config register CONFIG7L @ 0x30000C
  3580                           ;	unspecified, using default values
  3581                           ;	Table Read Protection bit
  3582                           ;	EBTR0 = 0x1, unprogrammed default
  3583                           ;	Table Read Protection bit
  3584                           ;	EBTR1 = 0x1, unprogrammed default
  3585                           ;	Table Read Protection bit
  3586                           ;	EBTR2 = 0x1, unprogrammed default
  3587                           ;	Table Read Protection bit
  3588                           ;	EBTR3 = 0x1, unprogrammed default
  3589   30000C                     	org	3145740
  3590   30000C  0F                 	db	15
  3591                           
  3592                           ;Config register CONFIG7H @ 0x30000D
  3593                           ;	unspecified, using default values
  3594                           ;	Boot Block Table Read Protection bit
  3595                           ;	EBTRB = 0x1, unprogrammed default
  3596   30000D                     	org	3145741
  3597   30000D  40                 	db	64
  3598                           tosu	equ	0xFFF
  3599                           tosh	equ	0xFFE
  3600                           tosl	equ	0xFFD
  3601                           stkptr	equ	0xFFC
  3602                           pclatu	equ	0xFFB
  3603                           pclath	equ	0xFFA
  3604                           pcl	equ	0xFF9
  3605                           tblptru	equ	0xFF8
  3606                           tblptrh	equ	0xFF7
  3607                           tblptrl	equ	0xFF6
  3608                           tablat	equ	0xFF5
  3609                           prodh	equ	0xFF4
  3610                           prodl	equ	0xFF3
  3611                           indf0	equ	0xFEF
  3612                           postinc0	equ	0xFEE
  3613                           postdec0	equ	0xFED
  3614                           preinc0	equ	0xFEC
  3615                           plusw0	equ	0xFEB
  3616                           fsr0h	equ	0xFEA
  3617                           fsr0l	equ	0xFE9
  3618                           wreg	equ	0xFE8
  3619                           indf1	equ	0xFE7
  3620                           postinc1	equ	0xFE6
  3621                           postdec1	equ	0xFE5
  3622                           preinc1	equ	0xFE4
  3623                           plusw1	equ	0xFE3
  3624                           fsr1h	equ	0xFE2
  3625                           fsr1l	equ	0xFE1
  3626                           bsr	equ	0xFE0
  3627                           indf2	equ	0xFDF
  3628                           postinc2	equ	0xFDE
  3629                           postdec2	equ	0xFDD
  3630                           preinc2	equ	0xFDC
  3631                           plusw2	equ	0xFDB
  3632                           fsr2h	equ	0xFDA
  3633                           fsr2l	equ	0xFD9
  3634                           status	equ	0xFD8

Data Sizes:
    Strings     34
    Constant    0
    Data        1
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     25      34
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    MensajeLCD_Word@a	PTR unsigned char  size(1) Largest target is 13
		 -> STR_4(CODE[5]), STR_3(CODE[6]), STR_2(CODE[10]), STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _main->_TransmitirDatos
    _TransmitirDatos->_MensajeLCD_Word
    _MensajeLCD_Word->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _LeerHT11->_LeerByte
    _LeerByte->_LeerBit
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    7153
                                             23 COMRAM     2     2      0
                           _BorraLCD
                           _ColorRGB
                       _ConfiguraLCD
                         _Conversion
                      _DireccionaLCD
                       _EscribeLCD_c
                _GuardarDatoEnEEPROM
                      _InicializaLCD
                           _LeerHT11
                    _MensajeLCD_Word
                    _TransmitirDatos
                            ___lbdiv
                            ___lbmod
                   _leerDatoEnEEPROM
 ---------------------------------------------------------------------------------
 (1) _leerDatoEnEEPROM                                     2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TransmitirDatos                                     14    10      4    4630
                                             11 COMRAM    12     8      4
                           _BorraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
                    _MensajeLCD_Word
                         _Transmitir
                            ___awdiv
                            ___lbdiv
                            ___lbmod
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     615
                                              2 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     922
                                              2 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___lbmod                                              4     3      1     387
                                              2 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) ___lbdiv                                              4     3      1     390
                                              2 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Transmitir                                           1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MensajeLCD_Word                                      4     3      1     528
                                              7 COMRAM     4     3      1
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (3) _EscribeLCD_c                                         1     1      0      90
                                              6 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _DireccionaLCD                                        1     1      0      90
                                              6 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _LeerHT11                                             1     1      0      75
                                              6 COMRAM     1     1      0
                           _LeerByte
 ---------------------------------------------------------------------------------
 (2) _LeerByte                                             3     3      0      75
                                              3 COMRAM     3     3      0
                            _LeerBit
 ---------------------------------------------------------------------------------
 (3) _LeerBit                                              1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     150
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0      75
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _EnviaDato                                            2     2      0      60
                                              4 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _RetardoLCD                                           2     2      0      15
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GuardarDatoEnEEPROM                                  3     0      3     196
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _Conversion                                           1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0      45
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ColorRGB                                             2     0      2     384
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  2     2      0       0
                                              0 COMRAM     2     2      0
                            _Recibir
 ---------------------------------------------------------------------------------
 (7) _Recibir                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _ColorRGB
   _ConfiguraLCD
   _Conversion
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _GuardarDatoEnEEPROM
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerHT11
     _LeerByte
       _LeerBit
   _MensajeLCD_Word
     _EscribeLCD_c
   _TransmitirDatos
     _BorraLCD
     _DireccionaLCD
     _EscribeLCD_c
     _MensajeLCD_Word
     _Transmitir
     ___awdiv
     ___lbdiv
     ___lbmod
     ___lwdiv
     ___lwmod
     ___wmul
   ___lbdiv
   ___lbmod
   _leerDatoEnEEPROM

 _ISR (ROOT)
   _Recibir

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      36        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     19      22       1       36.2%
BITBIGSFRhhlh       19      0       0      21        0.0%
BITBIGSFRlhhl       11      0       0      32        0.0%
BITBIGSFRhlhhh       E      0       0      23        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRll          D      0       0      34        0.0%
BITBIGSFRlhhh        8      0       0      31        0.0%
BITBIGSFRhllhhl      8      0       0      29        0.0%
BITBIGSFRhlhlh       8      0       0      25        0.0%
BITBIGSFRhlhhl       7      0       0      24        0.0%
BITBIGSFRhlll        5      0       0      30        0.0%
BITBIGSFRhllhhh      4      0       0      27        0.0%
BITBIGSFRhllhhh      2      0       0      28        0.0%
BITBIGSFRhllhhh      1      0       0      26        0.0%
BITBIGSFRlhl         1      0       0      33        0.0%
BITBIGSFRhhll        1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      22      35        0.0%
DATA                 0      0      22       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed May 24 13:00:34 2023

                          _A 001C                            _B 001A            Transmitir@BufferT 0003  
                         _GO 7E11                           _RD 7D30                           u60 1156  
                         _WR 7D31                 ___awdiv@sign 0008                   EnviaDato@a 0006  
        ___wmul@multiplicand 0005                          l211 10C6                _InicializaLCD 0D7C  
                        l230 1152                          l214 10D0                          l225 112E  
                        l253 0858                          l280 1284                          l258 099A  
                        l286 11F2                          l788 0FD4                          l798 10AA  
                        _GIE 7F97                          _RB0 7C08                          _RC0 7C10  
                        _RC1 7C11                          _RC2 7C12                          _RB5 7C0D  
                        _RC4 7C14                          _RB6 7C0E                          _RC5 7C15  
                        _RB7 7C0F                          u280 1230                          u700 0EE8  
                        _ISR 0008                          u810 108C                          u660 102A  
                        u740 110C                          u910 0D14                          u930 0D34  
                        u850 0CB4                          u780 0FAE                          u950 0D54  
                        u870 0CD4                          u970 0D74                          u890 0CF4  
                        _Che 001F                          _Hum 0020             TransmitirDatos@n 0012  
                        wreg 0FE8                         ?_ISR 0001                         l1104 1142  
                       l2004 0B80                         l1062 0F2A                         l1150 1204  
                       l2030 0C7A                         l1064 0F3A                         l1072 0F70  
                       l1304 0D8E                         l1160 12A8                         l2016 0BF6  
                       l1066 0F5C                         l1314 0DAC                         l1068 0F66  
                       l1084 1064                         l1324 0DCA                         l2028 0C66  
                       l1344 0E02                         l1702 0F0E                         l1720 1108  
                       l1650 0FE6                         l1706 0F1C                         l1820 0CE8  
                       l1716 1102                         l1732 1126                         l1814 0CC8  
                       l1832 0D28                         l1808 0CA8                         l1680 0EC6  
                       l1728 111E                         l1760 0FAA                         l1826 0D08  
                       l1674 0EB6                         l1746 11A8                         l1738 1190  
                       l1770 0FCA                         l1844 0D68                         l1780 1088  
                       l1860 0866                         l1838 0D48                         l1686 0EDC  
                       l1758 0FA2                         l1688 0EE4                         l1864 087A  
                       l1698 0F04                         l1786 10A0                         l1778 1080  
                       l1874 08D4                         l1868 08A6                         l1876 08FE  
                       _CFGS 7D36                         _EEIF 7D0C                         STR_1 0801  
                       STR_2 080E                         STR_3 0818                         STR_4 081E  
                       u1010 0C4C                         u1020 0C4E                         u1030 0C5A  
                       u1040 0C5C                         u1050 0C90                         u1107 0BAE  
                       u1117 0BCA                         u1207 0F40                         u1127 0BE6  
                       u1217 0F50                         u1137 0C00                         u1227 0F5E  
                       u1147 0C16                         u1237 0F68                         u1157 10BC  
                       u1077 0ABE                         u1247 129C                         u1167 10CC  
                       u1087 0B6E                         _LATD 0F8C                         u1177 1134  
                       u1097 0B92                         u1187 1144                         u1197 0F30  
                       _RCIF 7CF5                         _RBPU 7F8F                         _TMR0 0FD6  
                       _TRMT 7D61                         _WREN 7D32               ??_EscribeLCD_c 0007  
                       _Temp 0021          _GuardarDatoEnEEPROM 11D6                         _main 0AB4  
                       btemp 0023                         prodh 0FF4                         prodl 0FF3  
                       start 000E              __end_of_LeerBit 115A                 ___param_bank 0000  
                      ??_ISR 0001              __end_of_Recibir 12BA         ?_GuardarDatoEnEEPROM 0003  
             ?_InicializaLCD 0001                        ?_main 0001              __end_of___awdiv 0F26  
            __end_of___lbdiv 112A                        _ADRES 0FC3                        _EEADR 0FA9  
              EscribeLCD_c@a 0007              __end_of___lbmod 11B0                        _EEPGD 7D37  
                      _T0CON 0FD5              ___awdiv@divisor 0005                        _LATC2 7C5A  
                      _LATD6 7C66                        _LATD7 7C67              __end_of___lwdiv 0FDE  
            __end_of___lwmod 10B4                        i2l306 0E9E              ___awdiv@counter 0007  
                      _RCREG 0FAE                        _RCSTA 0FAB                        _SPBRG 0FAF  
                      _USBEN 7B6B                        _TRISA 0F92                        _TRISB 0F93  
                      _TRISC 0F94                        _TRISD 0F95                        _TXREG 0FAD  
                      _TXSTA 0FAC       GuardarDatoEnEEPROM@dir 0003                        tablat 0FF5  
                 _Conversion 1276                  _HabilitaLCD 1298                        ttemp5 0024  
                      ttemp6 0027                        ttemp7 002B                        status 0FD8  
                      wtemp8 0024              ___lbdiv@divisor 0003              ___lbdiv@counter 0005  
           __end_of_BorraLCD 1276             __end_of_LeerHT11 10F0             __end_of_ColorRGB 0D7C  
            __initialization 115A             __end_of_LeerByte 121E                 __end_of_main 0C94  
   __end_of_leerDatoEnEEPROM 1298        ??_GuardarDatoEnEEPROM 0006                       ??_main 0018  
       __end_of_ConfiguraLCD 1236                __activetblptr 0002                   _TempEEPROM 001E  
                     _ADCON0 0FC2                       _ADCON1 0FC1                       _ADCON2 0FC0  
                     _EEDATA 0FA8               DireccionaLCD@a 0007                       _EECON2 0FA7  
           ___awdiv@dividend 0003                       i2l1630 0E50                       i2l1622 0E32  
                     i2l1632 0E58                       i2l1626 0E38                       i2l1628 0E48  
                     i2l1636 0E6A                       i2l1638 0E86                       _OSCCON 0FD3  
                     _TMR0IE 7F95                       _TMR0IF 7F92                       _TMR0ON 7EAF  
                     _TRISC2 7CA2                    ??_LeerBit 0003        __end_of_DireccionaLCD 1262  
                     _UTRDIS 7B7B                   _RetardoLCD 0F26                    ??_Recibir 0001  
        TransmitirDatos@Ent1 000C          TransmitirDatos@Ent2 000E          TransmitirDatos@Simb 0014  
                     ___wmul 11B0                    ??___awdiv 0007                    ??___lbdiv 0004  
                  ??___lbmod 0004                    ??___lwdiv 0007                    ??___lwmod 0007  
            ??_InicializaLCD 0007                       clear_0 1172             ___awdiv@quotient 0009  
    GuardarDatoEnEEPROM@dato 0005                       isa$std 0001         __end_of_EscribeLCD_c 124C  
               __pdataCOMRAM 0022                 __mediumconst 0000                       tblptrh 0FF7  
                     tblptrl 0FF6                       tblptru 0FF8                   _Transmitir 12A6  
           ___lbdiv@dividend 0004                  ?_Conversion 0001              ___lbmod@divisor 0003  
                 __accesstop 0060      __end_of__initialization 1178              ___lbmod@counter 0005  
              ___rparam_used 0001               __pcstackCOMRAM 0001            __end_of_EnviaDato 1072  
           ___lbdiv@quotient 0006                    ?_BorraLCD 0001                    ?_LeerHT11 0001  
                  ?_ColorRGB 0003                    ?_LeerByte 0001                  ?_RetardoLCD 0001  
                RetardoLCD@a 0004                      ?___wmul 0003                      _BAUDCON 0FB8  
                    i2u62_40 0E28                      i2u63_45 0E2A                   ??_BorraLCD 0007  
                 ??_LeerHT11 0007                   ??_ColorRGB 0005                  ?_Transmitir 0001  
          ??_MensajeLCD_Word 0009                   ??_LeerByte 0004                 ?_HabilitaLCD 0001  
                    _LeerBit 112A                 _ConfiguraLCD 121E                      _Recibir 12B2  
                    __Hparam 0000                      __Lparam 0000         TransmitirDatos@TempC 0016  
                    ___awdiv 0EA2                      ___lbdiv 10F0                      ___lbmod 1186  
                    ___lwdiv 0F8C                      ___lwmod 1072            ?_leerDatoEnEEPROM 0003  
               __psmallconst 0800                      __pcinit 115A                      __ramtop 0800  
                    __ptext0 0AB4                      __ptext1 128A                      __ptext2 0824  
                    __ptext3 11B0                      __ptext4 1072                      __ptext5 0F8C  
                    __ptext6 1186           ??_leerDatoEnEEPROM 0005                      __ptext7 10F0  
                    __ptext8 0EA2                      __ptext9 12A6               __pintcode_body 0E18  
       end_of_initialization 1178              Conversion@canal 0003                __Lmediumconst 0000  
                    int_func 0E18                 _EscribeLCD_c 1236  __end_of_GuardarDatoEnEEPROM 11FC  
          ??_TransmitirDatos 0010                      postinc0 0FEE             ___lbmod@dividend 0004  
                  LeerByte@i 0006                 ??_Conversion 0003                  ___lbmod@rem 0006  
             __end_of___wmul 11D6                __pidataCOMRAM 12BA        __end_of_InicializaLCD 0E18  
         __end_of_Conversion 128A                    _EnviaDato 102C          start_initialization 115A  
                __end_of_ISR 0EA2                 ??_RetardoLCD 0003                     ??___wmul 0007  
            _MensajeLCD_Word 0FDE                   ?_EnviaDato 0001                  __pbssCOMRAM 001A  
         __end_of_RetardoLCD 0F8C             MensajeLCD_Word@a 0008             MensajeLCD_Word@i 000A  
               ??_Transmitir 0003                     ?_LeerBit 0001                _DireccionaLCD 124C  
                   ?_Recibir 0001             ___lwdiv@dividend 0003                    __pintcode 0008  
                   ?___awdiv 0003                     ?___lbdiv 0003                     ?___lbmod 0003  
                   ?___lwdiv 0003                     ?___lwmod 0003           __end_of_Transmitir 12B2  
                __smallconst 0800             ___lwdiv@quotient 0007              _TransmitirDatos 0824  
             ___wmul@product 0007               ?_DireccionaLCD 0001                     i2u125_47 0E90  
    __end_of_MensajeLCD_Word 102C            ___wmul@multiplier 0003                  ??_EnviaDato 0005  
                   _BorraLCD 1262                     _LeerHT11 10B4                     _ColorRGB 0C94  
                   _LeerByte 11FC          leerDatoEnEEPROM@dir 0003                     __Hrparam 0000  
                   __Lrparam 0000                ConfiguraLCD@a 0003      __end_of_TransmitirDatos 0AB4  
            ___lwdiv@divisor 0005              ___lwdiv@counter 0009                     __ptext10 0FDE  
                   __ptext11 1236                     __ptext20 1298                     __ptext12 124C  
                   __ptext21 11D6                     __ptext13 10B4                     __ptext22 1276  
                   __ptext14 11FC                     __ptext23 121E                     __ptext15 112A  
                   __ptext24 0C94                     __ptext16 0D7C                     __ptext17 1262  
                   __ptext26 12B2                     __ptext18 102C                     __ptext19 0F26  
            ??_DireccionaLCD 0007                     _interfaz 0022                     isa$xinst 0000  
           ?_MensajeLCD_Word 0008                     int$flags 0023             _leerDatoEnEEPROM 128A  
                   intlevel2 0000                ??_HabilitaLCD 0003             ___lwmod@dividend 0003  
              ?_ConfiguraLCD 0001                  ColorRGB@val 0003              ___lwmod@divisor 0005  
            ___lwmod@counter 0007             ?_TransmitirDatos 000C               ??_ConfiguraLCD 0003  
              ?_EscribeLCD_c 0001                   LeerBit@res 0003          __end_of_HabilitaLCD 12A6  
                LeerByte@res 0005  
