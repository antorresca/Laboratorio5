

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed May 24 16:38:37 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    41                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    42                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    44   000000                     
    45                           ; Generated 09/02/2023 GMT
    46                           ; 
    47                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution. Publication is not required when
    61                           ;        this file is used in an embedded application.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F4550 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79   000000                     
    80                           	psect	idataCOMRAM
    81   001212                     __pidataCOMRAM:
    82                           	callstack 0
    83                           
    84                           ;initializer for _interfaz
    85   001212  08                 	db	8
    86   000000                     _EECON2	set	4007
    87   000000                     _RCREG	set	4014
    88   000000                     _TXREG	set	4013
    89   000000                     _TRISC	set	3988
    90   000000                     _TRISD	set	3989
    91   000000                     _SPBRG	set	4015
    92   000000                     _BAUDCON	set	4024
    93   000000                     _LATC2	set	31834
    94   000000                     _LATD6	set	31846
    95   000000                     _RD4	set	31772
    96   000000                     _RD	set	32048
    97   000000                     _WR	set	32049
    98   000000                     _WREN	set	32050
    99   000000                     _CFGS	set	32054
   100   000000                     _GO	set	32273
   101   000000                     _RD2	set	31770
   102   000000                     _RD1	set	31769
   103   000000                     _RD0	set	31768
   104   000000                     _TRMT	set	32097
   105   000000                     _RC2	set	31762
   106   000000                     _TRISC2	set	31906
   107   000000                     _RC1	set	31761
   108   000000                     _RC0	set	31760
   109   000000                     _TMR0ON	set	32431
   110   000000                     _GIE	set	32663
   111   000000                     _TMR0IE	set	32661
   112   000000                     _LATD7	set	31847
   113   000000                     _LATB	set	3978
   114   000000                     _RC4	set	31764
   115   000000                     _TRISA	set	3986
   116   000000                     _TRISB	set	3987
   117   000000                     _RCSTA	set	4011
   118   000000                     _TXSTA	set	4012
   119   000000                     _OSCCON	set	4051
   120   000000                     _T0CON	set	4053
   121   000000                     _RBPU	set	32655
   122   000000                     _ADCON2	set	4032
   123   000000                     _ADCON1	set	4033
   124   000000                     _ADCON0	set	4034
   125   000000                     _ADRES	set	4035
   126   000000                     _RCIF	set	31989
   127   000000                     _TMR0IF	set	32658
   128   000000                     _TMR0	set	4054
   129   000000                     _RD3	set	31771
   130   000000                     _EEDATA	set	4008
   131   000000                     _EEADR	set	4009
   132   000000                     _EEIF	set	32012
   133   000000                     _EEPGD	set	32055
   134                           
   135                           	psect	smallconst
   136   000800                     __psmallconst:
   137                           	callstack 0
   138   000800  00                 	db	0
   139   000801                     STR_1:
   140   000801  55                 	db	85	;'U'
   141   000802  6C                 	db	108	;'l'
   142   000803  74                 	db	116	;'t'
   143   000804  69                 	db	105	;'i'
   144   000805  6D                 	db	109	;'m'
   145   000806  61                 	db	97	;'a'
   146   000807  20                 	db	32
   147   000808  74                 	db	116	;'t'
   148   000809  65                 	db	101	;'e'
   149   00080A  6D                 	db	109	;'m'
   150   00080B  70                 	db	112	;'p'
   151   00080C  3A                 	db	58	;':'
   152   00080D  00                 	db	0
   153   00080E                     STR_2:
   154   00080E  49                 	db	73	;'I'
   155   00080F  6E                 	db	110	;'n'
   156   000810  69                 	db	105	;'i'
   157   000811  63                 	db	99	;'c'
   158   000812  69                 	db	105	;'i'
   159   000813  61                 	db	97	;'a'
   160   000814  6E                 	db	110	;'n'
   161   000815  64                 	db	100	;'d'
   162   000816  6F                 	db	111	;'o'
   163   000817  00                 	db	0
   164   000818                     STR_3:
   165   000818  54                 	db	84	;'T'
   166   000819  65                 	db	101	;'e'
   167   00081A  6D                 	db	109	;'m'
   168   00081B  70                 	db	112	;'p'
   169   00081C  3A                 	db	58	;':'
   170   00081D  00                 	db	0
   171   00081E                     STR_4:
   172   00081E  48                 	db	72	;'H'
   173   00081F  75                 	db	117	;'u'
   174   000820  6D                 	db	109	;'m'
   175   000821  3A                 	db	58	;':'
   176   000822  00                 	db	0
   177   000823  00                 	db	0	; dummy byte at the end
   178   000000                     
   179                           ; #config settings
   180                           
   181                           	psect	cinit
   182   00109A                     __pcinit:
   183                           	callstack 0
   184   00109A                     start_initialization:
   185                           	callstack 0
   186   00109A                     __initialization:
   187                           	callstack 0
   188                           
   189                           ; Initialize objects allocated to COMRAM (1 bytes)
   190                           ; load TBLPTR registers with __pidataCOMRAM
   191   00109A  0E12               	movlw	low __pidataCOMRAM
   192   00109C  6EF6               	movwf	tblptrl,c
   193   00109E  0E12               	movlw	high __pidataCOMRAM
   194   0010A0  6EF7               	movwf	tblptrh,c
   195   0010A2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   196   0010A4  6EF8               	movwf	tblptru,c
   197   0010A6  0009               	tblrd		*+	;fetch initializer
   198   0010A8  CFF5 F020          	movff	tablat,__pdataCOMRAM
   199                           
   200                           ; Clear objects allocated to COMRAM (7 bytes)
   201   0010AC  EE00  F019         	lfsr	0,__pbssCOMRAM
   202   0010B0  0E07               	movlw	7
   203   0010B2                     clear_0:
   204   0010B2  6AEE               	clrf	postinc0,c
   205   0010B4  06E8               	decf	wreg,f,c
   206   0010B6  E1FD               	bnz	clear_0
   207   0010B8                     end_of_initialization:
   208                           	callstack 0
   209   0010B8                     __end_of__initialization:
   210                           	callstack 0
   211   0010B8  9021               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   212   0010BA  9221               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   213   0010BC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   214   0010BE  6EF8               	movwf	tblptru,c
   215   0010C0  0100               	movlb	0
   216   0010C2  EF5A  F005         	goto	_main	;jump to C main() function
   217                           
   218                           	psect	bssCOMRAM
   219   000019                     __pbssCOMRAM:
   220                           	callstack 0
   221   000019                     _B:
   222                           	callstack 0
   223   000019                     	ds	2
   224   00001B                     _A:
   225                           	callstack 0
   226   00001B                     	ds	2
   227   00001D                     _TempEEPROM:
   228                           	callstack 0
   229   00001D                     	ds	1
   230   00001E                     _Hum:
   231                           	callstack 0
   232   00001E                     	ds	1
   233   00001F                     _Temp:
   234                           	callstack 0
   235   00001F                     	ds	1
   236                           
   237                           	psect	dataCOMRAM
   238   000020                     __pdataCOMRAM:
   239                           	callstack 0
   240   000020                     _interfaz:
   241                           	callstack 0
   242   000020                     	ds	1
   243                           
   244                           	psect	cstackCOMRAM
   245   000001                     __pcstackCOMRAM:
   246                           	callstack 0
   247   000001                     ??_ISR:
   248   000001                     
   249                           ; 2 bytes @ 0x0
   250   000001                     	ds	2
   251   000003                     ??_RetardoLCD:
   252   000003                     ?_strlen:
   253                           	callstack 0
   254   000003                     ?___wmul:
   255                           	callstack 0
   256   000003                     ?___awdiv:
   257                           	callstack 0
   258   000003                     ?___lwdiv:
   259                           	callstack 0
   260   000003                     ?___lwmod:
   261                           	callstack 0
   262   000003                     LeerBit@res:
   263                           	callstack 0
   264   000003                     Transmitir@BufferT:
   265                           	callstack 0
   266   000003                     Conversion@canal:
   267                           	callstack 0
   268   000003                     ___lbdiv@divisor:
   269                           	callstack 0
   270   000003                     ___lbmod@divisor:
   271                           	callstack 0
   272   000003                     strlen@s:
   273                           	callstack 0
   274   000003                     ColorRGB@val:
   275                           	callstack 0
   276   000003                     GuardarDatoEnEEPROM@dir:
   277                           	callstack 0
   278   000003                     leerDatoEnEEPROM@dir:
   279                           	callstack 0
   280   000003                     ___wmul@multiplier:
   281                           	callstack 0
   282   000003                     ___awdiv@dividend:
   283                           	callstack 0
   284   000003                     ___lwdiv@dividend:
   285                           	callstack 0
   286   000003                     ___lwmod@dividend:
   287                           	callstack 0
   288                           
   289                           ; 2 bytes @ 0x2
   290   000003                     	ds	1
   291   000004                     ??_LeerByte:
   292   000004                     RetardoLCD@a:
   293                           	callstack 0
   294   000004                     ___lbdiv@dividend:
   295                           	callstack 0
   296   000004                     ___lbmod@dividend:
   297                           	callstack 0
   298                           
   299                           ; 1 bytes @ 0x3
   300   000004                     	ds	1
   301   000005                     EnviaDato@a:
   302                           	callstack 0
   303   000005                     LeerByte@res:
   304                           	callstack 0
   305   000005                     GuardarDatoEnEEPROM@dato:
   306                           	callstack 0
   307   000005                     ___lbdiv@counter:
   308                           	callstack 0
   309   000005                     ___lbmod@counter:
   310                           	callstack 0
   311   000005                     strlen@cp:
   312                           	callstack 0
   313   000005                     ___wmul@multiplicand:
   314                           	callstack 0
   315   000005                     ___awdiv@divisor:
   316                           	callstack 0
   317   000005                     ___lwdiv@divisor:
   318                           	callstack 0
   319   000005                     ___lwmod@divisor:
   320                           	callstack 0
   321                           
   322                           ; 2 bytes @ 0x4
   323   000005                     	ds	1
   324   000006                     EscribeLCD_c@a:
   325                           	callstack 0
   326   000006                     DireccionaLCD@a:
   327                           	callstack 0
   328   000006                     LeerByte@i:
   329                           	callstack 0
   330   000006                     ___lbdiv@quotient:
   331                           	callstack 0
   332   000006                     ___lbmod@rem:
   333                           	callstack 0
   334                           
   335                           ; 1 bytes @ 0x5
   336   000006                     	ds	1
   337   000007                     ??_LeerHT11:
   338   000007                     MensajeLCD_Word@a:
   339                           	callstack 0
   340   000007                     ___awdiv@counter:
   341                           	callstack 0
   342   000007                     ___lwmod@counter:
   343                           	callstack 0
   344   000007                     ___wmul@product:
   345                           	callstack 0
   346   000007                     ___lwdiv@quotient:
   347                           	callstack 0
   348                           
   349                           ; 2 bytes @ 0x6
   350   000007                     	ds	1
   351   000008                     ??_MensajeLCD_Word:
   352   000008                     ___awdiv@sign:
   353                           	callstack 0
   354                           
   355                           ; 1 bytes @ 0x7
   356   000008                     	ds	1
   357   000009                     ___lwdiv@counter:
   358                           	callstack 0
   359   000009                     MensajeLCD_Word@i:
   360                           	callstack 0
   361   000009                     ___awdiv@quotient:
   362                           	callstack 0
   363                           
   364                           ; 2 bytes @ 0x8
   365   000009                     	ds	2
   366   00000B                     TransmitirDatos@Ent1:
   367                           	callstack 0
   368                           
   369                           ; 2 bytes @ 0xA
   370   00000B                     	ds	2
   371   00000D                     TransmitirDatos@Ent2:
   372                           	callstack 0
   373                           
   374                           ; 2 bytes @ 0xC
   375   00000D                     	ds	2
   376   00000F                     ??_TransmitirDatos:
   377                           
   378                           ; 1 bytes @ 0xE
   379   00000F                     	ds	2
   380   000011                     TransmitirDatos@n:
   381                           	callstack 0
   382                           
   383                           ; 2 bytes @ 0x10
   384   000011                     	ds	2
   385   000013                     TransmitirDatos@Simb:
   386                           	callstack 0
   387                           
   388                           ; 2 bytes @ 0x12
   389   000013                     	ds	2
   390   000015                     TransmitirDatos@TempC:
   391                           	callstack 0
   392                           
   393                           ; 2 bytes @ 0x14
   394   000015                     	ds	2
   395   000017                     ??_main:
   396                           
   397                           ; 1 bytes @ 0x16
   398   000017                     	ds	2
   399                           
   400 ;;
   401 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   402 ;;
   403 ;; *************** function _main *****************
   404 ;; Defined at:
   405 ;;		line 36 in file "Laboratorio5.c"
   406 ;; Parameters:    Size  Location     Type
   407 ;;		None
   408 ;; Auto vars:     Size  Location     Type
   409 ;;		None
   410 ;; Return value:  Size  Location     Type
   411 ;;                  1    wreg      void 
   412 ;; Registers used:
   413 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   414 ;; Tracked objects:
   415 ;;		On entry : 0/0
   416 ;;		On exit  : 0/0
   417 ;;		Unchanged: 0/0
   418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   419 ;;      Params:         0       0       0       0       0       0       0       0       0
   420 ;;      Locals:         0       0       0       0       0       0       0       0       0
   421 ;;      Temps:          2       0       0       0       0       0       0       0       0
   422 ;;      Totals:         2       0       0       0       0       0       0       0       0
   423 ;;Total ram usage:        2 bytes
   424 ;; Hardware stack levels required when called: 7
   425 ;; This function calls:
   426 ;;		_BorraLCD
   427 ;;		_ColorRGB
   428 ;;		_Conversion
   429 ;;		_DireccionaLCD
   430 ;;		_EscribeLCD_c
   431 ;;		_GuardarDatoEnEEPROM
   432 ;;		_InicializaLCD
   433 ;;		_LeerHT11
   434 ;;		_MensajeLCD_Word
   435 ;;		_TransmitirDatos
   436 ;;		___lbdiv
   437 ;;		___lbmod
   438 ;;		_leerDatoEnEEPROM
   439 ;; This function is called by:
   440 ;;		Startup code after reset
   441 ;; This function uses a non-reentrant model
   442 ;;
   443                           
   444                           	psect	text0
   445   000AB4                     __ptext0:
   446                           	callstack 0
   447   000AB4                     _main:
   448                           	callstack 24
   449                           
   450                           ;Laboratorio5.c: 39: OSCCON = 0b01110000;
   451                           
   452                           ;incstack = 0
   453   000AB4  0E70               	movlw	112
   454   000AB6  6ED3               	movwf	211,c	;volatile
   455                           
   456                           ;Laboratorio5.c: 40: _delay((unsigned long)((1)*(8000000/4000.0)));
   457   000AB8  0E03               	movlw	3
   458   000ABA  6E17               	movwf	??_main^0,c
   459   000ABC  0E98               	movlw	152
   460   000ABE                     u997:
   461   000ABE  2EE8               	decfsz	wreg,f,c
   462   000AC0  D7FE               	bra	u997
   463   000AC2  2E17               	decfsz	??_main^0,f,c
   464   000AC4  D7FC               	bra	u997
   465                           
   466                           ;Laboratorio5.c: 41: LATC2 = 0;
   467   000AC6  948B               	bcf	3979,2,c	;volatile
   468                           
   469                           ;Laboratorio5.c: 42: TXSTA = 0b00100000;
   470   000AC8  0E20               	movlw	32
   471   000ACA  6EAC               	movwf	172,c	;volatile
   472                           
   473                           ;Laboratorio5.c: 43: RCSTA = 0b10010000;
   474   000ACC  0E90               	movlw	144
   475   000ACE  6EAB               	movwf	171,c	;volatile
   476                           
   477                           ;Laboratorio5.c: 44: BAUDCON = 0b00000000;
   478   000AD0  0E00               	movlw	0
   479   000AD2  6EB8               	movwf	184,c	;volatile
   480                           
   481                           ;Laboratorio5.c: 46: SPBRG = 12;
   482   000AD4  0E0C               	movlw	12
   483   000AD6  6EAF               	movwf	175,c	;volatile
   484                           
   485                           ;Laboratorio5.c: 48: ADCON0 = 0b00000001;
   486   000AD8  0E01               	movlw	1
   487   000ADA  6EC2               	movwf	194,c	;volatile
   488                           
   489                           ;Laboratorio5.c: 49: ADCON1 = 13;
   490   000ADC  0E0D               	movlw	13
   491   000ADE  6EC1               	movwf	193,c	;volatile
   492                           
   493                           ;Laboratorio5.c: 50: ADCON2 = 0b10001000;
   494   000AE0  0E88               	movlw	136
   495   000AE2  6EC0               	movwf	192,c	;volatile
   496                           
   497                           ;Laboratorio5.c: 53: TRISB = 0;
   498   000AE4  0E00               	movlw	0
   499   000AE6  6E93               	movwf	147,c	;volatile
   500                           
   501                           ;Laboratorio5.c: 54: TRISD = 0;
   502   000AE8  0E00               	movlw	0
   503   000AEA  6E95               	movwf	149,c	;volatile
   504                           
   505                           ;Laboratorio5.c: 55: TRISA = 0b00000001;
   506   000AEC  0E01               	movlw	1
   507   000AEE  6E92               	movwf	146,c	;volatile
   508                           
   509                           ;Laboratorio5.c: 56: TRISC = 0b11010111;
   510   000AF0  0ED7               	movlw	215
   511   000AF2  6E94               	movwf	148,c	;volatile
   512                           
   513                           ;Laboratorio5.c: 57: RBPU = 0;
   514   000AF4  9EF1               	bcf	4081,7,c	;volatile
   515                           
   516                           ;Laboratorio5.c: 59: TempEEPROM = leerDatoEnEEPROM(0);
   517   000AF6  0E00               	movlw	0
   518   000AF8  6E04               	movwf	(leerDatoEnEEPROM@dir+1)^0,c
   519   000AFA  0E00               	movlw	0
   520   000AFC  6E03               	movwf	leerDatoEnEEPROM@dir^0,c
   521   000AFE  ECED  F008         	call	_leerDatoEnEEPROM	;wreg free
   522   000B02  6E1D               	movwf	_TempEEPROM^0,c
   523                           
   524                           ;Laboratorio5.c: 61: InicializaLCD();
   525   000B04  ECBD  F007         	call	_InicializaLCD	;wreg free
   526                           
   527                           ;Laboratorio5.c: 64: T0CON=0b00000011;
   528   000B08  0E03               	movlw	3
   529   000B0A  6ED5               	movwf	213,c	;volatile
   530                           
   531                           ;Laboratorio5.c: 65: TMR0IF=0;
   532   000B0C  94F2               	bcf	4082,2,c	;volatile
   533                           
   534                           ;Laboratorio5.c: 66: TMR0=3036;
   535   000B0E  0E0B               	movlw	11
   536   000B10  6ED7               	movwf	215,c	;volatile
   537   000B12  0EDC               	movlw	220
   538   000B14  6ED6               	movwf	214,c	;volatile
   539                           
   540                           ;Laboratorio5.c: 67: TMR0IE=1;
   541   000B16  8AF2               	bsf	4082,5,c	;volatile
   542                           
   543                           ;Laboratorio5.c: 68: GIE=1;
   544   000B18  8EF2               	bsf	4082,7,c	;volatile
   545                           
   546                           ;Laboratorio5.c: 69: TMR0ON=1;
   547   000B1A  8ED5               	bsf	4053,7,c	;volatile
   548                           
   549                           ;Laboratorio5.c: 72: BorraLCD();
   550   000B1C  ECD9  F008         	call	_BorraLCD	;wreg free
   551                           
   552                           ;Laboratorio5.c: 74: if (TempEEPROM != 0xFF) {
   553   000B20  281D               	incf	_TempEEPROM^0,w,c
   554   000B22  B4D8               	btfsc	status,2,c
   555   000B24  D028               	goto	l1967
   556                           
   557                           ;Laboratorio5.c: 75: MensajeLCD_Word("Ultima temp:");
   558   000B26  0E01               	movlw	low STR_1
   559   000B28  6E07               	movwf	MensajeLCD_Word@a^0,c
   560   000B2A  ECFB  F007         	call	_MensajeLCD_Word	;wreg free
   561                           
   562                           ;Laboratorio5.c: 76: DireccionaLCD(192);
   563   000B2E  0EC0               	movlw	192
   564   000B30  ECCE  F008         	call	_DireccionaLCD
   565                           
   566                           ;Laboratorio5.c: 77: EscribeLCD_c(TempEEPROM / 10 + 48);
   567   000B34  0E0A               	movlw	10
   568   000B36  6E03               	movwf	___lbdiv@divisor^0,c
   569   000B38  501D               	movf	_TempEEPROM^0,w,c
   570   000B3A  ECDE  F007         	call	___lbdiv
   571   000B3E  0F30               	addlw	48
   572   000B40  ECC3  F008         	call	_EscribeLCD_c
   573                           
   574                           ;Laboratorio5.c: 78: EscribeLCD_c(TempEEPROM % 10 + 48);
   575   000B44  0E0A               	movlw	10
   576   000B46  6E03               	movwf	___lbmod@divisor^0,c
   577   000B48  501D               	movf	_TempEEPROM^0,w,c
   578   000B4A  EC63  F008         	call	___lbmod
   579   000B4E  0F30               	addlw	48
   580   000B50  ECC3  F008         	call	_EscribeLCD_c
   581                           
   582                           ;Laboratorio5.c: 79: EscribeLCD_c('C');
   583   000B54  0E43               	movlw	67
   584   000B56  ECC3  F008         	call	_EscribeLCD_c
   585                           
   586                           ;Laboratorio5.c: 80: _delay((unsigned long)((2000)*(8000000/4000.0)));
   587   000B5A  0E15               	movlw	21
   588   000B5C  6E18               	movwf	(??_main+1)^0,c
   589   000B5E  0E4B               	movlw	75
   590   000B60  6E17               	movwf	??_main^0,c
   591   000B62  0EBE               	movlw	190
   592   000B64                     u1007:
   593   000B64  2EE8               	decfsz	wreg,f,c
   594   000B66  D7FE               	bra	u1007
   595   000B68  2E17               	decfsz	??_main^0,f,c
   596   000B6A  D7FC               	bra	u1007
   597   000B6C  2E18               	decfsz	(??_main+1)^0,f,c
   598   000B6E  D7FA               	bra	u1007
   599   000B70  D000               	nop2	
   600                           
   601                           ;Laboratorio5.c: 81: BorraLCD();
   602   000B72  ECD9  F008         	call	_BorraLCD	;wreg free
   603   000B76                     l1967:
   604                           
   605                           ;Laboratorio5.c: 82: };Laboratorio5.c: 84: MensajeLCD_Word("Iniciando");
   606   000B76  0E0E               	movlw	low STR_2
   607   000B78  6E07               	movwf	MensajeLCD_Word@a^0,c
   608   000B7A  ECFB  F007         	call	_MensajeLCD_Word	;wreg free
   609                           
   610                           ;Laboratorio5.c: 85: _delay((unsigned long)((500)*(8000000/4000.0)));
   611   000B7E  0E06               	movlw	6
   612   000B80  6E18               	movwf	(??_main+1)^0,c
   613   000B82  0E13               	movlw	19
   614   000B84  6E17               	movwf	??_main^0,c
   615   000B86  0EAE               	movlw	174
   616   000B88                     u1017:
   617   000B88  2EE8               	decfsz	wreg,f,c
   618   000B8A  D7FE               	bra	u1017
   619   000B8C  2E17               	decfsz	??_main^0,f,c
   620   000B8E  D7FC               	bra	u1017
   621   000B90  2E18               	decfsz	(??_main+1)^0,f,c
   622   000B92  D7FA               	bra	u1017
   623                           
   624                           ;Laboratorio5.c: 86: EscribeLCD_c(46);
   625   000B94  0E2E               	movlw	46
   626   000B96  ECC3  F008         	call	_EscribeLCD_c
   627                           
   628                           ;Laboratorio5.c: 87: _delay((unsigned long)((500)*(8000000/4000.0)));
   629   000B9A  0E06               	movlw	6
   630   000B9C  6E18               	movwf	(??_main+1)^0,c
   631   000B9E  0E13               	movlw	19
   632   000BA0  6E17               	movwf	??_main^0,c
   633   000BA2  0EAE               	movlw	174
   634   000BA4                     u1027:
   635   000BA4  2EE8               	decfsz	wreg,f,c
   636   000BA6  D7FE               	bra	u1027
   637   000BA8  2E17               	decfsz	??_main^0,f,c
   638   000BAA  D7FC               	bra	u1027
   639   000BAC  2E18               	decfsz	(??_main+1)^0,f,c
   640   000BAE  D7FA               	bra	u1027
   641                           
   642                           ;Laboratorio5.c: 88: EscribeLCD_c(46);
   643   000BB0  0E2E               	movlw	46
   644   000BB2  ECC3  F008         	call	_EscribeLCD_c
   645                           
   646                           ;Laboratorio5.c: 89: _delay((unsigned long)((500)*(8000000/4000.0)));
   647   000BB6  0E06               	movlw	6
   648   000BB8  6E18               	movwf	(??_main+1)^0,c
   649   000BBA  0E13               	movlw	19
   650   000BBC  6E17               	movwf	??_main^0,c
   651   000BBE  0EAE               	movlw	174
   652   000BC0                     u1037:
   653   000BC0  2EE8               	decfsz	wreg,f,c
   654   000BC2  D7FE               	bra	u1037
   655   000BC4  2E17               	decfsz	??_main^0,f,c
   656   000BC6  D7FC               	bra	u1037
   657   000BC8  2E18               	decfsz	(??_main+1)^0,f,c
   658   000BCA  D7FA               	bra	u1037
   659                           
   660                           ;Laboratorio5.c: 90: EscribeLCD_c(46);
   661   000BCC  0E2E               	movlw	46
   662   000BCE  ECC3  F008         	call	_EscribeLCD_c
   663                           
   664                           ;Laboratorio5.c: 91: _delay((unsigned long)((500)*(8000000/4000.0)));
   665   000BD2  0E06               	movlw	6
   666   000BD4  6E18               	movwf	(??_main+1)^0,c
   667   000BD6  0E13               	movlw	19
   668   000BD8  6E17               	movwf	??_main^0,c
   669   000BDA  0EAE               	movlw	174
   670   000BDC                     u1047:
   671   000BDC  2EE8               	decfsz	wreg,f,c
   672   000BDE  D7FE               	bra	u1047
   673   000BE0  2E17               	decfsz	??_main^0,f,c
   674   000BE2  D7FC               	bra	u1047
   675   000BE4  2E18               	decfsz	(??_main+1)^0,f,c
   676   000BE6  D7FA               	bra	u1047
   677                           
   678                           ;Laboratorio5.c: 92: BorraLCD();
   679   000BE8  ECD9  F008         	call	_BorraLCD	;wreg free
   680   000BEC                     l1979:
   681                           
   682                           ;Laboratorio5.c: 96: _delay((unsigned long)((500)*(8000000/4000.0)));
   683   000BEC  0E06               	movlw	6
   684   000BEE  6E18               	movwf	(??_main+1)^0,c
   685   000BF0  0E13               	movlw	19
   686   000BF2  6E17               	movwf	??_main^0,c
   687   000BF4  0EAE               	movlw	174
   688   000BF6                     u1057:
   689   000BF6  2EE8               	decfsz	wreg,f,c
   690   000BF8  D7FE               	bra	u1057
   691   000BFA  2E17               	decfsz	??_main^0,f,c
   692   000BFC  D7FC               	bra	u1057
   693   000BFE  2E18               	decfsz	(??_main+1)^0,f,c
   694   000C00  D7FA               	bra	u1057
   695                           
   696                           ;Laboratorio5.c: 98: _delay((unsigned long)((500)*(8000000/4000.0)));
   697   000C02  0E06               	movlw	6
   698   000C04  6E18               	movwf	(??_main+1)^0,c
   699   000C06  0E13               	movlw	19
   700   000C08  6E17               	movwf	??_main^0,c
   701   000C0A  0EAE               	movlw	174
   702   000C0C                     u1067:
   703   000C0C  2EE8               	decfsz	wreg,f,c
   704   000C0E  D7FE               	bra	u1067
   705   000C10  2E17               	decfsz	??_main^0,f,c
   706   000C12  D7FC               	bra	u1067
   707   000C14  2E18               	decfsz	(??_main+1)^0,f,c
   708   000C16  D7FA               	bra	u1067
   709                           
   710                           ;Laboratorio5.c: 100: LeerHT11();
   711   000C18  EC18  F008         	call	_LeerHT11	;wreg free
   712                           
   713                           ;Laboratorio5.c: 102: GuardarDatoEnEEPROM(0, Temp);
   714   000C1C  0E00               	movlw	0
   715   000C1E  6E04               	movwf	(GuardarDatoEnEEPROM@dir+1)^0,c
   716   000C20  0E00               	movlw	0
   717   000C22  6E03               	movwf	GuardarDatoEnEEPROM@dir^0,c
   718   000C24  C01F  F005         	movff	_Temp,GuardarDatoEnEEPROM@dato
   719   000C28  EC9F  F008         	call	_GuardarDatoEnEEPROM	;wreg free
   720                           
   721                           ;Laboratorio5.c: 103: ColorRGB(Temp);
   722   000C2C  C01F  F003         	movff	_Temp,ColorRGB@val
   723   000C30  6A04               	clrf	(ColorRGB@val+1)^0,c
   724   000C32  EC45  F006         	call	_ColorRGB	;wreg free
   725                           
   726                           ;Laboratorio5.c: 106: if(!RC4) TransmitirDatos(RC0, RC1);
   727   000C36  B882               	btfsc	3970,4,c	;volatile
   728   000C38  D011               	goto	l1991
   729   000C3A  A082               	btfss	3970,0,c	;volatile
   730   000C3C  D002               	goto	u930
   731   000C3E  0E01               	movlw	1
   732   000C40  D001               	goto	u940
   733   000C42                     u930:
   734   000C42  0E00               	movlw	0
   735   000C44                     u940:
   736   000C44  6E0B               	movwf	TransmitirDatos@Ent1^0,c
   737   000C46  6A0C               	clrf	(TransmitirDatos@Ent1+1)^0,c
   738   000C48  A282               	btfss	3970,1,c	;volatile
   739   000C4A  D002               	goto	u950
   740   000C4C  0E01               	movlw	1
   741   000C4E  D001               	goto	u960
   742   000C50                     u950:
   743   000C50  0E00               	movlw	0
   744   000C52                     u960:
   745   000C52  6E0D               	movwf	TransmitirDatos@Ent2^0,c
   746   000C54  6A0E               	clrf	(TransmitirDatos@Ent2+1)^0,c
   747   000C56  EC12  F004         	call	_TransmitirDatos	;wreg free
   748   000C5A  D00A               	goto	l1993
   749   000C5C                     l1991:
   750                           
   751                           ;Laboratorio5.c: 107: else TransmitirDatos(A, B);
   752   000C5C  C01B  F00B         	movff	_A,TransmitirDatos@Ent1
   753   000C60  C01C  F00C         	movff	_A+1,TransmitirDatos@Ent1+1
   754   000C64  C019  F00D         	movff	_B,TransmitirDatos@Ent2
   755   000C68  C01A  F00E         	movff	_B+1,TransmitirDatos@Ent2+1
   756   000C6C  EC12  F004         	call	_TransmitirDatos	;wreg free
   757   000C70                     l1993:
   758                           
   759                           ;Laboratorio5.c: 109: Conversion(0);
   760   000C70  0E00               	movlw	0
   761   000C72  ECE3  F008         	call	_Conversion
   762                           
   763                           ;Laboratorio5.c: 110: RD3 = (ADRES <= 511) ? 0 : 1;
   764   000C76  0E00               	movlw	0
   765   000C78  5CC3               	subwf	195,w,c	;volatile
   766   000C7A  0E02               	movlw	2
   767   000C7C  58C4               	subwfb	196,w,c	;volatile
   768   000C7E  A0D8               	btfss	status,0,c
   769   000C80  D002               	goto	u970
   770   000C82  8683               	bsf	3971,3,c	;volatile
   771   000C84  D7B3               	goto	l1979
   772   000C86                     u970:
   773   000C86  9683               	bcf	3971,3,c	;volatile
   774   000C88  D7B1               	goto	l1979
   775   000C8A                     __end_of_main:
   776                           	callstack 0
   777                           
   778 ;; *************** function _leerDatoEnEEPROM *****************
   779 ;; Defined at:
   780 ;;		line 289 in file "Laboratorio5.c"
   781 ;; Parameters:    Size  Location     Type
   782 ;;  dir             2    2[COMRAM] unsigned int 
   783 ;; Auto vars:     Size  Location     Type
   784 ;;		None
   785 ;; Return value:  Size  Location     Type
   786 ;;                  1    wreg      unsigned char 
   787 ;; Registers used:
   788 ;;		wreg, status,2
   789 ;; Tracked objects:
   790 ;;		On entry : 0/0
   791 ;;		On exit  : 0/0
   792 ;;		Unchanged: 0/0
   793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   794 ;;      Params:         2       0       0       0       0       0       0       0       0
   795 ;;      Locals:         0       0       0       0       0       0       0       0       0
   796 ;;      Temps:          0       0       0       0       0       0       0       0       0
   797 ;;      Totals:         2       0       0       0       0       0       0       0       0
   798 ;;Total ram usage:        2 bytes
   799 ;; Hardware stack levels used: 1
   800 ;; Hardware stack levels required when called: 2
   801 ;; This function calls:
   802 ;;		Nothing
   803 ;; This function is called by:
   804 ;;		_main
   805 ;; This function uses a non-reentrant model
   806 ;;
   807                           
   808                           	psect	text1
   809   0011DA                     __ptext1:
   810                           	callstack 0
   811   0011DA                     _leerDatoEnEEPROM:
   812                           	callstack 28
   813                           
   814                           ;Laboratorio5.c: 290: EEADR = dir;
   815                           
   816                           ;incstack = 0
   817   0011DA  C003  FFA9         	movff	leerDatoEnEEPROM@dir,4009	;volatile
   818                           
   819                           ;Laboratorio5.c: 291: EEPGD = 0;
   820   0011DE  9EA6               	bcf	4006,7,c	;volsfr
   821                           
   822                           ;Laboratorio5.c: 292: CFGS = 0;
   823   0011E0  9CA6               	bcf	4006,6,c	;volsfr
   824                           
   825                           ;Laboratorio5.c: 293: RD = 1;
   826   0011E2  80A6               	bsf	4006,0,c	;volsfr
   827                           
   828                           ;Laboratorio5.c: 295: return EEDATA;
   829   0011E4  50A8               	movf	168,w,c	;volatile
   830   0011E6  0012               	return		;funcret
   831   0011E8                     __end_of_leerDatoEnEEPROM:
   832                           	callstack 0
   833                           
   834 ;; *************** function _TransmitirDatos *****************
   835 ;; Defined at:
   836 ;;		line 162 in file "Laboratorio5.c"
   837 ;; Parameters:    Size  Location     Type
   838 ;;  Ent1            2   10[COMRAM] unsigned int 
   839 ;;  Ent2            2   12[COMRAM] unsigned int 
   840 ;; Auto vars:     Size  Location     Type
   841 ;;  TempC           2   20[COMRAM] unsigned int 
   842 ;;  Simb            2   18[COMRAM] unsigned int 
   843 ;;  n               2   16[COMRAM] unsigned int 
   844 ;;  HumC            2    0        unsigned int 
   845 ;; Return value:  Size  Location     Type
   846 ;;                  1    wreg      void 
   847 ;; Registers used:
   848 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   849 ;; Tracked objects:
   850 ;;		On entry : 0/0
   851 ;;		On exit  : 0/0
   852 ;;		Unchanged: 0/0
   853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   854 ;;      Params:         4       0       0       0       0       0       0       0       0
   855 ;;      Locals:         6       0       0       0       0       0       0       0       0
   856 ;;      Temps:          2       0       0       0       0       0       0       0       0
   857 ;;      Totals:        12       0       0       0       0       0       0       0       0
   858 ;;Total ram usage:       12 bytes
   859 ;; Hardware stack levels used: 1
   860 ;; Hardware stack levels required when called: 6
   861 ;; This function calls:
   862 ;;		_BorraLCD
   863 ;;		_DireccionaLCD
   864 ;;		_EscribeLCD_c
   865 ;;		_MensajeLCD_Word
   866 ;;		_Transmitir
   867 ;;		___awdiv
   868 ;;		___lbdiv
   869 ;;		___lbmod
   870 ;;		___lwdiv
   871 ;;		___lwmod
   872 ;;		___wmul
   873 ;; This function is called by:
   874 ;;		_main
   875 ;; This function uses a non-reentrant model
   876 ;;
   877                           
   878                           	psect	text2
   879   000824                     __ptext2:
   880                           	callstack 0
   881   000824                     _TransmitirDatos:
   882                           	callstack 24
   883                           
   884                           ;Laboratorio5.c: 163: unsigned int n = Ent1 * 10 + Ent2, TempC = Temp, HumC = Hum;
   885                           
   886                           ;incstack = 0
   887   000824  C00B  F003         	movff	TransmitirDatos@Ent1,___wmul@multiplier
   888   000828  C00C  F004         	movff	TransmitirDatos@Ent1+1,___wmul@multiplier+1
   889   00082C  0E00               	movlw	0
   890   00082E  6E06               	movwf	(___wmul@multiplicand+1)^0,c
   891   000830  0E0A               	movlw	10
   892   000832  6E05               	movwf	___wmul@multiplicand^0,c
   893   000834  EC8C  F008         	call	___wmul	;wreg free
   894   000838  500D               	movf	TransmitirDatos@Ent2^0,w,c
   895   00083A  2403               	addwf	?___wmul^0,w,c
   896   00083C  6E11               	movwf	TransmitirDatos@n^0,c
   897   00083E  500E               	movf	(TransmitirDatos@Ent2+1)^0,w,c
   898   000840  2004               	addwfc	(?___wmul+1)^0,w,c
   899   000842  6E12               	movwf	(TransmitirDatos@n+1)^0,c
   900   000844  C01F  F015         	movff	_Temp,TransmitirDatos@TempC
   901   000848  6A16               	clrf	(TransmitirDatos@TempC+1)^0,c
   902                           
   903                           ;Laboratorio5.c: 164: unsigned int Simb = 67;
   904   00084A  0E00               	movlw	0
   905   00084C  6E14               	movwf	(TransmitirDatos@Simb+1)^0,c
   906   00084E  0E43               	movlw	67
   907   000850  6E13               	movwf	TransmitirDatos@Simb^0,c
   908                           
   909                           ;Laboratorio5.c: 165: BorraLCD();
   910   000852  ECD9  F008         	call	_BorraLCD	;wreg free
   911                           
   912                           ;Laboratorio5.c: 166: switch (n) {
   913   000856  D03E               	goto	l1843
   914   000858                     l236:
   915                           
   916                           ;Laboratorio5.c: 168: TempC = Temp;
   917   000858  C01F  F015         	movff	_Temp,TransmitirDatos@TempC
   918   00085C  6A16               	clrf	(TransmitirDatos@TempC+1)^0,c
   919                           
   920                           ;Laboratorio5.c: 169: Simb = 67;
   921   00085E  0E00               	movlw	0
   922   000860  6E14               	movwf	(TransmitirDatos@Simb+1)^0,c
   923   000862  0E43               	movlw	67
   924   000864  D035               	goto	L3
   925   000866                     l1829:
   926                           
   927                           ;Laboratorio5.c: 172: TempC = Temp + 273;
   928   000866  0E11               	movlw	17
   929   000868  241F               	addwf	_Temp^0,w,c
   930   00086A  6E15               	movwf	TransmitirDatos@TempC^0,c
   931   00086C  6A16               	clrf	(TransmitirDatos@TempC+1)^0,c
   932   00086E  0E01               	movlw	1
   933   000870  2216               	addwfc	(TransmitirDatos@TempC+1)^0,f,c
   934                           
   935                           ;Laboratorio5.c: 173: Simb = 75;
   936   000872  0E00               	movlw	0
   937   000874  6E14               	movwf	(TransmitirDatos@Simb+1)^0,c
   938   000876  0E4B               	movlw	75
   939   000878  D02B               	goto	L3
   940   00087A                     l1833:
   941                           
   942                           ;Laboratorio5.c: 176: TempC = Temp * 9 / 5 + 492;
   943   00087A  501F               	movf	_Temp^0,w,c
   944   00087C  0D09               	mullw	9
   945   00087E  CFF3 F003          	movff	prodl,___awdiv@dividend
   946   000882  CFF4 F004          	movff	prodh,___awdiv@dividend+1
   947   000886  0E00               	movlw	0
   948   000888  6E06               	movwf	(___awdiv@divisor+1)^0,c
   949   00088A  0E05               	movlw	5
   950   00088C  6E05               	movwf	___awdiv@divisor^0,c
   951   00088E  ECFE  F006         	call	___awdiv	;wreg free
   952   000892  0EEC               	movlw	236
   953   000894  2403               	addwf	?___awdiv^0,w,c
   954   000896  6E15               	movwf	TransmitirDatos@TempC^0,c
   955   000898  0E01               	movlw	1
   956   00089A  2004               	addwfc	(?___awdiv+1)^0,w,c
   957   00089C  6E16               	movwf	(TransmitirDatos@TempC+1)^0,c
   958                           
   959                           ;Laboratorio5.c: 177: Simb = 82;
   960   00089E  0E00               	movlw	0
   961   0008A0  6E14               	movwf	(TransmitirDatos@Simb+1)^0,c
   962   0008A2  0E52               	movlw	82
   963   0008A4  D015               	goto	L3
   964   0008A6                     l1837:
   965                           
   966                           ;Laboratorio5.c: 180: TempC = Temp * 9 / 5 + 32;
   967   0008A6  501F               	movf	_Temp^0,w,c
   968   0008A8  0D09               	mullw	9
   969   0008AA  CFF3 F003          	movff	prodl,___awdiv@dividend
   970   0008AE  CFF4 F004          	movff	prodh,___awdiv@dividend+1
   971   0008B2  0E00               	movlw	0
   972   0008B4  6E06               	movwf	(___awdiv@divisor+1)^0,c
   973   0008B6  0E05               	movlw	5
   974   0008B8  6E05               	movwf	___awdiv@divisor^0,c
   975   0008BA  ECFE  F006         	call	___awdiv	;wreg free
   976   0008BE  0E20               	movlw	32
   977   0008C0  2403               	addwf	?___awdiv^0,w,c
   978   0008C2  6E15               	movwf	TransmitirDatos@TempC^0,c
   979   0008C4  0E00               	movlw	0
   980   0008C6  2004               	addwfc	(?___awdiv+1)^0,w,c
   981   0008C8  6E16               	movwf	(TransmitirDatos@TempC+1)^0,c
   982                           
   983                           ;Laboratorio5.c: 181: Simb = 70;
   984   0008CA  0E00               	movlw	0
   985   0008CC  6E14               	movwf	(TransmitirDatos@Simb+1)^0,c
   986   0008CE  0E46               	movlw	70
   987   0008D0                     L3:
   988   0008D0  6E13               	movwf	TransmitirDatos@Simb^0,c
   989                           
   990                           ;Laboratorio5.c: 182: break;
   991   0008D2  D015               	goto	l1845
   992   0008D4                     l1843:
   993   0008D4  C011  F00F         	movff	TransmitirDatos@n,??_TransmitirDatos
   994   0008D8  C012  F010         	movff	TransmitirDatos@n+1,??_TransmitirDatos+1
   995                           
   996                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   997                           ; Switch size 1, requested type "simple"
   998                           ; Number of cases is 1, Range of values is 0 to 0
   999                           ; switch strategies available:
  1000                           ; Name         Instructions Cycles
  1001                           ; simple_byte            4     3 (average)
  1002                           ;	Chosen strategy is simple_byte
  1003   0008DC  5010               	movf	(??_TransmitirDatos+1)^0,w,c
  1004   0008DE  0A00               	xorlw	0	; case 0
  1005   0008E0  A4D8               	btfss	status,2,c
  1006   0008E2  D00D               	goto	l1845
  1007                           
  1008                           ; Switch size 1, requested type "simple"
  1009                           ; Number of cases is 4, Range of values is 0 to 11
  1010                           ; switch strategies available:
  1011                           ; Name         Instructions Cycles
  1012                           ; simple_byte           13     7 (average)
  1013                           ;	Chosen strategy is simple_byte
  1014   0008E4  500F               	movf	??_TransmitirDatos^0,w,c
  1015   0008E6  0A00               	xorlw	0	; case 0
  1016   0008E8  B4D8               	btfsc	status,2,c
  1017   0008EA  D7B6               	goto	l236
  1018   0008EC  0A01               	xorlw	1	; case 1
  1019   0008EE  B4D8               	btfsc	status,2,c
  1020   0008F0  D7BA               	goto	l1829
  1021   0008F2  0A0B               	xorlw	11	; case 10
  1022   0008F4  B4D8               	btfsc	status,2,c
  1023   0008F6  D7C1               	goto	l1833
  1024   0008F8  0A01               	xorlw	1	; case 11
  1025   0008FA  B4D8               	btfsc	status,2,c
  1026   0008FC  D7D4               	goto	l1837
  1027   0008FE                     l1845:
  1028                           
  1029                           ;Laboratorio5.c: 184: Transmitir('T');
  1030   0008FE  0E54               	movlw	84
  1031   000900  ECFB  F008         	call	_Transmitir
  1032                           
  1033                           ;Laboratorio5.c: 185: Transmitir('e');
  1034   000904  0E65               	movlw	101
  1035   000906  ECFB  F008         	call	_Transmitir
  1036                           
  1037                           ;Laboratorio5.c: 186: Transmitir('m');
  1038   00090A  0E6D               	movlw	109
  1039   00090C  ECFB  F008         	call	_Transmitir
  1040                           
  1041                           ;Laboratorio5.c: 187: Transmitir('p');
  1042   000910  0E70               	movlw	112
  1043   000912  ECFB  F008         	call	_Transmitir
  1044                           
  1045                           ;Laboratorio5.c: 188: Transmitir(':');
  1046   000916  0E3A               	movlw	58
  1047   000918  ECFB  F008         	call	_Transmitir
  1048                           
  1049                           ;Laboratorio5.c: 189: Transmitir(' ');
  1050   00091C  0E20               	movlw	32
  1051   00091E  ECFB  F008         	call	_Transmitir
  1052                           
  1053                           ;Laboratorio5.c: 191: MensajeLCD_Word("Temp:");
  1054   000922  0E18               	movlw	low STR_3
  1055   000924  6E07               	movwf	MensajeLCD_Word@a^0,c
  1056   000926  ECFB  F007         	call	_MensajeLCD_Word	;wreg free
  1057                           
  1058                           ;Laboratorio5.c: 192: if (TempC / 100 > 0) {
  1059   00092A  C015  F003         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1060   00092E  C016  F004         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1061   000932  0E00               	movlw	0
  1062   000934  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1063   000936  0E64               	movlw	100
  1064   000938  6E05               	movwf	___lwdiv@divisor^0,c
  1065   00093A  EC73  F007         	call	___lwdiv	;wreg free
  1066   00093E  5003               	movf	?___lwdiv^0,w,c
  1067   000940  1004               	iorwf	(?___lwdiv+1)^0,w,c
  1068   000942  B4D8               	btfsc	status,2,c
  1069   000944  D02A               	goto	l241
  1070                           
  1071                           ;Laboratorio5.c: 193: Transmitir(TempC / 100 + 48);
  1072   000946  C015  F003         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1073   00094A  C016  F004         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1074   00094E  0E00               	movlw	0
  1075   000950  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1076   000952  0E64               	movlw	100
  1077   000954  6E05               	movwf	___lwdiv@divisor^0,c
  1078   000956  EC73  F007         	call	___lwdiv	;wreg free
  1079   00095A  5003               	movf	?___lwdiv^0,w,c
  1080   00095C  0F30               	addlw	48
  1081   00095E  ECFB  F008         	call	_Transmitir
  1082                           
  1083                           ;Laboratorio5.c: 194: EscribeLCD_c(TempC / 100 + 48);
  1084   000962  C015  F003         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1085   000966  C016  F004         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1086   00096A  0E00               	movlw	0
  1087   00096C  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1088   00096E  0E64               	movlw	100
  1089   000970  6E05               	movwf	___lwdiv@divisor^0,c
  1090   000972  EC73  F007         	call	___lwdiv	;wreg free
  1091   000976  5003               	movf	?___lwdiv^0,w,c
  1092   000978  0F30               	addlw	48
  1093   00097A  ECC3  F008         	call	_EscribeLCD_c
  1094                           
  1095                           ;Laboratorio5.c: 195: TempC = TempC % 100;
  1096   00097E  C015  F003         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1097   000982  C016  F004         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1098   000986  0E00               	movlw	0
  1099   000988  6E06               	movwf	(___lwmod@divisor+1)^0,c
  1100   00098A  0E64               	movlw	100
  1101   00098C  6E05               	movwf	___lwmod@divisor^0,c
  1102   00098E  EC9C  F007         	call	___lwmod	;wreg free
  1103   000992  C003  F015         	movff	?___lwmod,TransmitirDatos@TempC
  1104   000996  C004  F016         	movff	?___lwmod+1,TransmitirDatos@TempC+1
  1105   00099A                     l241:
  1106                           
  1107                           ;Laboratorio5.c: 196: };Laboratorio5.c: 197: Transmitir(TempC / 10 + 48);
  1108   00099A  C015  F003         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1109   00099E  C016  F004         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1110   0009A2  0E00               	movlw	0
  1111   0009A4  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1112   0009A6  0E0A               	movlw	10
  1113   0009A8  6E05               	movwf	___lwdiv@divisor^0,c
  1114   0009AA  EC73  F007         	call	___lwdiv	;wreg free
  1115   0009AE  5003               	movf	?___lwdiv^0,w,c
  1116   0009B0  0F30               	addlw	48
  1117   0009B2  ECFB  F008         	call	_Transmitir
  1118                           
  1119                           ;Laboratorio5.c: 198: Transmitir(TempC % 10 + 48);
  1120   0009B6  C015  F003         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1121   0009BA  C016  F004         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1122   0009BE  0E00               	movlw	0
  1123   0009C0  6E06               	movwf	(___lwmod@divisor+1)^0,c
  1124   0009C2  0E0A               	movlw	10
  1125   0009C4  6E05               	movwf	___lwmod@divisor^0,c
  1126   0009C6  EC9C  F007         	call	___lwmod	;wreg free
  1127   0009CA  5003               	movf	?___lwmod^0,w,c
  1128   0009CC  0F30               	addlw	48
  1129   0009CE  ECFB  F008         	call	_Transmitir
  1130                           
  1131                           ;Laboratorio5.c: 199: Transmitir(167);
  1132   0009D2  0EA7               	movlw	167
  1133   0009D4  ECFB  F008         	call	_Transmitir
  1134                           
  1135                           ;Laboratorio5.c: 200: Transmitir(Simb);
  1136   0009D8  5013               	movf	TransmitirDatos@Simb^0,w,c
  1137   0009DA  ECFB  F008         	call	_Transmitir
  1138                           
  1139                           ;Laboratorio5.c: 201: Transmitir(' ');
  1140   0009DE  0E20               	movlw	32
  1141   0009E0  ECFB  F008         	call	_Transmitir
  1142                           
  1143                           ;Laboratorio5.c: 202: Transmitir('\n');
  1144   0009E4  0E0A               	movlw	10
  1145   0009E6  ECFB  F008         	call	_Transmitir
  1146                           
  1147                           ;Laboratorio5.c: 203: Transmitir('H');
  1148   0009EA  0E48               	movlw	72
  1149   0009EC  ECFB  F008         	call	_Transmitir
  1150                           
  1151                           ;Laboratorio5.c: 204: Transmitir('u');
  1152   0009F0  0E75               	movlw	117
  1153   0009F2  ECFB  F008         	call	_Transmitir
  1154                           
  1155                           ;Laboratorio5.c: 205: Transmitir('m');
  1156   0009F6  0E6D               	movlw	109
  1157   0009F8  ECFB  F008         	call	_Transmitir
  1158                           
  1159                           ;Laboratorio5.c: 206: Transmitir(':');
  1160   0009FC  0E3A               	movlw	58
  1161   0009FE  ECFB  F008         	call	_Transmitir
  1162                           
  1163                           ;Laboratorio5.c: 207: Transmitir(' ');
  1164   000A02  0E20               	movlw	32
  1165   000A04  ECFB  F008         	call	_Transmitir
  1166                           
  1167                           ;Laboratorio5.c: 208: Transmitir(Hum / 10 + 48);
  1168   000A08  0E0A               	movlw	10
  1169   000A0A  6E03               	movwf	___lbdiv@divisor^0,c
  1170   000A0C  501E               	movf	_Hum^0,w,c
  1171   000A0E  ECDE  F007         	call	___lbdiv
  1172   000A12  0F30               	addlw	48
  1173   000A14  ECFB  F008         	call	_Transmitir
  1174                           
  1175                           ;Laboratorio5.c: 209: Transmitir(Hum % 10 + 48);
  1176   000A18  0E0A               	movlw	10
  1177   000A1A  6E03               	movwf	___lbmod@divisor^0,c
  1178   000A1C  501E               	movf	_Hum^0,w,c
  1179   000A1E  EC63  F008         	call	___lbmod
  1180   000A22  0F30               	addlw	48
  1181   000A24  ECFB  F008         	call	_Transmitir
  1182                           
  1183                           ;Laboratorio5.c: 210: Transmitir(' ');
  1184   000A28  0E20               	movlw	32
  1185   000A2A  ECFB  F008         	call	_Transmitir
  1186                           
  1187                           ;Laboratorio5.c: 211: Transmitir('%');
  1188   000A2E  0E25               	movlw	37
  1189   000A30  ECFB  F008         	call	_Transmitir
  1190                           
  1191                           ;Laboratorio5.c: 212: Transmitir('\n');
  1192   000A34  0E0A               	movlw	10
  1193   000A36  ECFB  F008         	call	_Transmitir
  1194                           
  1195                           ;Laboratorio5.c: 213: Transmitir(' ');
  1196   000A3A  0E20               	movlw	32
  1197   000A3C  ECFB  F008         	call	_Transmitir
  1198                           
  1199                           ;Laboratorio5.c: 215: EscribeLCD_c(TempC / 10 + 48);
  1200   000A40  C015  F003         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1201   000A44  C016  F004         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1202   000A48  0E00               	movlw	0
  1203   000A4A  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1204   000A4C  0E0A               	movlw	10
  1205   000A4E  6E05               	movwf	___lwdiv@divisor^0,c
  1206   000A50  EC73  F007         	call	___lwdiv	;wreg free
  1207   000A54  5003               	movf	?___lwdiv^0,w,c
  1208   000A56  0F30               	addlw	48
  1209   000A58  ECC3  F008         	call	_EscribeLCD_c
  1210                           
  1211                           ;Laboratorio5.c: 216: EscribeLCD_c(TempC % 10 + 48);
  1212   000A5C  C015  F003         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1213   000A60  C016  F004         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1214   000A64  0E00               	movlw	0
  1215   000A66  6E06               	movwf	(___lwmod@divisor+1)^0,c
  1216   000A68  0E0A               	movlw	10
  1217   000A6A  6E05               	movwf	___lwmod@divisor^0,c
  1218   000A6C  EC9C  F007         	call	___lwmod	;wreg free
  1219   000A70  5003               	movf	?___lwmod^0,w,c
  1220   000A72  0F30               	addlw	48
  1221   000A74  ECC3  F008         	call	_EscribeLCD_c
  1222                           
  1223                           ;Laboratorio5.c: 217: EscribeLCD_c(Simb);
  1224   000A78  5013               	movf	TransmitirDatos@Simb^0,w,c
  1225   000A7A  ECC3  F008         	call	_EscribeLCD_c
  1226                           
  1227                           ;Laboratorio5.c: 218: DireccionaLCD(192);
  1228   000A7E  0EC0               	movlw	192
  1229   000A80  ECCE  F008         	call	_DireccionaLCD
  1230                           
  1231                           ;Laboratorio5.c: 219: MensajeLCD_Word("Hum:");
  1232   000A84  0E1E               	movlw	low STR_4
  1233   000A86  6E07               	movwf	MensajeLCD_Word@a^0,c
  1234   000A88  ECFB  F007         	call	_MensajeLCD_Word	;wreg free
  1235                           
  1236                           ;Laboratorio5.c: 220: EscribeLCD_c(Hum / 10 + 48);
  1237   000A8C  0E0A               	movlw	10
  1238   000A8E  6E03               	movwf	___lbdiv@divisor^0,c
  1239   000A90  501E               	movf	_Hum^0,w,c
  1240   000A92  ECDE  F007         	call	___lbdiv
  1241   000A96  0F30               	addlw	48
  1242   000A98  ECC3  F008         	call	_EscribeLCD_c
  1243                           
  1244                           ;Laboratorio5.c: 221: EscribeLCD_c(Hum % 10 + 48);
  1245   000A9C  0E0A               	movlw	10
  1246   000A9E  6E03               	movwf	___lbmod@divisor^0,c
  1247   000AA0  501E               	movf	_Hum^0,w,c
  1248   000AA2  EC63  F008         	call	___lbmod
  1249   000AA6  0F30               	addlw	48
  1250   000AA8  ECC3  F008         	call	_EscribeLCD_c
  1251                           
  1252                           ;Laboratorio5.c: 222: EscribeLCD_c('%');
  1253   000AAC  0E25               	movlw	37
  1254   000AAE  ECC3  F008         	call	_EscribeLCD_c
  1255   000AB2  0012               	return		;funcret
  1256   000AB4                     __end_of_TransmitirDatos:
  1257                           	callstack 0
  1258                           
  1259 ;; *************** function ___wmul *****************
  1260 ;; Defined at:
  1261 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  1262 ;; Parameters:    Size  Location     Type
  1263 ;;  multiplier      2    2[COMRAM] unsigned int 
  1264 ;;  multiplicand    2    4[COMRAM] unsigned int 
  1265 ;; Auto vars:     Size  Location     Type
  1266 ;;  product         2    6[COMRAM] unsigned int 
  1267 ;; Return value:  Size  Location     Type
  1268 ;;                  2    2[COMRAM] unsigned int 
  1269 ;; Registers used:
  1270 ;;		wreg, status,2, status,0, prodl, prodh
  1271 ;; Tracked objects:
  1272 ;;		On entry : 0/0
  1273 ;;		On exit  : 0/0
  1274 ;;		Unchanged: 0/0
  1275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1276 ;;      Params:         4       0       0       0       0       0       0       0       0
  1277 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1278 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1279 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1280 ;;Total ram usage:        6 bytes
  1281 ;; Hardware stack levels used: 1
  1282 ;; Hardware stack levels required when called: 2
  1283 ;; This function calls:
  1284 ;;		Nothing
  1285 ;; This function is called by:
  1286 ;;		_TransmitirDatos
  1287 ;; This function uses a non-reentrant model
  1288 ;;
  1289                           
  1290                           	psect	text3
  1291   001118                     __ptext3:
  1292                           	callstack 0
  1293   001118                     ___wmul:
  1294                           	callstack 27
  1295                           
  1296                           ;incstack = 0
  1297   001118  5003               	movf	___wmul@multiplier^0,w,c
  1298   00111A  0205               	mulwf	___wmul@multiplicand^0,c
  1299   00111C  CFF3 F007          	movff	prodl,___wmul@product
  1300   001120  CFF4 F008          	movff	prodh,___wmul@product+1
  1301   001124  5003               	movf	___wmul@multiplier^0,w,c
  1302   001126  0206               	mulwf	(___wmul@multiplicand+1)^0,c
  1303   001128  50F3               	movf	243,w,c
  1304   00112A  2608               	addwf	(___wmul@product+1)^0,f,c
  1305   00112C  5004               	movf	(___wmul@multiplier+1)^0,w,c
  1306   00112E  0205               	mulwf	___wmul@multiplicand^0,c
  1307   001130  50F3               	movf	243,w,c
  1308   001132  2608               	addwf	(___wmul@product+1)^0,f,c
  1309   001134  C007  F003         	movff	___wmul@product,?___wmul
  1310   001138  C008  F004         	movff	___wmul@product+1,?___wmul+1
  1311   00113C  0012               	return		;funcret
  1312   00113E                     __end_of___wmul:
  1313                           	callstack 0
  1314                           
  1315 ;; *************** function ___lwmod *****************
  1316 ;; Defined at:
  1317 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  1318 ;; Parameters:    Size  Location     Type
  1319 ;;  dividend        2    2[COMRAM] unsigned int 
  1320 ;;  divisor         2    4[COMRAM] unsigned int 
  1321 ;; Auto vars:     Size  Location     Type
  1322 ;;  counter         1    6[COMRAM] unsigned char 
  1323 ;; Return value:  Size  Location     Type
  1324 ;;                  2    2[COMRAM] unsigned int 
  1325 ;; Registers used:
  1326 ;;		wreg, status,2, status,0
  1327 ;; Tracked objects:
  1328 ;;		On entry : 0/0
  1329 ;;		On exit  : 0/0
  1330 ;;		Unchanged: 0/0
  1331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1332 ;;      Params:         4       0       0       0       0       0       0       0       0
  1333 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1334 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1335 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1336 ;;Total ram usage:        5 bytes
  1337 ;; Hardware stack levels used: 1
  1338 ;; Hardware stack levels required when called: 2
  1339 ;; This function calls:
  1340 ;;		Nothing
  1341 ;; This function is called by:
  1342 ;;		_TransmitirDatos
  1343 ;; This function uses a non-reentrant model
  1344 ;;
  1345                           
  1346                           	psect	text4
  1347   000F38                     __ptext4:
  1348                           	callstack 0
  1349   000F38                     ___lwmod:
  1350                           	callstack 27
  1351                           
  1352                           ;incstack = 0
  1353   000F38  5005               	movf	___lwmod@divisor^0,w,c
  1354   000F3A  1006               	iorwf	(___lwmod@divisor+1)^0,w,c
  1355   000F3C  B4D8               	btfsc	status,2,c
  1356   000F3E  D018               	goto	l781
  1357   000F40  0E01               	movlw	1
  1358   000F42  6E07               	movwf	___lwmod@counter^0,c
  1359   000F44  D004               	goto	l1749
  1360   000F46                     l1747:
  1361   000F46  90D8               	bcf	status,0,c
  1362   000F48  3605               	rlcf	___lwmod@divisor^0,f,c
  1363   000F4A  3606               	rlcf	(___lwmod@divisor+1)^0,f,c
  1364   000F4C  2A07               	incf	___lwmod@counter^0,f,c
  1365   000F4E                     l1749:
  1366   000F4E  AE06               	btfss	(___lwmod@divisor+1)^0,7,c
  1367   000F50  D7FA               	goto	l1747
  1368   000F52                     u730:
  1369   000F52  5005               	movf	___lwmod@divisor^0,w,c
  1370   000F54  5C03               	subwf	___lwmod@dividend^0,w,c
  1371   000F56  5006               	movf	(___lwmod@divisor+1)^0,w,c
  1372   000F58  5804               	subwfb	(___lwmod@dividend+1)^0,w,c
  1373   000F5A  A0D8               	btfss	status,0,c
  1374   000F5C  D004               	goto	l1755
  1375   000F5E  5005               	movf	___lwmod@divisor^0,w,c
  1376   000F60  5E03               	subwf	___lwmod@dividend^0,f,c
  1377   000F62  5006               	movf	(___lwmod@divisor+1)^0,w,c
  1378   000F64  5A04               	subwfb	(___lwmod@dividend+1)^0,f,c
  1379   000F66                     l1755:
  1380   000F66  90D8               	bcf	status,0,c
  1381   000F68  3206               	rrcf	(___lwmod@divisor+1)^0,f,c
  1382   000F6A  3205               	rrcf	___lwmod@divisor^0,f,c
  1383   000F6C  2E07               	decfsz	___lwmod@counter^0,f,c
  1384   000F6E  D7F1               	goto	u730
  1385   000F70                     l781:
  1386   000F70  C003  F003         	movff	___lwmod@dividend,?___lwmod
  1387   000F74  C004  F004         	movff	___lwmod@dividend+1,?___lwmod+1
  1388   000F78  0012               	return		;funcret
  1389   000F7A                     __end_of___lwmod:
  1390                           	callstack 0
  1391                           
  1392 ;; *************** function ___lwdiv *****************
  1393 ;; Defined at:
  1394 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  1395 ;; Parameters:    Size  Location     Type
  1396 ;;  dividend        2    2[COMRAM] unsigned int 
  1397 ;;  divisor         2    4[COMRAM] unsigned int 
  1398 ;; Auto vars:     Size  Location     Type
  1399 ;;  quotient        2    6[COMRAM] unsigned int 
  1400 ;;  counter         1    8[COMRAM] unsigned char 
  1401 ;; Return value:  Size  Location     Type
  1402 ;;                  2    2[COMRAM] unsigned int 
  1403 ;; Registers used:
  1404 ;;		wreg, status,2, status,0
  1405 ;; Tracked objects:
  1406 ;;		On entry : 0/0
  1407 ;;		On exit  : 0/0
  1408 ;;		Unchanged: 0/0
  1409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1410 ;;      Params:         4       0       0       0       0       0       0       0       0
  1411 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1412 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1413 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1414 ;;Total ram usage:        7 bytes
  1415 ;; Hardware stack levels used: 1
  1416 ;; Hardware stack levels required when called: 2
  1417 ;; This function calls:
  1418 ;;		Nothing
  1419 ;; This function is called by:
  1420 ;;		_TransmitirDatos
  1421 ;; This function uses a non-reentrant model
  1422 ;;
  1423                           
  1424                           	psect	text5
  1425   000EE6                     __ptext5:
  1426                           	callstack 0
  1427   000EE6                     ___lwdiv:
  1428                           	callstack 27
  1429                           
  1430                           ;incstack = 0
  1431   000EE6  0E00               	movlw	0
  1432   000EE8  6E08               	movwf	(___lwdiv@quotient+1)^0,c
  1433   000EEA  0E00               	movlw	0
  1434   000EEC  6E07               	movwf	___lwdiv@quotient^0,c
  1435   000EEE  5005               	movf	___lwdiv@divisor^0,w,c
  1436   000EF0  1006               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1437   000EF2  B4D8               	btfsc	status,2,c
  1438   000EF4  D01C               	goto	l771
  1439   000EF6  0E01               	movlw	1
  1440   000EF8  6E09               	movwf	___lwdiv@counter^0,c
  1441   000EFA  D004               	goto	l1729
  1442   000EFC                     l1727:
  1443   000EFC  90D8               	bcf	status,0,c
  1444   000EFE  3605               	rlcf	___lwdiv@divisor^0,f,c
  1445   000F00  3606               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1446   000F02  2A09               	incf	___lwdiv@counter^0,f,c
  1447   000F04                     l1729:
  1448   000F04  AE06               	btfss	(___lwdiv@divisor+1)^0,7,c
  1449   000F06  D7FA               	goto	l1727
  1450   000F08                     u700:
  1451   000F08  90D8               	bcf	status,0,c
  1452   000F0A  3607               	rlcf	___lwdiv@quotient^0,f,c
  1453   000F0C  3608               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1454   000F0E  5005               	movf	___lwdiv@divisor^0,w,c
  1455   000F10  5C03               	subwf	___lwdiv@dividend^0,w,c
  1456   000F12  5006               	movf	(___lwdiv@divisor+1)^0,w,c
  1457   000F14  5804               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1458   000F16  A0D8               	btfss	status,0,c
  1459   000F18  D005               	goto	l1739
  1460   000F1A  5005               	movf	___lwdiv@divisor^0,w,c
  1461   000F1C  5E03               	subwf	___lwdiv@dividend^0,f,c
  1462   000F1E  5006               	movf	(___lwdiv@divisor+1)^0,w,c
  1463   000F20  5A04               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1464   000F22  8007               	bsf	___lwdiv@quotient^0,0,c
  1465   000F24                     l1739:
  1466   000F24  90D8               	bcf	status,0,c
  1467   000F26  3206               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1468   000F28  3205               	rrcf	___lwdiv@divisor^0,f,c
  1469   000F2A  2E09               	decfsz	___lwdiv@counter^0,f,c
  1470   000F2C  D7ED               	goto	u700
  1471   000F2E                     l771:
  1472   000F2E  C007  F003         	movff	___lwdiv@quotient,?___lwdiv
  1473   000F32  C008  F004         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1474   000F36  0012               	return		;funcret
  1475   000F38                     __end_of___lwdiv:
  1476                           	callstack 0
  1477                           
  1478 ;; *************** function ___lbmod *****************
  1479 ;; Defined at:
  1480 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lbmod.c"
  1481 ;; Parameters:    Size  Location     Type
  1482 ;;  dividend        1    wreg     unsigned char 
  1483 ;;  divisor         1    2[COMRAM] unsigned char 
  1484 ;; Auto vars:     Size  Location     Type
  1485 ;;  dividend        1    3[COMRAM] unsigned char 
  1486 ;;  rem             1    5[COMRAM] unsigned char 
  1487 ;;  counter         1    4[COMRAM] unsigned char 
  1488 ;; Return value:  Size  Location     Type
  1489 ;;                  1    wreg      unsigned char 
  1490 ;; Registers used:
  1491 ;;		wreg, status,2, status,0
  1492 ;; Tracked objects:
  1493 ;;		On entry : 0/0
  1494 ;;		On exit  : 0/0
  1495 ;;		Unchanged: 0/0
  1496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1497 ;;      Params:         1       0       0       0       0       0       0       0       0
  1498 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1499 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1500 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1501 ;;Total ram usage:        4 bytes
  1502 ;; Hardware stack levels used: 1
  1503 ;; Hardware stack levels required when called: 2
  1504 ;; This function calls:
  1505 ;;		Nothing
  1506 ;; This function is called by:
  1507 ;;		_main
  1508 ;;		_TransmitirDatos
  1509 ;; This function uses a non-reentrant model
  1510 ;;
  1511                           
  1512                           	psect	text6
  1513   0010C6                     __ptext6:
  1514                           	callstack 0
  1515   0010C6                     ___lbmod:
  1516                           	callstack 28
  1517                           
  1518                           ;incstack = 0
  1519                           ;___lbmod@dividend stored from wreg
  1520   0010C6  6E04               	movwf	___lbmod@dividend^0,c
  1521   0010C8  0E08               	movlw	8
  1522   0010CA  6E05               	movwf	___lbmod@counter^0,c
  1523   0010CC  0E00               	movlw	0
  1524   0010CE  6E06               	movwf	___lbmod@rem^0,c
  1525   0010D0                     l1707:
  1526   0010D0  90D8               	bcf	status,0,c
  1527   0010D2  3404               	rlcf	___lbmod@dividend^0,w,c
  1528   0010D4  3406               	rlcf	___lbmod@rem^0,w,c
  1529   0010D6  6E06               	movwf	___lbmod@rem^0,c
  1530   0010D8  90D8               	bcf	status,0,c
  1531   0010DA  3604               	rlcf	___lbmod@dividend^0,f,c
  1532   0010DC  5003               	movf	___lbmod@divisor^0,w,c
  1533   0010DE  5C06               	subwf	___lbmod@rem^0,w,c
  1534   0010E0  A0D8               	btfss	status,0,c
  1535   0010E2  D002               	goto	l1715
  1536   0010E4  5003               	movf	___lbmod@divisor^0,w,c
  1537   0010E6  5E06               	subwf	___lbmod@rem^0,f,c
  1538   0010E8                     l1715:
  1539   0010E8  2E05               	decfsz	___lbmod@counter^0,f,c
  1540   0010EA  D7F2               	goto	l1707
  1541   0010EC  5006               	movf	___lbmod@rem^0,w,c
  1542   0010EE  0012               	return		;funcret
  1543   0010F0                     __end_of___lbmod:
  1544                           	callstack 0
  1545                           
  1546 ;; *************** function ___lbdiv *****************
  1547 ;; Defined at:
  1548 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lbdiv.c"
  1549 ;; Parameters:    Size  Location     Type
  1550 ;;  dividend        1    wreg     unsigned char 
  1551 ;;  divisor         1    2[COMRAM] unsigned char 
  1552 ;; Auto vars:     Size  Location     Type
  1553 ;;  dividend        1    3[COMRAM] unsigned char 
  1554 ;;  quotient        1    5[COMRAM] unsigned char 
  1555 ;;  counter         1    4[COMRAM] unsigned char 
  1556 ;; Return value:  Size  Location     Type
  1557 ;;                  1    wreg      unsigned char 
  1558 ;; Registers used:
  1559 ;;		wreg, status,2, status,0
  1560 ;; Tracked objects:
  1561 ;;		On entry : 0/0
  1562 ;;		On exit  : 0/0
  1563 ;;		Unchanged: 0/0
  1564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1565 ;;      Params:         1       0       0       0       0       0       0       0       0
  1566 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1567 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1568 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1569 ;;Total ram usage:        4 bytes
  1570 ;; Hardware stack levels used: 1
  1571 ;; Hardware stack levels required when called: 2
  1572 ;; This function calls:
  1573 ;;		Nothing
  1574 ;; This function is called by:
  1575 ;;		_main
  1576 ;;		_TransmitirDatos
  1577 ;; This function uses a non-reentrant model
  1578 ;;
  1579                           
  1580                           	psect	text7
  1581   000FBC                     __ptext7:
  1582                           	callstack 0
  1583   000FBC                     ___lbdiv:
  1584                           	callstack 28
  1585                           
  1586                           ;incstack = 0
  1587                           ;___lbdiv@dividend stored from wreg
  1588   000FBC  6E04               	movwf	___lbdiv@dividend^0,c
  1589   000FBE  0E00               	movlw	0
  1590   000FC0  6E06               	movwf	___lbdiv@quotient^0,c
  1591   000FC2  5003               	movf	___lbdiv@divisor^0,w,c
  1592   000FC4  B4D8               	btfsc	status,2,c
  1593   000FC6  D015               	goto	l1701
  1594   000FC8  0E01               	movlw	1
  1595   000FCA  6E05               	movwf	___lbdiv@counter^0,c
  1596   000FCC  D003               	goto	l1689
  1597   000FCE                     l1685:
  1598   000FCE  90D8               	bcf	status,0,c
  1599   000FD0  3603               	rlcf	___lbdiv@divisor^0,f,c
  1600   000FD2  2A05               	incf	___lbdiv@counter^0,f,c
  1601   000FD4                     l1689:
  1602   000FD4  AE03               	btfss	___lbdiv@divisor^0,7,c
  1603   000FD6  D7FB               	goto	l1685
  1604   000FD8                     u660:
  1605   000FD8  90D8               	bcf	status,0,c
  1606   000FDA  3606               	rlcf	___lbdiv@quotient^0,f,c
  1607   000FDC  5003               	movf	___lbdiv@divisor^0,w,c
  1608   000FDE  5C04               	subwf	___lbdiv@dividend^0,w,c
  1609   000FE0  A0D8               	btfss	status,0,c
  1610   000FE2  D003               	goto	l1697
  1611   000FE4  5003               	movf	___lbdiv@divisor^0,w,c
  1612   000FE6  5E04               	subwf	___lbdiv@dividend^0,f,c
  1613   000FE8  8006               	bsf	___lbdiv@quotient^0,0,c
  1614   000FEA                     l1697:
  1615   000FEA  90D8               	bcf	status,0,c
  1616   000FEC  3203               	rrcf	___lbdiv@divisor^0,f,c
  1617   000FEE  2E05               	decfsz	___lbdiv@counter^0,f,c
  1618   000FF0  D7F3               	goto	u660
  1619   000FF2                     l1701:
  1620   000FF2  5006               	movf	___lbdiv@quotient^0,w,c
  1621   000FF4  0012               	return		;funcret
  1622   000FF6                     __end_of___lbdiv:
  1623                           	callstack 0
  1624                           
  1625 ;; *************** function ___awdiv *****************
  1626 ;; Defined at:
  1627 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  1628 ;; Parameters:    Size  Location     Type
  1629 ;;  dividend        2    2[COMRAM] int 
  1630 ;;  divisor         2    4[COMRAM] int 
  1631 ;; Auto vars:     Size  Location     Type
  1632 ;;  quotient        2    8[COMRAM] int 
  1633 ;;  sign            1    7[COMRAM] unsigned char 
  1634 ;;  counter         1    6[COMRAM] unsigned char 
  1635 ;; Return value:  Size  Location     Type
  1636 ;;                  2    2[COMRAM] int 
  1637 ;; Registers used:
  1638 ;;		wreg, status,2, status,0
  1639 ;; Tracked objects:
  1640 ;;		On entry : 0/0
  1641 ;;		On exit  : 0/0
  1642 ;;		Unchanged: 0/0
  1643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1644 ;;      Params:         4       0       0       0       0       0       0       0       0
  1645 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1646 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1647 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1648 ;;Total ram usage:        8 bytes
  1649 ;; Hardware stack levels used: 1
  1650 ;; Hardware stack levels required when called: 2
  1651 ;; This function calls:
  1652 ;;		Nothing
  1653 ;; This function is called by:
  1654 ;;		_TransmitirDatos
  1655 ;; This function uses a non-reentrant model
  1656 ;;
  1657                           
  1658                           	psect	text8
  1659   000DFC                     __ptext8:
  1660                           	callstack 0
  1661   000DFC                     ___awdiv:
  1662                           	callstack 27
  1663                           
  1664                           ;incstack = 0
  1665   000DFC  0E00               	movlw	0
  1666   000DFE  6E08               	movwf	___awdiv@sign^0,c
  1667   000E00  AE06               	btfss	(___awdiv@divisor+1)^0,7,c
  1668   000E02  D006               	goto	l1643
  1669   000E04  6C05               	negf	___awdiv@divisor^0,c
  1670   000E06  1E06               	comf	(___awdiv@divisor+1)^0,f,c
  1671   000E08  B0D8               	btfsc	status,0,c
  1672   000E0A  2A06               	incf	(___awdiv@divisor+1)^0,f,c
  1673   000E0C  0E01               	movlw	1
  1674   000E0E  6E08               	movwf	___awdiv@sign^0,c
  1675   000E10                     l1643:
  1676   000E10  AE04               	btfss	(___awdiv@dividend+1)^0,7,c
  1677   000E12  D006               	goto	l1649
  1678   000E14  6C03               	negf	___awdiv@dividend^0,c
  1679   000E16  1E04               	comf	(___awdiv@dividend+1)^0,f,c
  1680   000E18  B0D8               	btfsc	status,0,c
  1681   000E1A  2A04               	incf	(___awdiv@dividend+1)^0,f,c
  1682   000E1C  0E01               	movlw	1
  1683   000E1E  1A08               	xorwf	___awdiv@sign^0,f,c
  1684   000E20                     l1649:
  1685   000E20  0E00               	movlw	0
  1686   000E22  6E0A               	movwf	(___awdiv@quotient+1)^0,c
  1687   000E24  0E00               	movlw	0
  1688   000E26  6E09               	movwf	___awdiv@quotient^0,c
  1689   000E28  5005               	movf	___awdiv@divisor^0,w,c
  1690   000E2A  1006               	iorwf	(___awdiv@divisor+1)^0,w,c
  1691   000E2C  B4D8               	btfsc	status,2,c
  1692   000E2E  D01C               	goto	l1671
  1693   000E30  0E01               	movlw	1
  1694   000E32  6E07               	movwf	___awdiv@counter^0,c
  1695   000E34  D004               	goto	l1657
  1696   000E36                     l1655:
  1697   000E36  90D8               	bcf	status,0,c
  1698   000E38  3605               	rlcf	___awdiv@divisor^0,f,c
  1699   000E3A  3606               	rlcf	(___awdiv@divisor+1)^0,f,c
  1700   000E3C  2A07               	incf	___awdiv@counter^0,f,c
  1701   000E3E                     l1657:
  1702   000E3E  AE06               	btfss	(___awdiv@divisor+1)^0,7,c
  1703   000E40  D7FA               	goto	l1655
  1704   000E42                     u620:
  1705   000E42  90D8               	bcf	status,0,c
  1706   000E44  3609               	rlcf	___awdiv@quotient^0,f,c
  1707   000E46  360A               	rlcf	(___awdiv@quotient+1)^0,f,c
  1708   000E48  5005               	movf	___awdiv@divisor^0,w,c
  1709   000E4A  5C03               	subwf	___awdiv@dividend^0,w,c
  1710   000E4C  5006               	movf	(___awdiv@divisor+1)^0,w,c
  1711   000E4E  5804               	subwfb	(___awdiv@dividend+1)^0,w,c
  1712   000E50  A0D8               	btfss	status,0,c
  1713   000E52  D005               	goto	l1667
  1714   000E54  5005               	movf	___awdiv@divisor^0,w,c
  1715   000E56  5E03               	subwf	___awdiv@dividend^0,f,c
  1716   000E58  5006               	movf	(___awdiv@divisor+1)^0,w,c
  1717   000E5A  5A04               	subwfb	(___awdiv@dividend+1)^0,f,c
  1718   000E5C  8009               	bsf	___awdiv@quotient^0,0,c
  1719   000E5E                     l1667:
  1720   000E5E  90D8               	bcf	status,0,c
  1721   000E60  3206               	rrcf	(___awdiv@divisor+1)^0,f,c
  1722   000E62  3205               	rrcf	___awdiv@divisor^0,f,c
  1723   000E64  2E07               	decfsz	___awdiv@counter^0,f,c
  1724   000E66  D7ED               	goto	u620
  1725   000E68                     l1671:
  1726   000E68  5008               	movf	___awdiv@sign^0,w,c
  1727   000E6A  B4D8               	btfsc	status,2,c
  1728   000E6C  D004               	goto	l1675
  1729   000E6E  6C09               	negf	___awdiv@quotient^0,c
  1730   000E70  1E0A               	comf	(___awdiv@quotient+1)^0,f,c
  1731   000E72  B0D8               	btfsc	status,0,c
  1732   000E74  2A0A               	incf	(___awdiv@quotient+1)^0,f,c
  1733   000E76                     l1675:
  1734   000E76  C009  F003         	movff	___awdiv@quotient,?___awdiv
  1735   000E7A  C00A  F004         	movff	___awdiv@quotient+1,?___awdiv+1
  1736   000E7E  0012               	return		;funcret
  1737   000E80                     __end_of___awdiv:
  1738                           	callstack 0
  1739                           
  1740 ;; *************** function _Transmitir *****************
  1741 ;; Defined at:
  1742 ;;		line 152 in file "Laboratorio5.c"
  1743 ;; Parameters:    Size  Location     Type
  1744 ;;  BufferT         1    wreg     unsigned char 
  1745 ;; Auto vars:     Size  Location     Type
  1746 ;;  BufferT         1    2[COMRAM] unsigned char 
  1747 ;; Return value:  Size  Location     Type
  1748 ;;                  1    wreg      void 
  1749 ;; Registers used:
  1750 ;;		wreg
  1751 ;; Tracked objects:
  1752 ;;		On entry : 0/0
  1753 ;;		On exit  : 0/0
  1754 ;;		Unchanged: 0/0
  1755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1756 ;;      Params:         0       0       0       0       0       0       0       0       0
  1757 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1758 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1759 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1760 ;;Total ram usage:        1 bytes
  1761 ;; Hardware stack levels used: 1
  1762 ;; Hardware stack levels required when called: 2
  1763 ;; This function calls:
  1764 ;;		Nothing
  1765 ;; This function is called by:
  1766 ;;		_TransmitirDatos
  1767 ;; This function uses a non-reentrant model
  1768 ;;
  1769                           
  1770                           	psect	text9
  1771   0011F6                     __ptext9:
  1772                           	callstack 0
  1773   0011F6                     _Transmitir:
  1774                           	callstack 27
  1775                           
  1776                           ;incstack = 0
  1777                           ;Transmitir@BufferT stored from wreg
  1778   0011F6  6E03               	movwf	Transmitir@BufferT^0,c
  1779   0011F8                     
  1780                           ;Laboratorio5.c: 153: while (TRMT == 0);
  1781   0011F8  A2AC               	btfss	4012,1,c	;volatile
  1782   0011FA  D7FE               	goto	l1145
  1783                           
  1784                           ;Laboratorio5.c: 154: TXREG = BufferT;
  1785   0011FC  C003  FFAD         	movff	Transmitir@BufferT,4013	;volatile
  1786   001200  0012               	return		;funcret
  1787   001202                     __end_of_Transmitir:
  1788                           	callstack 0
  1789                           
  1790 ;; *************** function _MensajeLCD_Word *****************
  1791 ;; Defined at:
  1792 ;;		line 241 in file "LibLCDXC8.h"
  1793 ;; Parameters:    Size  Location     Type
  1794 ;;  a               1    6[COMRAM] PTR unsigned char 
  1795 ;;		 -> STR_4(5), STR_3(6), STR_2(10), STR_1(13), 
  1796 ;; Auto vars:     Size  Location     Type
  1797 ;;  i               2    8[COMRAM] int 
  1798 ;; Return value:  Size  Location     Type
  1799 ;;                  1    wreg      void 
  1800 ;; Registers used:
  1801 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1802 ;; Tracked objects:
  1803 ;;		On entry : 0/0
  1804 ;;		On exit  : 0/0
  1805 ;;		Unchanged: 0/0
  1806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1807 ;;      Params:         1       0       0       0       0       0       0       0       0
  1808 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1809 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1810 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1811 ;;Total ram usage:        4 bytes
  1812 ;; Hardware stack levels used: 1
  1813 ;; Hardware stack levels required when called: 5
  1814 ;; This function calls:
  1815 ;;		_EscribeLCD_c
  1816 ;;		_strlen
  1817 ;; This function is called by:
  1818 ;;		_main
  1819 ;;		_TransmitirDatos
  1820 ;; This function uses a non-reentrant model
  1821 ;;
  1822                           
  1823                           	psect	text10
  1824   000FF6                     __ptext10:
  1825                           	callstack 0
  1826   000FF6                     _MensajeLCD_Word:
  1827                           	callstack 24
  1828                           
  1829                           ;LibLCDXC8.h: 245: for(int i = 0; i<strlen(a); i++){
  1830                           
  1831                           ;incstack = 0
  1832   000FF6  0E00               	movlw	0
  1833   000FF8  6E0A               	movwf	(MensajeLCD_Word@i+1)^0,c
  1834   000FFA  0E00               	movlw	0
  1835   000FFC  6E09               	movwf	MensajeLCD_Word@i^0,c
  1836   000FFE  D00D               	goto	l1627
  1837   001000                     l1623:
  1838                           
  1839                           ;LibLCDXC8.h: 247: EscribeLCD_c(a[i]);
  1840   001000  5007               	movf	MensajeLCD_Word@a^0,w,c
  1841   001002  2409               	addwf	MensajeLCD_Word@i^0,w,c
  1842   001004  6E08               	movwf	??_MensajeLCD_Word^0,c
  1843   001006  C008  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  1844   00100A                     	if	1	;There is more than 1 active tblptr byte
  1845   00100A  0E08               	movlw	high __smallconst
  1846   00100C  6EF7               	movwf	tblptrh,c
  1847   00100E                     	endif
  1848   00100E                     	if	0	;tblptru may be non-zero
  1849   00100E                     	endif
  1850   00100E                     	if	0	;tblptru may be non-zero
  1851   00100E                     	endif
  1852   00100E  0008               	tblrd		*
  1853   001010  50F5               	movf	tablat,w,c
  1854   001012  ECC3  F008         	call	_EscribeLCD_c
  1855   001016  4A09               	infsnz	MensajeLCD_Word@i^0,f,c
  1856   001018  2A0A               	incf	(MensajeLCD_Word@i+1)^0,f,c
  1857   00101A                     l1627:
  1858   00101A  C007  F003         	movff	MensajeLCD_Word@a,strlen@s
  1859   00101E  EC78  F008         	call	_strlen	;wreg free
  1860   001022  5003               	movf	?_strlen^0,w,c
  1861   001024  5C09               	subwf	MensajeLCD_Word@i^0,w,c
  1862   001026  5004               	movf	(?_strlen+1)^0,w,c
  1863   001028  580A               	subwfb	(MensajeLCD_Word@i+1)^0,w,c
  1864   00102A  B0D8               	btfsc	status,0,c
  1865   00102C  0012               	return	
  1866   00102E  D7E8               	goto	l1623
  1867   001030                     __end_of_MensajeLCD_Word:
  1868                           	callstack 0
  1869                           
  1870 ;; *************** function _strlen *****************
  1871 ;; Defined at:
  1872 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strlen.c"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;  s               1    2[COMRAM] PTR const unsigned char 
  1875 ;;		 -> STR_4(5), STR_3(6), STR_2(10), STR_1(13), 
  1876 ;; Auto vars:     Size  Location     Type
  1877 ;;  cp              1    4[COMRAM] PTR const unsigned char 
  1878 ;;		 -> STR_4(5), STR_3(6), STR_2(10), STR_1(13), 
  1879 ;; Return value:  Size  Location     Type
  1880 ;;                  2    2[COMRAM] unsigned int 
  1881 ;; Registers used:
  1882 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1883 ;; Tracked objects:
  1884 ;;		On entry : 0/0
  1885 ;;		On exit  : 0/0
  1886 ;;		Unchanged: 0/0
  1887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1888 ;;      Params:         2       0       0       0       0       0       0       0       0
  1889 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1890 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1891 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1892 ;;Total ram usage:        3 bytes
  1893 ;; Hardware stack levels used: 1
  1894 ;; Hardware stack levels required when called: 2
  1895 ;; This function calls:
  1896 ;;		Nothing
  1897 ;; This function is called by:
  1898 ;;		_MensajeLCD_Word
  1899 ;; This function uses a non-reentrant model
  1900 ;;
  1901                           
  1902                           	psect	text11
  1903   0010F0                     __ptext11:
  1904                           	callstack 0
  1905   0010F0                     _strlen:
  1906                           	callstack 26
  1907                           
  1908                           ;incstack = 0
  1909   0010F0  C003  F005         	movff	strlen@s,strlen@cp
  1910   0010F4  D001               	goto	l1615
  1911   0010F6                     l1613:
  1912   0010F6  2A05               	incf	strlen@cp^0,f,c
  1913   0010F8                     l1615:
  1914   0010F8  C005  FFF6         	movff	strlen@cp,tblptrl
  1915   0010FC                     	if	1	;There is more than 1 active tblptr byte
  1916   0010FC  0E08               	movlw	high __smallconst
  1917   0010FE  6EF7               	movwf	tblptrh,c
  1918   001100                     	endif
  1919   001100                     	if	0	;tblptru may be non-zero
  1920   001100                     	endif
  1921   001100                     	if	0	;tblptru may be non-zero
  1922   001100                     	endif
  1923   001100  0008               	tblrd		*
  1924   001102  50F5               	movf	tablat,w,c
  1925   001104  0900               	iorlw	0
  1926   001106  A4D8               	btfss	status,2,c
  1927   001108  D7F6               	goto	l1613
  1928   00110A  5003               	movf	strlen@s^0,w,c
  1929   00110C  5C05               	subwf	strlen@cp^0,w,c
  1930   00110E  6E03               	movwf	?_strlen^0,c
  1931   001110  6A04               	clrf	(?_strlen+1)^0,c
  1932   001112  BE03               	btfsc	?_strlen^0,7,c
  1933   001114  0604               	decf	(?_strlen+1)^0,f,c
  1934   001116  0012               	return		;funcret
  1935   001118                     __end_of_strlen:
  1936                           	callstack 0
  1937                           
  1938 ;; *************** function _EscribeLCD_c *****************
  1939 ;; Defined at:
  1940 ;;		line 142 in file "LibLCDXC8.h"
  1941 ;; Parameters:    Size  Location     Type
  1942 ;;  a               1    wreg     unsigned char 
  1943 ;; Auto vars:     Size  Location     Type
  1944 ;;  a               1    5[COMRAM] unsigned char 
  1945 ;; Return value:  Size  Location     Type
  1946 ;;                  1    wreg      void 
  1947 ;; Registers used:
  1948 ;;		wreg, status,2, status,0, cstack
  1949 ;; Tracked objects:
  1950 ;;		On entry : 0/0
  1951 ;;		On exit  : 0/0
  1952 ;;		Unchanged: 0/0
  1953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1954 ;;      Params:         0       0       0       0       0       0       0       0       0
  1955 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1956 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1957 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1958 ;;Total ram usage:        1 bytes
  1959 ;; Hardware stack levels used: 1
  1960 ;; Hardware stack levels required when called: 4
  1961 ;; This function calls:
  1962 ;;		_EnviaDato
  1963 ;;		_HabilitaLCD
  1964 ;;		_RetardoLCD
  1965 ;; This function is called by:
  1966 ;;		_MensajeLCD_Word
  1967 ;;		_main
  1968 ;;		_TransmitirDatos
  1969 ;; This function uses a non-reentrant model
  1970 ;;
  1971                           
  1972                           	psect	text12
  1973   001186                     __ptext12:
  1974                           	callstack 0
  1975   001186                     _EscribeLCD_c:
  1976                           	callstack 24
  1977                           
  1978                           ;incstack = 0
  1979                           ;EscribeLCD_c@a stored from wreg
  1980   001186  6E06               	movwf	EscribeLCD_c@a^0,c
  1981                           
  1982                           ;LibLCDXC8.h: 146: LATD6=1;
  1983   001188  8C8C               	bsf	3980,6,c	;volatile
  1984                           
  1985                           ;LibLCDXC8.h: 147: EnviaDato(a);
  1986   00118A  5006               	movf	EscribeLCD_c@a^0,w,c
  1987   00118C  EC01  F009         	call	_EnviaDato
  1988                           
  1989                           ;LibLCDXC8.h: 148: HabilitaLCD();
  1990   001190  ECF4  F008         	call	_HabilitaLCD	;wreg free
  1991                           
  1992                           ;LibLCDXC8.h: 149: RetardoLCD(4);
  1993   001194  0E04               	movlw	4
  1994   001196  EC40  F007         	call	_RetardoLCD
  1995   00119A  0012               	return		;funcret
  1996   00119C                     __end_of_EscribeLCD_c:
  1997                           	callstack 0
  1998                           
  1999 ;; *************** function _DireccionaLCD *****************
  2000 ;; Defined at:
  2001 ;;		line 252 in file "LibLCDXC8.h"
  2002 ;; Parameters:    Size  Location     Type
  2003 ;;  a               1    wreg     unsigned char 
  2004 ;; Auto vars:     Size  Location     Type
  2005 ;;  a               1    5[COMRAM] unsigned char 
  2006 ;; Return value:  Size  Location     Type
  2007 ;;                  1    wreg      void 
  2008 ;; Registers used:
  2009 ;;		wreg, status,2, status,0, cstack
  2010 ;; Tracked objects:
  2011 ;;		On entry : 0/0
  2012 ;;		On exit  : 0/0
  2013 ;;		Unchanged: 0/0
  2014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2015 ;;      Params:         0       0       0       0       0       0       0       0       0
  2016 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2017 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2018 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2019 ;;Total ram usage:        1 bytes
  2020 ;; Hardware stack levels used: 1
  2021 ;; Hardware stack levels required when called: 4
  2022 ;; This function calls:
  2023 ;;		_EnviaDato
  2024 ;;		_HabilitaLCD
  2025 ;;		_RetardoLCD
  2026 ;; This function is called by:
  2027 ;;		_main
  2028 ;;		_TransmitirDatos
  2029 ;; This function uses a non-reentrant model
  2030 ;;
  2031                           
  2032                           	psect	text13
  2033   00119C                     __ptext13:
  2034                           	callstack 0
  2035   00119C                     _DireccionaLCD:
  2036                           	callstack 25
  2037                           
  2038                           ;incstack = 0
  2039                           ;DireccionaLCD@a stored from wreg
  2040   00119C  6E06               	movwf	DireccionaLCD@a^0,c
  2041                           
  2042                           ;LibLCDXC8.h: 255: LATD6=0;
  2043   00119E  9C8C               	bcf	3980,6,c	;volatile
  2044                           
  2045                           ;LibLCDXC8.h: 256: EnviaDato(a);
  2046   0011A0  5006               	movf	DireccionaLCD@a^0,w,c
  2047   0011A2  EC01  F009         	call	_EnviaDato
  2048                           
  2049                           ;LibLCDXC8.h: 257: HabilitaLCD();
  2050   0011A6  ECF4  F008         	call	_HabilitaLCD	;wreg free
  2051                           
  2052                           ;LibLCDXC8.h: 258: RetardoLCD(4);
  2053   0011AA  0E04               	movlw	4
  2054   0011AC  EC40  F007         	call	_RetardoLCD
  2055   0011B0  0012               	return		;funcret
  2056   0011B2                     __end_of_DireccionaLCD:
  2057                           	callstack 0
  2058                           
  2059 ;; *************** function _LeerHT11 *****************
  2060 ;; Defined at:
  2061 ;;		line 114 in file "Laboratorio5.c"
  2062 ;; Parameters:    Size  Location     Type
  2063 ;;		None
  2064 ;; Auto vars:     Size  Location     Type
  2065 ;;		None
  2066 ;; Return value:  Size  Location     Type
  2067 ;;                  1    wreg      void 
  2068 ;; Registers used:
  2069 ;;		wreg, status,2, status,0, cstack
  2070 ;; Tracked objects:
  2071 ;;		On entry : 0/0
  2072 ;;		On exit  : 0/0
  2073 ;;		Unchanged: 0/0
  2074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2075 ;;      Params:         0       0       0       0       0       0       0       0       0
  2076 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2077 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2078 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2079 ;;Total ram usage:        1 bytes
  2080 ;; Hardware stack levels used: 1
  2081 ;; Hardware stack levels required when called: 4
  2082 ;; This function calls:
  2083 ;;		_LeerByte
  2084 ;; This function is called by:
  2085 ;;		_main
  2086 ;; This function uses a non-reentrant model
  2087 ;;
  2088                           
  2089                           	psect	text14
  2090   001030                     __ptext14:
  2091                           	callstack 0
  2092   001030                     _LeerHT11:
  2093                           	callstack 26
  2094                           
  2095                           ;Laboratorio5.c: 116: TRISC2 = 0;
  2096                           
  2097                           ;incstack = 0
  2098   001030  9494               	bcf	3988,2,c	;volatile
  2099                           
  2100                           ;Laboratorio5.c: 117: _delay((unsigned long)((18)*(8000000/4000.0)));
  2101   001032  0E2F               	movlw	47
  2102   001034  6E07               	movwf	??_LeerHT11^0,c
  2103   001036  0EC0               	movlw	192
  2104   001038                     u1077:
  2105   001038  2EE8               	decfsz	wreg,f,c
  2106   00103A  D7FE               	bra	u1077
  2107   00103C  2E07               	decfsz	??_LeerHT11^0,f,c
  2108   00103E  D7FC               	bra	u1077
  2109                           
  2110                           ;Laboratorio5.c: 118: TRISC2 = 1;
  2111   001040  8494               	bsf	3988,2,c	;volatile
  2112   001042                     l198:
  2113   001042  B482               	btfsc	3970,2,c	;volatile
  2114   001044  D7FE               	goto	l198
  2115                           
  2116                           ;Laboratorio5.c: 121: _delay((unsigned long)((120)*(8000000/4000000.0)));
  2117   001046  0E50               	movlw	80
  2118   001048                     u1087:
  2119   001048  2EE8               	decfsz	wreg,f,c
  2120   00104A  D7FE               	bra	u1087
  2121   00104C                     l201:
  2122   00104C  B482               	btfsc	3970,2,c	;volatile
  2123   00104E  D7FE               	goto	l201
  2124                           
  2125                           ;Laboratorio5.c: 124: Hum = LeerByte();
  2126   001050  ECB2  F008         	call	_LeerByte	;wreg free
  2127   001054  6E1E               	movwf	_Hum^0,c
  2128                           
  2129                           ;Laboratorio5.c: 125: LeerByte();
  2130   001056  ECB2  F008         	call	_LeerByte	;wreg free
  2131                           
  2132                           ;Laboratorio5.c: 126: Temp = LeerByte();
  2133   00105A  ECB2  F008         	call	_LeerByte	;wreg free
  2134   00105E  6E1F               	movwf	_Temp^0,c
  2135                           
  2136                           ;Laboratorio5.c: 127: LeerByte();
  2137   001060  ECB2  F008         	call	_LeerByte	;wreg free
  2138                           
  2139                           ;Laboratorio5.c: 128: LeerByte();
  2140   001064  ECB2  F008         	call	_LeerByte	;wreg free
  2141   001068  0012               	return		;funcret
  2142   00106A                     __end_of_LeerHT11:
  2143                           	callstack 0
  2144                           
  2145 ;; *************** function _LeerByte *****************
  2146 ;; Defined at:
  2147 ;;		line 131 in file "Laboratorio5.c"
  2148 ;; Parameters:    Size  Location     Type
  2149 ;;		None
  2150 ;; Auto vars:     Size  Location     Type
  2151 ;;  i               1    5[COMRAM] unsigned char 
  2152 ;;  res             1    4[COMRAM] unsigned char 
  2153 ;; Return value:  Size  Location     Type
  2154 ;;                  1    wreg      unsigned char 
  2155 ;; Registers used:
  2156 ;;		wreg, status,2, status,0, cstack
  2157 ;; Tracked objects:
  2158 ;;		On entry : 0/0
  2159 ;;		On exit  : 0/0
  2160 ;;		Unchanged: 0/0
  2161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2162 ;;      Params:         0       0       0       0       0       0       0       0       0
  2163 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2164 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2165 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2166 ;;Total ram usage:        3 bytes
  2167 ;; Hardware stack levels used: 1
  2168 ;; Hardware stack levels required when called: 3
  2169 ;; This function calls:
  2170 ;;		_LeerBit
  2171 ;; This function is called by:
  2172 ;;		_LeerHT11
  2173 ;; This function uses a non-reentrant model
  2174 ;;
  2175                           
  2176                           	psect	text15
  2177   001164                     __ptext15:
  2178                           	callstack 0
  2179   001164                     _LeerByte:
  2180                           	callstack 26
  2181                           
  2182                           ;Laboratorio5.c: 132: unsigned char res = 0, i;
  2183                           
  2184                           ;incstack = 0
  2185   001164  0E00               	movlw	0
  2186   001166  6E05               	movwf	LeerByte@res^0,c
  2187                           
  2188                           ;Laboratorio5.c: 133: for (i = 8; i > 0; i--) {
  2189   001168  0E08               	movlw	8
  2190   00116A  6E06               	movwf	LeerByte@i^0,c
  2191   00116C                     l1135:
  2192                           
  2193                           ;Laboratorio5.c: 134: res = (res << 1) | LeerBit();
  2194   00116C  EC35  F008         	call	_LeerBit	;wreg free
  2195   001170  6E04               	movwf	??_LeerByte^0,c
  2196   001172  5005               	movf	LeerByte@res^0,w,c
  2197   001174  2405               	addwf	LeerByte@res^0,w,c
  2198   001176  1004               	iorwf	??_LeerByte^0,w,c
  2199   001178  6E05               	movwf	LeerByte@res^0,c
  2200   00117A  0606               	decf	LeerByte@i^0,f,c
  2201   00117C  5006               	movf	LeerByte@i^0,w,c
  2202   00117E  A4D8               	btfss	status,2,c
  2203   001180  D7F5               	goto	l1135
  2204                           
  2205                           ;Laboratorio5.c: 135: };Laboratorio5.c: 136: return res;
  2206   001182  5005               	movf	LeerByte@res^0,w,c
  2207   001184  0012               	return		;funcret
  2208   001186                     __end_of_LeerByte:
  2209                           	callstack 0
  2210                           
  2211 ;; *************** function _LeerBit *****************
  2212 ;; Defined at:
  2213 ;;		line 139 in file "Laboratorio5.c"
  2214 ;; Parameters:    Size  Location     Type
  2215 ;;		None
  2216 ;; Auto vars:     Size  Location     Type
  2217 ;;  res             1    2[COMRAM] unsigned char 
  2218 ;; Return value:  Size  Location     Type
  2219 ;;                  1    wreg      unsigned char 
  2220 ;; Registers used:
  2221 ;;		wreg, status,2
  2222 ;; Tracked objects:
  2223 ;;		On entry : 0/0
  2224 ;;		On exit  : 0/0
  2225 ;;		Unchanged: 0/0
  2226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2227 ;;      Params:         0       0       0       0       0       0       0       0       0
  2228 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2229 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2230 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2231 ;;Total ram usage:        1 bytes
  2232 ;; Hardware stack levels used: 1
  2233 ;; Hardware stack levels required when called: 2
  2234 ;; This function calls:
  2235 ;;		Nothing
  2236 ;; This function is called by:
  2237 ;;		_LeerByte
  2238 ;; This function uses a non-reentrant model
  2239 ;;
  2240                           
  2241                           	psect	text16
  2242   00106A                     __ptext16:
  2243                           	callstack 0
  2244   00106A                     _LeerBit:
  2245                           	callstack 26
  2246                           
  2247                           ;Laboratorio5.c: 140: unsigned char res = 0;
  2248                           
  2249                           ;incstack = 0
  2250   00106A  0E00               	movlw	0
  2251   00106C  6E03               	movwf	LeerBit@res^0,c
  2252   00106E                     l212:
  2253   00106E  A482               	btfss	3970,2,c	;volatile
  2254   001070  D7FE               	goto	l212
  2255                           
  2256                           ;Laboratorio5.c: 142: _delay((unsigned long)((13)*(8000000/4000000.0)));
  2257   001072  0E08               	movlw	8
  2258   001074                     u1097:
  2259   001074  2EE8               	decfsz	wreg,f,c
  2260   001076  D7FE               	bra	u1097
  2261   001078  D000               	nop2	
  2262                           
  2263                           ;Laboratorio5.c: 143: if (RC2 == 1) res = 0;
  2264   00107A  A482               	btfss	3970,2,c	;volatile
  2265   00107C  D002               	goto	l1099
  2266   00107E  0E00               	movlw	0
  2267   001080  6E03               	movwf	LeerBit@res^0,c
  2268   001082                     l1099:
  2269                           
  2270                           ;Laboratorio5.c: 144: _delay((unsigned long)((22)*(8000000/4000000.0)));
  2271   001082  0E0E               	movlw	14
  2272   001084                     u1107:
  2273   001084  2EE8               	decfsz	wreg,f,c
  2274   001086  D7FE               	bra	u1107
  2275   001088  D000               	nop2	
  2276                           
  2277                           ;Laboratorio5.c: 145: if (RC2 == 1) {
  2278   00108A  A482               	btfss	3970,2,c	;volatile
  2279   00108C  D004               	goto	u50
  2280                           
  2281                           ;Laboratorio5.c: 146: res = 1;
  2282   00108E  0E01               	movlw	1
  2283   001090  6E03               	movwf	LeerBit@res^0,c
  2284   001092                     l217:
  2285   001092  B482               	btfsc	3970,2,c	;volatile
  2286   001094  D7FE               	goto	l217
  2287   001096                     u50:
  2288                           
  2289                           ;Laboratorio5.c: 148: };Laboratorio5.c: 149: return res;
  2290   001096  5003               	movf	LeerBit@res^0,w,c
  2291   001098  0012               	return		;funcret
  2292   00109A                     __end_of_LeerBit:
  2293                           	callstack 0
  2294                           
  2295 ;; *************** function _InicializaLCD *****************
  2296 ;; Defined at:
  2297 ;;		line 73 in file "LibLCDXC8.h"
  2298 ;; Parameters:    Size  Location     Type
  2299 ;;		None
  2300 ;; Auto vars:     Size  Location     Type
  2301 ;;		None
  2302 ;; Return value:  Size  Location     Type
  2303 ;;                  1    wreg      void 
  2304 ;; Registers used:
  2305 ;;		wreg, status,2, status,0, cstack
  2306 ;; Tracked objects:
  2307 ;;		On entry : 0/0
  2308 ;;		On exit  : 0/0
  2309 ;;		Unchanged: 0/0
  2310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2311 ;;      Params:         0       0       0       0       0       0       0       0       0
  2312 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2313 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2314 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2315 ;;Total ram usage:        0 bytes
  2316 ;; Hardware stack levels used: 1
  2317 ;; Hardware stack levels required when called: 5
  2318 ;; This function calls:
  2319 ;;		_BorraLCD
  2320 ;;		_EnviaDato
  2321 ;;		_HabilitaLCD
  2322 ;;		_RetardoLCD
  2323 ;; This function is called by:
  2324 ;;		_main
  2325 ;; This function uses a non-reentrant model
  2326 ;;
  2327                           
  2328                           	psect	text17
  2329   000F7A                     __ptext17:
  2330                           	callstack 0
  2331   000F7A                     _InicializaLCD:
  2332                           	callstack 25
  2333                           
  2334                           ;LibLCDXC8.h: 75: LATD6=0;
  2335                           
  2336                           ;incstack = 0
  2337   000F7A  9C8C               	bcf	3980,6,c	;volatile
  2338                           
  2339                           ;LibLCDXC8.h: 78: else;LibLCDXC8.h: 79: LATB=0x3F;
  2340                           
  2341                           ;LibLCDXC8.h: 76: if(interfaz==4)
  2342   000F7C  0E3F               	movlw	63
  2343   000F7E  6E8A               	movwf	138,c	;volatile
  2344                           
  2345                           ;LibLCDXC8.h: 80: HabilitaLCD();
  2346   000F80  ECF4  F008         	call	_HabilitaLCD	;wreg free
  2347                           
  2348                           ;LibLCDXC8.h: 81: RetardoLCD(1);
  2349   000F84  0E01               	movlw	1
  2350   000F86  EC40  F007         	call	_RetardoLCD
  2351                           
  2352                           ;LibLCDXC8.h: 84: else;LibLCDXC8.h: 85: LATB=0x3F;
  2353                           
  2354                           ;LibLCDXC8.h: 82: if(interfaz==4)
  2355   000F8A  0E3F               	movlw	63
  2356   000F8C  6E8A               	movwf	138,c	;volatile
  2357                           
  2358                           ;LibLCDXC8.h: 86: HabilitaLCD();
  2359   000F8E  ECF4  F008         	call	_HabilitaLCD	;wreg free
  2360                           
  2361                           ;LibLCDXC8.h: 87: RetardoLCD(3);
  2362   000F92  0E03               	movlw	3
  2363   000F94  EC40  F007         	call	_RetardoLCD
  2364                           
  2365                           ;LibLCDXC8.h: 90: else;LibLCDXC8.h: 91: LATB=0x3F;
  2366                           
  2367                           ;LibLCDXC8.h: 88: if(interfaz==4)
  2368   000F98  0E3F               	movlw	63
  2369   000F9A  6E8A               	movwf	138,c	;volatile
  2370                           
  2371                           ;LibLCDXC8.h: 92: HabilitaLCD();
  2372   000F9C  ECF4  F008         	call	_HabilitaLCD	;wreg free
  2373                           
  2374                           ;LibLCDXC8.h: 93: RetardoLCD(4);
  2375   000FA0  0E04               	movlw	4
  2376   000FA2  EC40  F007         	call	_RetardoLCD
  2377                           
  2378                           ;LibLCDXC8.h: 101: };LibLCDXC8.h: 102: BorraLCD();
  2379                           
  2380                           ;LibLCDXC8.h: 94: if(interfaz==4){
  2381   000FA6  ECD9  F008         	call	_BorraLCD	;wreg free
  2382                           
  2383                           ;LibLCDXC8.h: 103: EnviaDato(0xF);
  2384   000FAA  0E0F               	movlw	15
  2385   000FAC  EC01  F009         	call	_EnviaDato
  2386                           
  2387                           ;LibLCDXC8.h: 104: HabilitaLCD();
  2388   000FB0  ECF4  F008         	call	_HabilitaLCD	;wreg free
  2389                           
  2390                           ;LibLCDXC8.h: 105: RetardoLCD(4);
  2391   000FB4  0E04               	movlw	4
  2392   000FB6  EC40  F007         	call	_RetardoLCD
  2393   000FBA  0012               	return		;funcret
  2394   000FBC                     __end_of_InicializaLCD:
  2395                           	callstack 0
  2396                           
  2397 ;; *************** function _BorraLCD *****************
  2398 ;; Defined at:
  2399 ;;		line 114 in file "LibLCDXC8.h"
  2400 ;; Parameters:    Size  Location     Type
  2401 ;;		None
  2402 ;; Auto vars:     Size  Location     Type
  2403 ;;		None
  2404 ;; Return value:  Size  Location     Type
  2405 ;;                  1    wreg      void 
  2406 ;; Registers used:
  2407 ;;		wreg, status,2, status,0, cstack
  2408 ;; Tracked objects:
  2409 ;;		On entry : 0/0
  2410 ;;		On exit  : 0/0
  2411 ;;		Unchanged: 0/0
  2412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2413 ;;      Params:         0       0       0       0       0       0       0       0       0
  2414 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2415 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2416 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2417 ;;Total ram usage:        0 bytes
  2418 ;; Hardware stack levels used: 1
  2419 ;; Hardware stack levels required when called: 4
  2420 ;; This function calls:
  2421 ;;		_EnviaDato
  2422 ;;		_HabilitaLCD
  2423 ;;		_RetardoLCD
  2424 ;; This function is called by:
  2425 ;;		_InicializaLCD
  2426 ;;		_main
  2427 ;;		_TransmitirDatos
  2428 ;; This function uses a non-reentrant model
  2429 ;;
  2430                           
  2431                           	psect	text18
  2432   0011B2                     __ptext18:
  2433                           	callstack 0
  2434   0011B2                     _BorraLCD:
  2435                           	callstack 25
  2436                           
  2437                           ;LibLCDXC8.h: 116: LATD6=0;
  2438                           
  2439                           ;incstack = 0
  2440   0011B2  9C8C               	bcf	3980,6,c	;volatile
  2441                           
  2442                           ;LibLCDXC8.h: 117: EnviaDato(0x01);
  2443   0011B4  0E01               	movlw	1
  2444   0011B6  EC01  F009         	call	_EnviaDato
  2445                           
  2446                           ;LibLCDXC8.h: 118: HabilitaLCD();
  2447   0011BA  ECF4  F008         	call	_HabilitaLCD	;wreg free
  2448                           
  2449                           ;LibLCDXC8.h: 119: RetardoLCD(2);
  2450   0011BE  0E02               	movlw	2
  2451   0011C0  EC40  F007         	call	_RetardoLCD
  2452   0011C4  0012               	return		;funcret
  2453   0011C6                     __end_of_BorraLCD:
  2454                           	callstack 0
  2455                           
  2456 ;; *************** function _EnviaDato *****************
  2457 ;; Defined at:
  2458 ;;		line 61 in file "LibLCDXC8.h"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;  a               1    wreg     unsigned char 
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;  a               1    4[COMRAM] unsigned char 
  2463 ;; Return value:  Size  Location     Type
  2464 ;;                  1    wreg      void 
  2465 ;; Registers used:
  2466 ;;		wreg
  2467 ;; Tracked objects:
  2468 ;;		On entry : 0/0
  2469 ;;		On exit  : 0/0
  2470 ;;		Unchanged: 0/0
  2471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2472 ;;      Params:         0       0       0       0       0       0       0       0       0
  2473 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2474 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2475 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2476 ;;Total ram usage:        1 bytes
  2477 ;; Hardware stack levels used: 1
  2478 ;; Hardware stack levels required when called: 3
  2479 ;; This function calls:
  2480 ;;		_HabilitaLCD
  2481 ;;		_RetardoLCD
  2482 ;; This function is called by:
  2483 ;;		_InicializaLCD
  2484 ;;		_BorraLCD
  2485 ;;		_EscribeLCD_c
  2486 ;;		_DireccionaLCD
  2487 ;; This function uses a non-reentrant model
  2488 ;;
  2489                           
  2490                           	psect	text19
  2491   001202                     __ptext19:
  2492                           	callstack 0
  2493   001202                     _EnviaDato:
  2494                           	callstack 24
  2495                           
  2496                           ;incstack = 0
  2497                           ;EnviaDato@a stored from wreg
  2498   001202  6E05               	movwf	EnviaDato@a^0,c
  2499                           
  2500                           ;LibLCDXC8.h: 70: LATB=a;
  2501                           
  2502                           ;LibLCDXC8.h: 62: if(interfaz==4){
  2503   001204  C005  FF8A         	movff	EnviaDato@a,3978	;volatile
  2504   001208  0012               	return		;funcret
  2505   00120A                     __end_of_EnviaDato:
  2506                           	callstack 0
  2507                           
  2508 ;; *************** function _RetardoLCD *****************
  2509 ;; Defined at:
  2510 ;;		line 288 in file "LibLCDXC8.h"
  2511 ;; Parameters:    Size  Location     Type
  2512 ;;  a               1    wreg     unsigned char 
  2513 ;; Auto vars:     Size  Location     Type
  2514 ;;  a               1    3[COMRAM] unsigned char 
  2515 ;; Return value:  Size  Location     Type
  2516 ;;                  1    wreg      void 
  2517 ;; Registers used:
  2518 ;;		wreg, status,2, status,0
  2519 ;; Tracked objects:
  2520 ;;		On entry : 0/0
  2521 ;;		On exit  : 0/0
  2522 ;;		Unchanged: 0/0
  2523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2524 ;;      Params:         0       0       0       0       0       0       0       0       0
  2525 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2526 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2527 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2528 ;;Total ram usage:        2 bytes
  2529 ;; Hardware stack levels used: 1
  2530 ;; Hardware stack levels required when called: 2
  2531 ;; This function calls:
  2532 ;;		Nothing
  2533 ;; This function is called by:
  2534 ;;		_EnviaDato
  2535 ;;		_InicializaLCD
  2536 ;;		_BorraLCD
  2537 ;;		_EscribeLCD_c
  2538 ;;		_DireccionaLCD
  2539 ;; This function uses a non-reentrant model
  2540 ;;
  2541                           
  2542                           	psect	text20
  2543   000E80                     __ptext20:
  2544                           	callstack 0
  2545   000E80                     _RetardoLCD:
  2546                           	callstack 25
  2547                           
  2548                           ;incstack = 0
  2549                           ;RetardoLCD@a stored from wreg
  2550   000E80  6E04               	movwf	RetardoLCD@a^0,c
  2551                           
  2552                           ;LibLCDXC8.h: 289: switch(a){
  2553   000E82  D023               	goto	l1061
  2554   000E84                     l1051:
  2555   000E84  0E62               	movlw	98
  2556   000E86  6E03               	movwf	??_RetardoLCD^0,c
  2557   000E88  0E66               	movlw	102
  2558   000E8A                     u1117:
  2559   000E8A  2EE8               	decfsz	wreg,f,c
  2560   000E8C  D7FE               	bra	u1117
  2561   000E8E  2E03               	decfsz	??_RetardoLCD^0,f,c
  2562   000E90  D7FC               	bra	u1117
  2563                           
  2564                           ;LibLCDXC8.h: 292: break;
  2565   000E92  0012               	return	
  2566   000E94                     l1053:
  2567   000E94  0E07               	movlw	7
  2568   000E96  6E03               	movwf	??_RetardoLCD^0,c
  2569   000E98  0E7D               	movlw	125
  2570   000E9A                     u1127:
  2571   000E9A  2EE8               	decfsz	wreg,f,c
  2572   000E9C  D7FE               	bra	u1127
  2573   000E9E  2E03               	decfsz	??_RetardoLCD^0,f,c
  2574   000EA0  D7FC               	bra	u1127
  2575   000EA2  F000               	nop	
  2576                           
  2577                           ;LibLCDXC8.h: 294: _delay((unsigned long)((640)*(20000000/4000000.0)));
  2578   000EA4  0E05               	movlw	5
  2579   000EA6  6E03               	movwf	??_RetardoLCD^0,c
  2580   000EA8  0E26               	movlw	38
  2581   000EAA                     u1137:
  2582   000EAA  2EE8               	decfsz	wreg,f,c
  2583   000EAC  D7FE               	bra	u1137
  2584   000EAE  2E03               	decfsz	??_RetardoLCD^0,f,c
  2585   000EB0  D7FC               	bra	u1137
  2586   000EB2  D000               	nop2	
  2587                           
  2588                           ;LibLCDXC8.h: 296: break;
  2589   000EB4  0012               	return	
  2590   000EB6                     l1055:
  2591   000EB6  0EA6               	movlw	166
  2592   000EB8                     u1147:
  2593   000EB8  2EE8               	decfsz	wreg,f,c
  2594   000EBA  D7FE               	bra	u1147
  2595   000EBC  D000               	nop2	
  2596                           
  2597                           ;LibLCDXC8.h: 299: break;
  2598   000EBE  0012               	return	
  2599   000EC0                     l1057:
  2600   000EC0  0E42               	movlw	66
  2601   000EC2                     u1157:
  2602   000EC2  2EE8               	decfsz	wreg,f,c
  2603   000EC4  D7FE               	bra	u1157
  2604   000EC6  D000               	nop2	
  2605                           
  2606                           ;LibLCDXC8.h: 302: break;
  2607   000EC8  0012               	return	
  2608   000ECA                     l1061:
  2609   000ECA  5004               	movf	RetardoLCD@a^0,w,c
  2610                           
  2611                           ; Switch size 1, requested type "simple"
  2612                           ; Number of cases is 4, Range of values is 1 to 4
  2613                           ; switch strategies available:
  2614                           ; Name         Instructions Cycles
  2615                           ; simple_byte           13     7 (average)
  2616                           ;	Chosen strategy is simple_byte
  2617   000ECC  0A01               	xorlw	1	; case 1
  2618   000ECE  B4D8               	btfsc	status,2,c
  2619   000ED0  D7D9               	goto	l1051
  2620   000ED2  0A03               	xorlw	3	; case 2
  2621   000ED4  B4D8               	btfsc	status,2,c
  2622   000ED6  D7DE               	goto	l1053
  2623   000ED8  0A01               	xorlw	1	; case 3
  2624   000EDA  B4D8               	btfsc	status,2,c
  2625   000EDC  D7EC               	goto	l1055
  2626   000EDE  0A07               	xorlw	7	; case 4
  2627   000EE0  A4D8               	btfss	status,2,c
  2628   000EE2  0012               	return	
  2629   000EE4  D7ED               	goto	l1057
  2630   000EE6                     __end_of_RetardoLCD:
  2631                           	callstack 0
  2632                           
  2633 ;; *************** function _HabilitaLCD *****************
  2634 ;; Defined at:
  2635 ;;		line 107 in file "LibLCDXC8.h"
  2636 ;; Parameters:    Size  Location     Type
  2637 ;;		None
  2638 ;; Auto vars:     Size  Location     Type
  2639 ;;		None
  2640 ;; Return value:  Size  Location     Type
  2641 ;;                  1    wreg      void 
  2642 ;; Registers used:
  2643 ;;		wreg
  2644 ;; Tracked objects:
  2645 ;;		On entry : 0/0
  2646 ;;		On exit  : 0/0
  2647 ;;		Unchanged: 0/0
  2648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2649 ;;      Params:         0       0       0       0       0       0       0       0       0
  2650 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2651 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2652 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2653 ;;Total ram usage:        0 bytes
  2654 ;; Hardware stack levels used: 1
  2655 ;; Hardware stack levels required when called: 2
  2656 ;; This function calls:
  2657 ;;		Nothing
  2658 ;; This function is called by:
  2659 ;;		_EnviaDato
  2660 ;;		_InicializaLCD
  2661 ;;		_BorraLCD
  2662 ;;		_EscribeLCD_c
  2663 ;;		_DireccionaLCD
  2664 ;; This function uses a non-reentrant model
  2665 ;;
  2666                           
  2667                           	psect	text21
  2668   0011E8                     __ptext21:
  2669                           	callstack 0
  2670   0011E8                     _HabilitaLCD:
  2671                           	callstack 25
  2672                           
  2673                           ;LibLCDXC8.h: 109: LATD7=1;
  2674                           
  2675                           ;incstack = 0
  2676   0011E8  8E8C               	bsf	3980,7,c	;volatile
  2677                           
  2678                           ;LibLCDXC8.h: 110: _delay((unsigned long)((40)*(20000000/4000000.0)));
  2679   0011EA  0E42               	movlw	66
  2680   0011EC                     u1167:
  2681   0011EC  2EE8               	decfsz	wreg,f,c
  2682   0011EE  D7FE               	bra	u1167
  2683   0011F0  D000               	nop2	
  2684                           
  2685                           ;LibLCDXC8.h: 112: LATD7=0;
  2686   0011F2  9E8C               	bcf	3980,7,c	;volatile
  2687   0011F4  0012               	return		;funcret
  2688   0011F6                     __end_of_HabilitaLCD:
  2689                           	callstack 0
  2690                           
  2691 ;; *************** function _GuardarDatoEnEEPROM *****************
  2692 ;; Defined at:
  2693 ;;		line 269 in file "Laboratorio5.c"
  2694 ;; Parameters:    Size  Location     Type
  2695 ;;  dir             2    2[COMRAM] unsigned int 
  2696 ;;  dato            1    4[COMRAM] unsigned char 
  2697 ;; Auto vars:     Size  Location     Type
  2698 ;;		None
  2699 ;; Return value:  Size  Location     Type
  2700 ;;                  1    wreg      void 
  2701 ;; Registers used:
  2702 ;;		wreg, status,2
  2703 ;; Tracked objects:
  2704 ;;		On entry : 0/0
  2705 ;;		On exit  : 0/0
  2706 ;;		Unchanged: 0/0
  2707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2708 ;;      Params:         3       0       0       0       0       0       0       0       0
  2709 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2710 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2711 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2712 ;;Total ram usage:        3 bytes
  2713 ;; Hardware stack levels used: 1
  2714 ;; Hardware stack levels required when called: 2
  2715 ;; This function calls:
  2716 ;;		Nothing
  2717 ;; This function is called by:
  2718 ;;		_main
  2719 ;; This function uses a non-reentrant model
  2720 ;;
  2721                           
  2722                           	psect	text22
  2723   00113E                     __ptext22:
  2724                           	callstack 0
  2725   00113E                     _GuardarDatoEnEEPROM:
  2726                           	callstack 28
  2727                           
  2728                           ;Laboratorio5.c: 270: EEADR = dir;
  2729                           
  2730                           ;incstack = 0
  2731   00113E  C003  FFA9         	movff	GuardarDatoEnEEPROM@dir,4009	;volatile
  2732                           
  2733                           ;Laboratorio5.c: 271: EEDATA = dato;
  2734   001142  C005  FFA8         	movff	GuardarDatoEnEEPROM@dato,4008	;volatile
  2735                           
  2736                           ;Laboratorio5.c: 273: EEPGD = 0;
  2737   001146  9EA6               	bcf	4006,7,c	;volsfr
  2738                           
  2739                           ;Laboratorio5.c: 274: CFGS = 0;
  2740   001148  9CA6               	bcf	4006,6,c	;volsfr
  2741                           
  2742                           ;Laboratorio5.c: 275: WREN = 1;
  2743   00114A  84A6               	bsf	4006,2,c	;volsfr
  2744                           
  2745                           ;Laboratorio5.c: 277: GIE = 0;
  2746   00114C  9EF2               	bcf	4082,7,c	;volatile
  2747                           
  2748                           ;Laboratorio5.c: 279: EECON2 = 0x55;
  2749   00114E  0E55               	movlw	85
  2750   001150  6EA7               	movwf	167,c	;volsfr
  2751                           
  2752                           ;Laboratorio5.c: 280: EECON2 = 0xAA;
  2753   001152  0EAA               	movlw	170
  2754   001154  6EA7               	movwf	167,c	;volsfr
  2755                           
  2756                           ;Laboratorio5.c: 281: WR = 1;
  2757   001156  82A6               	bsf	4006,1,c	;volsfr
  2758                           
  2759                           ;Laboratorio5.c: 282: GIE = 1;
  2760   001158  8EF2               	bsf	4082,7,c	;volatile
  2761   00115A                     l269:
  2762   00115A  A8A1               	btfss	4001,4,c	;volatile
  2763   00115C  D7FE               	goto	l269
  2764                           
  2765                           ;Laboratorio5.c: 284: EEIF = 0;
  2766   00115E  98A1               	bcf	4001,4,c	;volatile
  2767                           
  2768                           ;Laboratorio5.c: 285: WREN = 0;
  2769   001160  94A6               	bcf	4006,2,c	;volsfr
  2770   001162  0012               	return		;funcret
  2771   001164                     __end_of_GuardarDatoEnEEPROM:
  2772                           	callstack 0
  2773                           
  2774 ;; *************** function _Conversion *****************
  2775 ;; Defined at:
  2776 ;;		line 262 in file "Laboratorio5.c"
  2777 ;; Parameters:    Size  Location     Type
  2778 ;;  canal           1    wreg     unsigned char 
  2779 ;; Auto vars:     Size  Location     Type
  2780 ;;  canal           1    2[COMRAM] unsigned char 
  2781 ;; Return value:  Size  Location     Type
  2782 ;;                  2   74[None  ] unsigned int 
  2783 ;; Registers used:
  2784 ;;		wreg, status,2, status,0
  2785 ;; Tracked objects:
  2786 ;;		On entry : 0/0
  2787 ;;		On exit  : 0/0
  2788 ;;		Unchanged: 0/0
  2789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2790 ;;      Params:         0       0       0       0       0       0       0       0       0
  2791 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2792 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2793 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2794 ;;Total ram usage:        1 bytes
  2795 ;; Hardware stack levels used: 1
  2796 ;; Hardware stack levels required when called: 2
  2797 ;; This function calls:
  2798 ;;		Nothing
  2799 ;; This function is called by:
  2800 ;;		_main
  2801 ;; This function uses a non-reentrant model
  2802 ;;
  2803                           
  2804                           	psect	text23
  2805   0011C6                     __ptext23:
  2806                           	callstack 0
  2807   0011C6                     _Conversion:
  2808                           	callstack 28
  2809                           
  2810                           ;incstack = 0
  2811                           ;Conversion@canal stored from wreg
  2812   0011C6  6E03               	movwf	Conversion@canal^0,c
  2813                           
  2814                           ;Laboratorio5.c: 263: ADCON0 = 0b00000001 | (canal << 2);
  2815   0011C8  4403               	rlncf	Conversion@canal^0,w,c
  2816   0011CA  46E8               	rlncf	wreg,f,c
  2817   0011CC  0BFC               	andlw	252
  2818   0011CE  0901               	iorlw	1
  2819   0011D0  6EC2               	movwf	194,c	;volatile
  2820                           
  2821                           ;Laboratorio5.c: 264: GO = 1;
  2822   0011D2  82C2               	bsf	4034,1,c	;volatile
  2823   0011D4                     l263:
  2824   0011D4  A2C2               	btfss	4034,1,c	;volatile
  2825   0011D6  0012               	return	
  2826   0011D8  D7FD               	goto	l263
  2827   0011DA                     __end_of_Conversion:
  2828                           	callstack 0
  2829                           
  2830 ;; *************** function _ColorRGB *****************
  2831 ;; Defined at:
  2832 ;;		line 226 in file "Laboratorio5.c"
  2833 ;; Parameters:    Size  Location     Type
  2834 ;;  val             2    2[COMRAM] unsigned int 
  2835 ;; Auto vars:     Size  Location     Type
  2836 ;;		None
  2837 ;; Return value:  Size  Location     Type
  2838 ;;                  1    wreg      void 
  2839 ;; Registers used:
  2840 ;;		wreg, status,2, status,0
  2841 ;; Tracked objects:
  2842 ;;		On entry : 0/0
  2843 ;;		On exit  : 0/0
  2844 ;;		Unchanged: 0/0
  2845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2846 ;;      Params:         2       0       0       0       0       0       0       0       0
  2847 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2848 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2849 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2850 ;;Total ram usage:        2 bytes
  2851 ;; Hardware stack levels used: 1
  2852 ;; Hardware stack levels required when called: 2
  2853 ;; This function calls:
  2854 ;;		Nothing
  2855 ;; This function is called by:
  2856 ;;		_main
  2857 ;; This function uses a non-reentrant model
  2858 ;;
  2859                           
  2860                           	psect	text24
  2861   000C8A                     __ptext24:
  2862                           	callstack 0
  2863   000C8A                     _ColorRGB:
  2864                           	callstack 28
  2865                           
  2866                           ;Laboratorio5.c: 227: if (val < 22) {
  2867                           
  2868                           ;incstack = 0
  2869   000C8A  5004               	movf	(ColorRGB@val+1)^0,w,c
  2870   000C8C  E108               	bnz	l1777
  2871   000C8E  0E16               	movlw	22
  2872   000C90  5C03               	subwf	ColorRGB@val^0,w,c
  2873   000C92  B0D8               	btfsc	status,0,c
  2874   000C94  D004               	goto	l1777
  2875                           
  2876                           ;Laboratorio5.c: 228: RD0 = 0;
  2877   000C96  9083               	bcf	3971,0,c	;volatile
  2878                           
  2879                           ;Laboratorio5.c: 229: RD1 = 0;
  2880   000C98  9283               	bcf	3971,1,c	;volatile
  2881                           
  2882                           ;Laboratorio5.c: 230: RD2 = 0;
  2883   000C9A  9483               	bcf	3971,2,c	;volatile
  2884                           
  2885                           ;Laboratorio5.c: 231: } else if (val >= 22 && val < 25) {
  2886   000C9C  0012               	return	
  2887   000C9E                     l1777:
  2888   000C9E  5004               	movf	(ColorRGB@val+1)^0,w,c
  2889   000CA0  E104               	bnz	u770
  2890   000CA2  0E16               	movlw	22
  2891   000CA4  5C03               	subwf	ColorRGB@val^0,w,c
  2892   000CA6  A0D8               	btfss	status,0,c
  2893   000CA8  D00A               	goto	l1783
  2894   000CAA                     u770:
  2895   000CAA  5004               	movf	(ColorRGB@val+1)^0,w,c
  2896   000CAC  E108               	bnz	l1783
  2897   000CAE  0E19               	movlw	25
  2898   000CB0  5C03               	subwf	ColorRGB@val^0,w,c
  2899   000CB2  B0D8               	btfsc	status,0,c
  2900   000CB4  D004               	goto	l1783
  2901                           
  2902                           ;Laboratorio5.c: 232: RD0 = 1;
  2903   000CB6  8083               	bsf	3971,0,c	;volatile
  2904                           
  2905                           ;Laboratorio5.c: 233: RD1 = 0;
  2906   000CB8  9283               	bcf	3971,1,c	;volatile
  2907                           
  2908                           ;Laboratorio5.c: 234: RD2 = 1;
  2909   000CBA  8483               	bsf	3971,2,c	;volatile
  2910                           
  2911                           ;Laboratorio5.c: 235: } else if (val >= 25 && val < 28) {
  2912   000CBC  0012               	return	
  2913   000CBE                     l1783:
  2914   000CBE  5004               	movf	(ColorRGB@val+1)^0,w,c
  2915   000CC0  E104               	bnz	u790
  2916   000CC2  0E19               	movlw	25
  2917   000CC4  5C03               	subwf	ColorRGB@val^0,w,c
  2918   000CC6  A0D8               	btfss	status,0,c
  2919   000CC8  D00A               	goto	l1789
  2920   000CCA                     u790:
  2921   000CCA  5004               	movf	(ColorRGB@val+1)^0,w,c
  2922   000CCC  E108               	bnz	l1789
  2923   000CCE  0E1C               	movlw	28
  2924   000CD0  5C03               	subwf	ColorRGB@val^0,w,c
  2925   000CD2  B0D8               	btfsc	status,0,c
  2926   000CD4  D004               	goto	l1789
  2927                           
  2928                           ;Laboratorio5.c: 236: RD0 = 0;
  2929   000CD6  9083               	bcf	3971,0,c	;volatile
  2930                           
  2931                           ;Laboratorio5.c: 237: RD1 = 0;
  2932   000CD8  9283               	bcf	3971,1,c	;volatile
  2933                           
  2934                           ;Laboratorio5.c: 238: RD2 = 1;
  2935   000CDA  8483               	bsf	3971,2,c	;volatile
  2936                           
  2937                           ;Laboratorio5.c: 239: } else if (val >= 28 && val < 31) {
  2938   000CDC  0012               	return	
  2939   000CDE                     l1789:
  2940   000CDE  5004               	movf	(ColorRGB@val+1)^0,w,c
  2941   000CE0  E104               	bnz	u810
  2942   000CE2  0E1C               	movlw	28
  2943   000CE4  5C03               	subwf	ColorRGB@val^0,w,c
  2944   000CE6  A0D8               	btfss	status,0,c
  2945   000CE8  D00A               	goto	l1795
  2946   000CEA                     u810:
  2947   000CEA  5004               	movf	(ColorRGB@val+1)^0,w,c
  2948   000CEC  E108               	bnz	l1795
  2949   000CEE  0E1F               	movlw	31
  2950   000CF0  5C03               	subwf	ColorRGB@val^0,w,c
  2951   000CF2  B0D8               	btfsc	status,0,c
  2952   000CF4  D004               	goto	l1795
  2953                           
  2954                           ;Laboratorio5.c: 240: RD0 = 0;
  2955   000CF6  9083               	bcf	3971,0,c	;volatile
  2956                           
  2957                           ;Laboratorio5.c: 241: RD1 = 1;
  2958   000CF8  8283               	bsf	3971,1,c	;volatile
  2959                           
  2960                           ;Laboratorio5.c: 242: RD2 = 1;
  2961   000CFA  8483               	bsf	3971,2,c	;volatile
  2962                           
  2963                           ;Laboratorio5.c: 243: } else if (val >= 31 && val < 34) {
  2964   000CFC  0012               	return	
  2965   000CFE                     l1795:
  2966   000CFE  5004               	movf	(ColorRGB@val+1)^0,w,c
  2967   000D00  E104               	bnz	u830
  2968   000D02  0E1F               	movlw	31
  2969   000D04  5C03               	subwf	ColorRGB@val^0,w,c
  2970   000D06  A0D8               	btfss	status,0,c
  2971   000D08  D00A               	goto	l1801
  2972   000D0A                     u830:
  2973   000D0A  5004               	movf	(ColorRGB@val+1)^0,w,c
  2974   000D0C  E108               	bnz	l1801
  2975   000D0E  0E22               	movlw	34
  2976   000D10  5C03               	subwf	ColorRGB@val^0,w,c
  2977   000D12  B0D8               	btfsc	status,0,c
  2978   000D14  D004               	goto	l1801
  2979                           
  2980                           ;Laboratorio5.c: 244: RD0 = 0;
  2981   000D16  9083               	bcf	3971,0,c	;volatile
  2982                           
  2983                           ;Laboratorio5.c: 245: RD1 = 1;
  2984   000D18  8283               	bsf	3971,1,c	;volatile
  2985                           
  2986                           ;Laboratorio5.c: 246: RD2 = 0;
  2987   000D1A  9483               	bcf	3971,2,c	;volatile
  2988                           
  2989                           ;Laboratorio5.c: 247: } else if (val >= 34 && val < 37) {
  2990   000D1C  0012               	return	
  2991   000D1E                     l1801:
  2992   000D1E  5004               	movf	(ColorRGB@val+1)^0,w,c
  2993   000D20  E104               	bnz	u850
  2994   000D22  0E22               	movlw	34
  2995   000D24  5C03               	subwf	ColorRGB@val^0,w,c
  2996   000D26  A0D8               	btfss	status,0,c
  2997   000D28  D00A               	goto	l1807
  2998   000D2A                     u850:
  2999   000D2A  5004               	movf	(ColorRGB@val+1)^0,w,c
  3000   000D2C  E108               	bnz	l1807
  3001   000D2E  0E25               	movlw	37
  3002   000D30  5C03               	subwf	ColorRGB@val^0,w,c
  3003   000D32  B0D8               	btfsc	status,0,c
  3004   000D34  D004               	goto	l1807
  3005                           
  3006                           ;Laboratorio5.c: 248: RD0 = 1;
  3007   000D36  8083               	bsf	3971,0,c	;volatile
  3008                           
  3009                           ;Laboratorio5.c: 249: RD1 = 1;
  3010   000D38  8283               	bsf	3971,1,c	;volatile
  3011                           
  3012                           ;Laboratorio5.c: 250: RD2 = 0;
  3013   000D3A  9483               	bcf	3971,2,c	;volatile
  3014                           
  3015                           ;Laboratorio5.c: 251: } else if (val >= 37 && val < 40) {
  3016   000D3C  0012               	return	
  3017   000D3E                     l1807:
  3018   000D3E  5004               	movf	(ColorRGB@val+1)^0,w,c
  3019   000D40  E104               	bnz	u870
  3020   000D42  0E25               	movlw	37
  3021   000D44  5C03               	subwf	ColorRGB@val^0,w,c
  3022   000D46  A0D8               	btfss	status,0,c
  3023   000D48  D00A               	goto	l1813
  3024   000D4A                     u870:
  3025   000D4A  5004               	movf	(ColorRGB@val+1)^0,w,c
  3026   000D4C  E108               	bnz	l1813
  3027   000D4E  0E28               	movlw	40
  3028   000D50  5C03               	subwf	ColorRGB@val^0,w,c
  3029   000D52  B0D8               	btfsc	status,0,c
  3030   000D54  D004               	goto	l1813
  3031                           
  3032                           ;Laboratorio5.c: 252: RD0 = 1;
  3033   000D56  8083               	bsf	3971,0,c	;volatile
  3034                           
  3035                           ;Laboratorio5.c: 253: RD1 = 0;
  3036   000D58  9283               	bcf	3971,1,c	;volatile
  3037                           
  3038                           ;Laboratorio5.c: 254: RD2 = 0;
  3039   000D5A  9483               	bcf	3971,2,c	;volatile
  3040                           
  3041                           ;Laboratorio5.c: 255: } else if (val >= 40) {
  3042   000D5C  0012               	return	
  3043   000D5E                     l1813:
  3044   000D5E  5004               	movf	(ColorRGB@val+1)^0,w,c
  3045   000D60  E104               	bnz	u890
  3046   000D62  0E28               	movlw	40
  3047   000D64  5C03               	subwf	ColorRGB@val^0,w,c
  3048   000D66  A0D8               	btfss	status,0,c
  3049   000D68  0012               	return	
  3050   000D6A                     u890:
  3051                           
  3052                           ;Laboratorio5.c: 256: RD0 = 1;
  3053   000D6A  8083               	bsf	3971,0,c	;volatile
  3054                           
  3055                           ;Laboratorio5.c: 257: RD1 = 1;
  3056   000D6C  8283               	bsf	3971,1,c	;volatile
  3057                           
  3058                           ;Laboratorio5.c: 258: RD2 = 1;
  3059   000D6E  8483               	bsf	3971,2,c	;volatile
  3060   000D70  0012               	return	
  3061   000D72                     __end_of_ColorRGB:
  3062                           	callstack 0
  3063                           
  3064 ;; *************** function _ISR *****************
  3065 ;; Defined at:
  3066 ;;		line 299 in file "Laboratorio5.c"
  3067 ;; Parameters:    Size  Location     Type
  3068 ;;		None
  3069 ;; Auto vars:     Size  Location     Type
  3070 ;;		None
  3071 ;; Return value:  Size  Location     Type
  3072 ;;                  1    wreg      void 
  3073 ;; Registers used:
  3074 ;;		wreg, status,2, status,0, cstack
  3075 ;; Tracked objects:
  3076 ;;		On entry : 0/0
  3077 ;;		On exit  : 0/0
  3078 ;;		Unchanged: 0/0
  3079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3080 ;;      Params:         0       0       0       0       0       0       0       0       0
  3081 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3082 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3083 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3084 ;;Total ram usage:        2 bytes
  3085 ;; Hardware stack levels used: 1
  3086 ;; Hardware stack levels required when called: 1
  3087 ;; This function calls:
  3088 ;;		_Recibir
  3089 ;; This function is called by:
  3090 ;;		Interrupt level 2
  3091 ;; This function uses a non-reentrant model
  3092 ;;
  3093                           
  3094                           	psect	intcode
  3095   000008                     __pintcode:
  3096                           	callstack 0
  3097   000008                     _ISR:
  3098                           	callstack 24
  3099                           
  3100                           ;incstack = 0
  3101   000008  8221               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3102   00000A  EDB9  F006         	call	int_func,f	;refresh shadow registers
  3103                           
  3104                           	psect	intcode_body
  3105   000D72                     __pintcode_body:
  3106                           	callstack 24
  3107   000D72                     int_func:
  3108                           	callstack 24
  3109   000D72  0006               	pop		; remove dummy address from shadow register refresh
  3110                           
  3111                           ;Laboratorio5.c: 300: if(TMR0IF){
  3112   000D74  A4F2               	btfss	4082,2,c	;volatile
  3113   000D76  D00A               	goto	i2l1589
  3114                           
  3115                           ;Laboratorio5.c: 301: TMR0IF=0;
  3116   000D78  94F2               	bcf	4082,2,c	;volatile
  3117                           
  3118                           ;Laboratorio5.c: 302: RD4 = !RD4;
  3119   000D7A  B883               	btfsc	3971,4,c	;volatile
  3120   000D7C  D002               	goto	i2u54_40
  3121   000D7E  8883               	bsf	3971,4,c	;volatile
  3122   000D80  D001               	goto	i2u55_45
  3123   000D82                     i2u54_40:
  3124   000D82  9883               	bcf	3971,4,c	;volatile
  3125   000D84                     i2u55_45:
  3126                           
  3127                           ;Laboratorio5.c: 303: TMR0 = 3036;
  3128   000D84  0E0B               	movlw	11
  3129   000D86  6ED7               	movwf	215,c	;volatile
  3130   000D88  0EDC               	movlw	220
  3131   000D8A  6ED6               	movwf	214,c	;volatile
  3132   000D8C                     i2l1589:
  3133                           
  3134                           ;Laboratorio5.c: 305: };Laboratorio5.c: 306: if(RCIF){
  3135   000D8C  BA9E               	btfsc	3998,5,c	;volatile
  3136   000D8E  D01A               	goto	i2l1603
  3137   000D90  D033               	goto	i2l289
  3138   000D92                     i2l1593:
  3139                           
  3140                           ;Laboratorio5.c: 309: A=0;
  3141   000D92  0E00               	movlw	0
  3142   000D94  6E1C               	movwf	(_A+1)^0,c
  3143   000D96  0E00               	movlw	0
  3144   000D98  6E1B               	movwf	_A^0,c
  3145                           
  3146                           ;Laboratorio5.c: 310: B=0;
  3147   000D9A  0E00               	movlw	0
  3148   000D9C  6E1A               	movwf	(_B+1)^0,c
  3149   000D9E  0E00               	movlw	0
  3150   000DA0  D00F               	goto	L6
  3151   000DA2                     i2l1595:
  3152                           
  3153                           ;Laboratorio5.c: 313: A=0;
  3154   000DA2  0E00               	movlw	0
  3155   000DA4  6E1C               	movwf	(_A+1)^0,c
  3156   000DA6  0E00               	movlw	0
  3157   000DA8  D007               	goto	L8
  3158   000DAA                     i2l1597:
  3159                           
  3160                           ;Laboratorio5.c: 317: A=1;
  3161   000DAA  0E00               	movlw	0
  3162   000DAC  6E1C               	movwf	(_A+1)^0,c
  3163   000DAE  0E01               	movlw	1
  3164   000DB0  D7F3               	goto	L7
  3165   000DB2                     i2l1599:
  3166                           
  3167                           ;Laboratorio5.c: 321: A=1;
  3168   000DB2  0E00               	movlw	0
  3169   000DB4  6E1C               	movwf	(_A+1)^0,c
  3170   000DB6  0E01               	movlw	1
  3171   000DB8                     L8:
  3172   000DB8  6E1B               	movwf	_A^0,c
  3173                           
  3174                           ;Laboratorio5.c: 322: B=1;
  3175   000DBA  0E00               	movlw	0
  3176   000DBC  6E1A               	movwf	(_B+1)^0,c
  3177   000DBE  0E01               	movlw	1
  3178   000DC0                     L6:
  3179   000DC0  6E19               	movwf	_B^0,c
  3180                           
  3181                           ;Laboratorio5.c: 323: break;
  3182   000DC2  D00E               	goto	i2l1605
  3183   000DC4                     i2l1603:
  3184   000DC4  EC05  F009         	call	_Recibir	;wreg free
  3185                           
  3186                           ; Switch size 1, requested type "simple"
  3187                           ; Number of cases is 4, Range of values is 67 to 82
  3188                           ; switch strategies available:
  3189                           ; Name         Instructions Cycles
  3190                           ; simple_byte           13     7 (average)
  3191                           ;	Chosen strategy is simple_byte
  3192   000DC8  0A43               	xorlw	67	; case 67
  3193   000DCA  B4D8               	btfsc	status,2,c
  3194   000DCC  D7E2               	goto	i2l1593
  3195   000DCE  0A05               	xorlw	5	; case 70
  3196   000DD0  B4D8               	btfsc	status,2,c
  3197   000DD2  D7EF               	goto	i2l1599
  3198   000DD4  0A0D               	xorlw	13	; case 75
  3199   000DD6  B4D8               	btfsc	status,2,c
  3200   000DD8  D7E4               	goto	i2l1595
  3201   000DDA  0A19               	xorlw	25	; case 82
  3202   000DDC  B4D8               	btfsc	status,2,c
  3203   000DDE  D7E5               	goto	i2l1597
  3204   000DE0                     i2l1605:
  3205                           
  3206                           ;Laboratorio5.c: 327: _delay((unsigned long)((100)*(8000000/4000.0)));
  3207   000DE0  0E02               	movlw	2
  3208   000DE2  6E02               	movwf	(??_ISR+1)^0,c
  3209   000DE4  0E04               	movlw	4
  3210   000DE6  6E01               	movwf	??_ISR^0,c
  3211   000DE8  0EBA               	movlw	186
  3212   000DEA                     i2u117_47:
  3213   000DEA  2EE8               	decfsz	wreg,f,c
  3214   000DEC  D7FE               	bra	i2u117_47
  3215   000DEE  2E01               	decfsz	??_ISR^0,f,c
  3216   000DF0  D7FC               	bra	i2u117_47
  3217   000DF2  2E02               	decfsz	(??_ISR+1)^0,f,c
  3218   000DF4  D7FA               	bra	i2u117_47
  3219   000DF6  D000               	nop2	
  3220   000DF8                     i2l289:
  3221   000DF8  9221               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3222   000DFA  0011               	retfie		f
  3223   000DFC                     __end_of_ISR:
  3224                           	callstack 0
  3225                           
  3226 ;; *************** function _Recibir *****************
  3227 ;; Defined at:
  3228 ;;		line 157 in file "Laboratorio5.c"
  3229 ;; Parameters:    Size  Location     Type
  3230 ;;		None
  3231 ;; Auto vars:     Size  Location     Type
  3232 ;;		None
  3233 ;; Return value:  Size  Location     Type
  3234 ;;                  1    wreg      unsigned char 
  3235 ;; Registers used:
  3236 ;;		wreg, status,2
  3237 ;; Tracked objects:
  3238 ;;		On entry : 0/0
  3239 ;;		On exit  : 0/0
  3240 ;;		Unchanged: 0/0
  3241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3242 ;;      Params:         0       0       0       0       0       0       0       0       0
  3243 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3244 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3245 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3246 ;;Total ram usage:        0 bytes
  3247 ;; Hardware stack levels used: 1
  3248 ;; This function calls:
  3249 ;;		Nothing
  3250 ;; This function is called by:
  3251 ;;		_ISR
  3252 ;; This function uses a non-reentrant model
  3253 ;;
  3254                           
  3255                           	psect	text26
  3256   00120A                     __ptext26:
  3257                           	callstack 0
  3258   00120A                     _Recibir:
  3259                           	callstack 24
  3260                           
  3261                           ;Laboratorio5.c: 158: while(RCIF==0);
  3262                           
  3263                           ;incstack = 0
  3264   00120A  AA9E               	btfss	3998,5,c	;volatile
  3265   00120C  D7FE               	goto	__ptext26
  3266                           
  3267                           ;Laboratorio5.c: 159: return RCREG;
  3268   00120E  50AE               	movf	174,w,c	;volatile
  3269   001210  0012               	return		;funcret
  3270   001212                     __end_of_Recibir:
  3271                           	callstack 0
  3272                           
  3273                           	psect	rparam
  3274   000000                     
  3275                           	psect	temp
  3276   000021                     btemp:
  3277                           	callstack 0
  3278   000021                     	ds	1
  3279   000000                     int$flags	set	btemp
  3280   000000                     wtemp8	set	btemp+1
  3281   000000                     ttemp5	set	btemp+1
  3282   000000                     ttemp6	set	btemp+4
  3283   000000                     ttemp7	set	btemp+8
  3284                           
  3285                           	psect	idloc
  3286                           
  3287                           ;Config register IDLOC0 @ 0x200000
  3288                           ;	unspecified, using default values
  3289   200000                     	org	2097152
  3290   200000  FF                 	db	255
  3291                           
  3292                           ;Config register IDLOC1 @ 0x200001
  3293                           ;	unspecified, using default values
  3294   200001                     	org	2097153
  3295   200001  FF                 	db	255
  3296                           
  3297                           ;Config register IDLOC2 @ 0x200002
  3298                           ;	unspecified, using default values
  3299   200002                     	org	2097154
  3300   200002  FF                 	db	255
  3301                           
  3302                           ;Config register IDLOC3 @ 0x200003
  3303                           ;	unspecified, using default values
  3304   200003                     	org	2097155
  3305   200003  FF                 	db	255
  3306                           
  3307                           ;Config register IDLOC4 @ 0x200004
  3308                           ;	unspecified, using default values
  3309   200004                     	org	2097156
  3310   200004  FF                 	db	255
  3311                           
  3312                           ;Config register IDLOC5 @ 0x200005
  3313                           ;	unspecified, using default values
  3314   200005                     	org	2097157
  3315   200005  FF                 	db	255
  3316                           
  3317                           ;Config register IDLOC6 @ 0x200006
  3318                           ;	unspecified, using default values
  3319   200006                     	org	2097158
  3320   200006  FF                 	db	255
  3321                           
  3322                           ;Config register IDLOC7 @ 0x200007
  3323                           ;	unspecified, using default values
  3324   200007                     	org	2097159
  3325   200007  FF                 	db	255
  3326                           
  3327                           	psect	config
  3328                           
  3329                           ;Config register CONFIG1L @ 0x300000
  3330                           ;	unspecified, using default values
  3331                           ;	PLL Prescaler Selection bits
  3332                           ;	PLLDIV = 0x0, unprogrammed default
  3333                           ;	System Clock Postscaler Selection bits
  3334                           ;	CPUDIV = 0x0, unprogrammed default
  3335                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3336                           ;	USBDIV = 0x0, unprogrammed default
  3337   300000                     	org	3145728
  3338   300000  00                 	db	0
  3339                           
  3340                           ;Config register CONFIG1H @ 0x300001
  3341                           ;	Oscillator Selection bits
  3342                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  3343                           ;	Fail-Safe Clock Monitor Enable bit
  3344                           ;	FCMEN = 0x0, unprogrammed default
  3345                           ;	Internal/External Oscillator Switchover bit
  3346                           ;	IESO = 0x0, unprogrammed default
  3347   300001                     	org	3145729
  3348   300001  09                 	db	9
  3349                           
  3350                           ;Config register CONFIG2L @ 0x300002
  3351                           ;	unspecified, using default values
  3352                           ;	Power-up Timer Enable bit
  3353                           ;	PWRT = 0x1, unprogrammed default
  3354                           ;	Brown-out Reset Enable bits
  3355                           ;	BOR = 0x3, unprogrammed default
  3356                           ;	Brown-out Reset Voltage bits
  3357                           ;	BORV = 0x3, unprogrammed default
  3358                           ;	USB Voltage Regulator Enable bit
  3359                           ;	VREGEN = 0x0, unprogrammed default
  3360   300002                     	org	3145730
  3361   300002  1F                 	db	31
  3362                           
  3363                           ;Config register CONFIG2H @ 0x300003
  3364                           ;	Watchdog Timer Enable bit
  3365                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3366                           ;	Watchdog Timer Postscale Select bits
  3367                           ;	WDTPS = 0xF, unprogrammed default
  3368   300003                     	org	3145731
  3369   300003  1E                 	db	30
  3370                           
  3371                           ; Padding undefined space
  3372   300004                     	org	3145732
  3373   300004  FF                 	db	255
  3374                           
  3375                           ;Config register CONFIG3H @ 0x300005
  3376                           ;	CCP2 MUX bit
  3377                           ;	CCP2MX = 0x1, unprogrammed default
  3378                           ;	PORTB A/D Enable bit
  3379                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3380                           ;	Low-Power Timer 1 Oscillator Enable bit
  3381                           ;	LPT1OSC = 0x0, unprogrammed default
  3382                           ;	MCLR Pin Enable bit
  3383                           ;	MCLRE = 0x1, unprogrammed default
  3384   300005                     	org	3145733
  3385   300005  81                 	db	129
  3386                           
  3387                           ;Config register CONFIG4L @ 0x300006
  3388                           ;	unspecified, using default values
  3389                           ;	Stack Full/Underflow Reset Enable bit
  3390                           ;	STVREN = 0x1, unprogrammed default
  3391                           ;	Single-Supply ICSP Enable bit
  3392                           ;	LVP = 0x1, unprogrammed default
  3393                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  3394                           ;	ICPRT = 0x0, unprogrammed default
  3395                           ;	Extended Instruction Set Enable bit
  3396                           ;	XINST = 0x0, unprogrammed default
  3397                           ;	Background Debugger Enable bit
  3398                           ;	DEBUG = 0x1, unprogrammed default
  3399   300006                     	org	3145734
  3400   300006  85                 	db	133
  3401                           
  3402                           ; Padding undefined space
  3403   300007                     	org	3145735
  3404   300007  FF                 	db	255
  3405                           
  3406                           ;Config register CONFIG5L @ 0x300008
  3407                           ;	unspecified, using default values
  3408                           ;	Code Protection bit
  3409                           ;	CP0 = 0x1, unprogrammed default
  3410                           ;	Code Protection bit
  3411                           ;	CP1 = 0x1, unprogrammed default
  3412                           ;	Code Protection bit
  3413                           ;	CP2 = 0x1, unprogrammed default
  3414                           ;	Code Protection bit
  3415                           ;	CP3 = 0x1, unprogrammed default
  3416   300008                     	org	3145736
  3417   300008  0F                 	db	15
  3418                           
  3419                           ;Config register CONFIG5H @ 0x300009
  3420                           ;	unspecified, using default values
  3421                           ;	Boot Block Code Protection bit
  3422                           ;	CPB = 0x1, unprogrammed default
  3423                           ;	Data EEPROM Code Protection bit
  3424                           ;	CPD = 0x1, unprogrammed default
  3425   300009                     	org	3145737
  3426   300009  C0                 	db	192
  3427                           
  3428                           ;Config register CONFIG6L @ 0x30000A
  3429                           ;	unspecified, using default values
  3430                           ;	Write Protection bit
  3431                           ;	WRT0 = 0x1, unprogrammed default
  3432                           ;	Write Protection bit
  3433                           ;	WRT1 = 0x1, unprogrammed default
  3434                           ;	Write Protection bit
  3435                           ;	WRT2 = 0x1, unprogrammed default
  3436                           ;	Write Protection bit
  3437                           ;	WRT3 = 0x1, unprogrammed default
  3438   30000A                     	org	3145738
  3439   30000A  0F                 	db	15
  3440                           
  3441                           ;Config register CONFIG6H @ 0x30000B
  3442                           ;	unspecified, using default values
  3443                           ;	Configuration Register Write Protection bit
  3444                           ;	WRTC = 0x1, unprogrammed default
  3445                           ;	Boot Block Write Protection bit
  3446                           ;	WRTB = 0x1, unprogrammed default
  3447                           ;	Data EEPROM Write Protection bit
  3448                           ;	WRTD = 0x1, unprogrammed default
  3449   30000B                     	org	3145739
  3450   30000B  E0                 	db	224
  3451                           
  3452                           ;Config register CONFIG7L @ 0x30000C
  3453                           ;	unspecified, using default values
  3454                           ;	Table Read Protection bit
  3455                           ;	EBTR0 = 0x1, unprogrammed default
  3456                           ;	Table Read Protection bit
  3457                           ;	EBTR1 = 0x1, unprogrammed default
  3458                           ;	Table Read Protection bit
  3459                           ;	EBTR2 = 0x1, unprogrammed default
  3460                           ;	Table Read Protection bit
  3461                           ;	EBTR3 = 0x1, unprogrammed default
  3462   30000C                     	org	3145740
  3463   30000C  0F                 	db	15
  3464                           
  3465                           ;Config register CONFIG7H @ 0x30000D
  3466                           ;	unspecified, using default values
  3467                           ;	Boot Block Table Read Protection bit
  3468                           ;	EBTRB = 0x1, unprogrammed default
  3469   30000D                     	org	3145741
  3470   30000D  40                 	db	64
  3471                           tosu	equ	0xFFF
  3472                           tosh	equ	0xFFE
  3473                           tosl	equ	0xFFD
  3474                           stkptr	equ	0xFFC
  3475                           pclatu	equ	0xFFB
  3476                           pclath	equ	0xFFA
  3477                           pcl	equ	0xFF9
  3478                           tblptru	equ	0xFF8
  3479                           tblptrh	equ	0xFF7
  3480                           tblptrl	equ	0xFF6
  3481                           tablat	equ	0xFF5
  3482                           prodh	equ	0xFF4
  3483                           prodl	equ	0xFF3
  3484                           indf0	equ	0xFEF
  3485                           postinc0	equ	0xFEE
  3486                           postdec0	equ	0xFED
  3487                           preinc0	equ	0xFEC
  3488                           plusw0	equ	0xFEB
  3489                           fsr0h	equ	0xFEA
  3490                           fsr0l	equ	0xFE9
  3491                           wreg	equ	0xFE8
  3492                           indf1	equ	0xFE7
  3493                           postinc1	equ	0xFE6
  3494                           postdec1	equ	0xFE5
  3495                           preinc1	equ	0xFE4
  3496                           plusw1	equ	0xFE3
  3497                           fsr1h	equ	0xFE2
  3498                           fsr1l	equ	0xFE1
  3499                           bsr	equ	0xFE0
  3500                           indf2	equ	0xFDF
  3501                           postinc2	equ	0xFDE
  3502                           postdec2	equ	0xFDD
  3503                           preinc2	equ	0xFDC
  3504                           plusw2	equ	0xFDB
  3505                           fsr2h	equ	0xFDA
  3506                           fsr2l	equ	0xFD9
  3507                           status	equ	0xFD8

Data Sizes:
    Strings     34
    Constant    0
    Data        1
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     24      32
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_4(CODE[5]), STR_3(CODE[6]), STR_2(CODE[10]), STR_1(CODE[13]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_4(CODE[5]), STR_3(CODE[6]), STR_2(CODE[10]), STR_1(CODE[13]), 

    MensajeLCD_Word@a	PTR unsigned char  size(1) Largest target is 13
		 -> STR_4(CODE[5]), STR_3(CODE[6]), STR_2(CODE[10]), STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _main->_TransmitirDatos
    _TransmitirDatos->_MensajeLCD_Word
    _TransmitirDatos->___awdiv
    _MensajeLCD_Word->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _LeerHT11->_LeerByte
    _LeerByte->_LeerBit
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    7352
                                             22 COMRAM     2     2      0
                           _BorraLCD
                           _ColorRGB
                         _Conversion
                      _DireccionaLCD
                       _EscribeLCD_c
                _GuardarDatoEnEEPROM
                      _InicializaLCD
                           _LeerHT11
                    _MensajeLCD_Word
                    _TransmitirDatos
                            ___lbdiv
                            ___lbmod
                   _leerDatoEnEEPROM
 ---------------------------------------------------------------------------------
 (1) _leerDatoEnEEPROM                                     2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TransmitirDatos                                     14    10      4    4752
                                             10 COMRAM    12     8      4
                           _BorraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
                    _MensajeLCD_Word
                         _Transmitir
                            ___awdiv
                            ___lbdiv
                            ___lbmod
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     615
                                              2 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     922
                                              2 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___lbmod                                              4     3      1     387
                                              2 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) ___lbdiv                                              4     3      1     390
                                              2 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Transmitir                                           1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MensajeLCD_Word                                      4     3      1     650
                                              6 COMRAM     4     3      1
                       _EscribeLCD_c
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               3     1      2     166
                                              2 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _EscribeLCD_c                                         1     1      0      90
                                              5 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _DireccionaLCD                                        1     1      0      90
                                              5 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _LeerHT11                                             1     1      0      75
                                              6 COMRAM     1     1      0
                           _LeerByte
 ---------------------------------------------------------------------------------
 (2) _LeerByte                                             3     3      0      75
                                              3 COMRAM     3     3      0
                            _LeerBit
 ---------------------------------------------------------------------------------
 (3) _LeerBit                                              1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     150
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0      75
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _EnviaDato                                            1     1      0      60
                                              4 COMRAM     1     1      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _RetardoLCD                                           2     2      0      15
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GuardarDatoEnEEPROM                                  3     0      3     196
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _Conversion                                           1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ColorRGB                                             2     0      2     384
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  2     2      0       0
                                              0 COMRAM     2     2      0
                            _Recibir
 ---------------------------------------------------------------------------------
 (7) _Recibir                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _ColorRGB
   _Conversion
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _GuardarDatoEnEEPROM
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerHT11
     _LeerByte
       _LeerBit
   _MensajeLCD_Word
     _EscribeLCD_c
     _strlen
   _TransmitirDatos
     _BorraLCD
     _DireccionaLCD
     _EscribeLCD_c
     _MensajeLCD_Word
     _Transmitir
     ___awdiv
     ___lbdiv
     ___lbmod
     ___lwdiv
     ___lwmod
     ___wmul
   ___lbdiv
   ___lbmod
   _leerDatoEnEEPROM

 _ISR (ROOT)
   _Recibir

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      34        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     18      20       1       34.0%
BITBIGSFRll         22      0       0      32        0.0%
BITBIGSFRhhhlh      19      0       0      21        0.0%
BITBIGSFRhhlhhh      E      0       0      23        0.0%
BITBIGSFRhhhh        D      0       0      20        0.0%
BITBIGSFRhhllhh      8      0       0      29        0.0%
BITBIGSFRhhlhlh      8      0       0      25        0.0%
BITBIGSFRhhlhhl      7      0       0      24        0.0%
BITBIGSFRlh          6      0       0      31        0.0%
BITBIGSFRhhlll       5      0       0      30        0.0%
BITBIGSFRhhllhh      4      0       0      27        0.0%
BITBIGSFRhhllhh      2      0       0      28        0.0%
BITBIGSFRhhllhh      1      0       0      26        0.0%
BITBIGSFRhhhll       1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      20      33        0.0%
DATA                 0      0      20       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed May 24 16:38:37 2023

                          _A 001B                            _B 0019            Transmitir@BufferT 0003  
                         _GO 7E11                           _RD 7D30                           u50 1096  
                         _WR 7D31                 ___awdiv@sign 0008                   EnviaDato@a 0005  
        ___wmul@multiplicand 0005                          l201 104C                          l212 106E  
              _InicializaLCD 0F7A                          l217 1092                          l241 099A  
                        l236 0858                          l263 11D4                          l269 115A  
                        l198 1042                          l771 0F2E                          l781 0F70  
                        _GIE 7F97                          _RC0 7C10                          _RC1 7C11  
                        _RC2 7C12                          _RD0 7C18                          _RD1 7C19  
                        _RC4 7C14                          _RD2 7C1A                          _RD3 7C1B  
                        _RD4 7C1C                          u620 0E42                          u700 0F08  
                        _ISR 0008                          u810 0CEA                          u730 0F52  
                        u660 0FD8                          u830 0D0A                          u850 0D2A  
                        u770 0CAA                          u930 0C42                          u940 0C44  
                        u870 0D4A                          u790 0CCA                          u950 0C50  
                        u960 0C52                          u890 0D6A                          u970 0C86  
                        u997 0ABE                          _Hum 001E             TransmitirDatos@n 0011  
                        wreg 0FE8                         ?_ISR 0001                         l1051 0E84  
                       l1053 0E94                         l1061 0ECA                         l1055 0EB6  
                       l1135 116C                         l1057 0EC0                         l1145 11F8  
                       l1099 1082                         l1613 10F6                         l1701 0FF2  
                       l1615 10F8                         l1623 1000                         l1801 0D1E  
                       l1627 101A                         l1643 0E10                         l1715 10E8  
                       l1707 10D0                         l1813 0D5E                         l1807 0D3E  
                       l1655 0E36                         l1671 0E68                         l1727 0EFC  
                       l1657 0E3E                         l1649 0E20                         l1729 0F04  
                       l1833 087A                         l1675 0E76                         l1667 0E5E  
                       l1739 0F24                         l1755 0F66                         l1747 0F46  
                       l1843 08D4                         l1685 0FCE                         l1749 0F4E  
                       l1837 08A6                         l1829 0866                         l1845 08FE  
                       l1783 0CBE                         l1777 0C9E                         l1697 0FEA  
                       l1689 0FD4                         l1795 0CFE                         l1789 0CDE  
                       l1991 0C5C                         l1967 0B76                         l1993 0C70  
                       l1979 0BEC                         _CFGS 7D36                         _EEIF 7D0C  
                       STR_1 0801                         STR_2 080E                         STR_3 0818  
                       STR_4 081E                         u1007 0B64                         u1017 0B88  
                       u1107 1084                         u1027 0BA4                         u1117 0E8A  
                       u1037 0BC0                         u1127 0E9A                         u1047 0BDC  
                       u1137 0EAA                         u1057 0BF6                         u1147 0EB8  
                       u1067 0C0C                         u1157 0EC2                         u1077 1038  
                       _LATB 0F8A                         u1167 11EC                         u1087 1048  
                       u1097 1074                         _RCIF 7CF5                         _RBPU 7F8F  
                       _TMR0 0FD6                         _TRMT 7D61                         _WREN 7D32  
             ??_EscribeLCD_c 0006                         _Temp 001F          _GuardarDatoEnEEPROM 113E  
                       _main 0AB4                         btemp 0021                         prodh 0FF4  
                       prodl 0FF3                         start 000E              __end_of_LeerBit 109A  
               ___param_bank 0000                        ??_ISR 0001              __end_of_Recibir 1212  
       ?_GuardarDatoEnEEPROM 0003               ?_InicializaLCD 0001                        ?_main 0001  
            __end_of___awdiv 0E80              __end_of___lbdiv 0FF6                        _ADRES 0FC3  
                      _EEADR 0FA9                EscribeLCD_c@a 0006              __end_of___lbmod 10F0  
                      _EEPGD 7D37                        _T0CON 0FD5              ___awdiv@divisor 0005  
                      _LATC2 7C5A                        _LATD6 7C66                        _LATD7 7C67  
            __end_of___lwdiv 0F38              __end_of___lwmod 0F7A                        i2l289 0DF8  
            ___awdiv@counter 0007                        _RCREG 0FAE                        _RCSTA 0FAB  
                      _SPBRG 0FAF                        _TRISA 0F92                        _TRISB 0F93  
                      _TRISC 0F94                        _TRISD 0F95                        _TXREG 0FAD  
                      _TXSTA 0FAC       GuardarDatoEnEEPROM@dir 0003                        tablat 0FF5  
                 _Conversion 11C6                  _HabilitaLCD 11E8                        ttemp5 0022  
                      ttemp6 0025                        ttemp7 0029                        status 0FD8  
                      wtemp8 0022              ___lbdiv@divisor 0003              ___lbdiv@counter 0005  
           __end_of_BorraLCD 11C6             __end_of_LeerHT11 106A             __end_of_ColorRGB 0D72  
            __initialization 109A             __end_of_LeerByte 1186                 __end_of_main 0C8A  
   __end_of_leerDatoEnEEPROM 11E8        ??_GuardarDatoEnEEPROM 0006                       ??_main 0017  
              __activetblptr 0002                   _TempEEPROM 001D                       _ADCON0 0FC2  
                     _ADCON1 0FC1                       _ADCON2 0FC0                       _EEDATA 0FA8  
             DireccionaLCD@a 0006                       _EECON2 0FA7             ___awdiv@dividend 0003  
                     i2l1603 0DC4                       i2l1605 0DE0                       i2l1593 0D92  
                     i2l1595 0DA2                       i2l1597 0DAA                       i2l1589 0D8C  
                     i2l1599 0DB2                       _OSCCON 0FD3                       _TMR0IE 7F95  
                     _TMR0IF 7F92                       _TMR0ON 7EAF                       _TRISC2 7CA2  
                  ??_LeerBit 0003        __end_of_DireccionaLCD 11B2                   _RetardoLCD 0E80  
                  ??_Recibir 0001          TransmitirDatos@Ent1 000B          TransmitirDatos@Ent2 000D  
        TransmitirDatos@Simb 0013                       ___wmul 1118                    ??___awdiv 0007  
                  ??___lbdiv 0004                    ??___lbmod 0004                    ??___lwdiv 0007  
                  ??___lwmod 0007              ??_InicializaLCD 0006                       clear_0 10B2  
           ___awdiv@quotient 0009      GuardarDatoEnEEPROM@dato 0005                       isa$std 0001  
       __end_of_EscribeLCD_c 119C                       _strlen 10F0                 __pdataCOMRAM 0020  
               __mediumconst 0000                       tblptrh 0FF7                       tblptrl 0FF6  
                     tblptru 0FF8                   _Transmitir 11F6             ___lbdiv@dividend 0004  
                ?_Conversion 0001              ___lbmod@divisor 0003                   __accesstop 0060  
    __end_of__initialization 10B8              ___lbmod@counter 0005                ___rparam_used 0001  
             __pcstackCOMRAM 0001            __end_of_EnviaDato 120A             ___lbdiv@quotient 0006  
                  ?_BorraLCD 0001                    ?_LeerHT11 0001                    ?_ColorRGB 0003  
                  ?_LeerByte 0001                  ?_RetardoLCD 0001                  RetardoLCD@a 0004  
                    ?___wmul 0003                      _BAUDCON 0FB8                      ?_strlen 0003  
                    i2u54_40 0D82                      i2u55_45 0D84                   ??_BorraLCD 0006  
                 ??_LeerHT11 0007                   ??_ColorRGB 0005                  ?_Transmitir 0001  
          ??_MensajeLCD_Word 0008                   ??_LeerByte 0004                 ?_HabilitaLCD 0001  
                    _LeerBit 106A                      _Recibir 120A                      __Hparam 0000  
                    __Lparam 0000         TransmitirDatos@TempC 0015                      ___awdiv 0DFC  
                    ___lbdiv 0FBC                      ___lbmod 10C6                      ___lwdiv 0EE6  
                    ___lwmod 0F38            ?_leerDatoEnEEPROM 0003                 __psmallconst 0800  
                    __pcinit 109A                      __ramtop 0800                      __ptext0 0AB4  
                    __ptext1 11DA                      __ptext2 0824                      __ptext3 1118  
                    __ptext4 0F38                      __ptext5 0EE6                      __ptext6 10C6  
         ??_leerDatoEnEEPROM 0005                      __ptext7 0FBC                      __ptext8 0DFC  
                    __ptext9 11F6               __pintcode_body 0D72         end_of_initialization 10B8  
            Conversion@canal 0003                __Lmediumconst 0000                      int_func 0D72  
               _EscribeLCD_c 1186  __end_of_GuardarDatoEnEEPROM 1164            ??_TransmitirDatos 000F  
                    postinc0 0FEE                      strlen@s 0003             ___lbmod@dividend 0004  
                  LeerByte@i 0006                 ??_Conversion 0003                  ___lbmod@rem 0006  
             __end_of___wmul 113E                __pidataCOMRAM 1212        __end_of_InicializaLCD 0FBC  
         __end_of_Conversion 11DA                    _EnviaDato 1202               __end_of_strlen 1118  
        start_initialization 109A                  __end_of_ISR 0DFC                 ??_RetardoLCD 0003  
                   ??___wmul 0007              _MensajeLCD_Word 0FF6                     ??_strlen 0005  
                 ?_EnviaDato 0001                  __pbssCOMRAM 0019           __end_of_RetardoLCD 0EE6  
           MensajeLCD_Word@a 0007             MensajeLCD_Word@i 0009                 ??_Transmitir 0003  
                   ?_LeerBit 0001                _DireccionaLCD 119C                     ?_Recibir 0001  
           ___lwdiv@dividend 0003                    __pintcode 0008                     ?___awdiv 0003  
                   ?___lbdiv 0003                     ?___lbmod 0003                     ?___lwdiv 0003  
                   ?___lwmod 0003           __end_of_Transmitir 1202                  __smallconst 0800  
           ___lwdiv@quotient 0007              _TransmitirDatos 0824               ___wmul@product 0007  
             ?_DireccionaLCD 0001                     i2u117_47 0DEA      __end_of_MensajeLCD_Word 1030  
          ___wmul@multiplier 0003                  ??_EnviaDato 0005                     _BorraLCD 11B2  
                   _LeerHT11 1030                     _ColorRGB 0C8A                     _LeerByte 1164  
        leerDatoEnEEPROM@dir 0003                     __Hrparam 0000                     __Lrparam 0000  
    __end_of_TransmitirDatos 0AB4              ___lwdiv@divisor 0005              ___lwdiv@counter 0009  
                   __ptext10 0FF6                     __ptext11 10F0                     __ptext20 0E80  
                   __ptext12 1186                     __ptext21 11E8                     __ptext13 119C  
                   __ptext22 113E                     __ptext14 1030                     __ptext23 11C6  
                   __ptext15 1164                     __ptext24 0C8A                     __ptext16 106A  
                   __ptext17 0F7A                     __ptext26 120A                     __ptext18 11B2  
                   __ptext19 1202              ??_DireccionaLCD 0006                     _interfaz 0020  
                   isa$xinst 0000             ?_MensajeLCD_Word 0007                     int$flags 0021  
           _leerDatoEnEEPROM 11DA                     intlevel2 0000                ??_HabilitaLCD 0003  
           ___lwmod@dividend 0003                  ColorRGB@val 0003              ___lwmod@divisor 0005  
                   strlen@cp 0005              ___lwmod@counter 0007             ?_TransmitirDatos 000B  
              ?_EscribeLCD_c 0001                   LeerBit@res 0003          __end_of_HabilitaLCD 11F6  
                LeerByte@res 0005  
